name: Tests Backend

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    paths:
      - 'src/back/**'
      - 'src/components/**'
      - 'src/yaml_generator/**'
      - 'src/cloud_ops/**'
      - 'resources/back/**'
      - 'test/back/back/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      tests-to-run: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          api:
            - 'src/back/**'
            - 'src/components/**'
            - 'test/back/back/integration/api/**'
            - 'resources/back/**'
          yaml-generator:
            - 'src/yaml_generator/**'
            - 'src/components/**'
            - 'test/back/back/integration/yaml_generator/**'
            - 'resources/back/**'
          cloud-ops:
            - 'src/cloud_ops/**'
            - 'src/components/**'
            - 'test/back/back/integration/cloud_ops/**'
            - 'resources/back/**'

  tests:
    needs: changes
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        test-to-run: ${{ fromJSON(needs.changes.outputs.tests-to-run) }}
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install clojure cli
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: 1.11.1.1273

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/deps.edn') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 7
      - name: Start localstack
        run: |
          pip install localstack awscli-local[ver1] # install LocalStack cli and awslocal
          docker pull localstack/localstack         # Make sure to pull the latest version of the image
          localstack start -d                       # Start LocalStack in the background
          echo "Waiting for LocalStack startup..."  # Wait 30 seconds for the LocalStack container
          localstack wait -t 30                     # to become ready before timing out 
          echo "Startup complete"          ck

      - name: Run test ${{ matrix.test-to-run }}
        run: clojure -M:test ${{ matrix.test-to-run }}
