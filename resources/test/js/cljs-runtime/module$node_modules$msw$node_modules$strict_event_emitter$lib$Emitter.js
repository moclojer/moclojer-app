shadow$provide.module$node_modules$msw$node_modules$strict_event_emitter$lib$Emitter=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Emitter=void 0;const MemoryLeakError_1=require("module$node_modules$msw$node_modules$strict_event_emitter$lib$MemoryLeakError");class Emitter{constructor(){this.events=new Map;this.maxListeners=Emitter.defaultMaxListeners;this.hasWarnedAboutPotentialMemoryLeak=!1}static listenerCount(emitter,eventName){return emitter.listenerCount(eventName)}_emitInternalEvent(internalEventName,
eventName,listener){this.emit(internalEventName,...[eventName,listener])}_getListeners(eventName){return this.events.get(eventName)||[]}_removeListener(listeners,listener){listener=listeners.indexOf(listener);-1<listener&&listeners.splice(listener,1);return[]}_wrapOnceListener(eventName,listener){const onceListener=(...data)=>{this.removeListener(eventName,onceListener);listener.apply(this,data)};return onceListener}setMaxListeners(maxListeners){this.maxListeners=maxListeners;return this}getMaxListeners(){return this.maxListeners}eventNames(){return Array.from(this.events.keys())}emit(eventName,
...data){eventName=this._getListeners(eventName);eventName.forEach(listener=>{listener.apply(this,data)});return 0<eventName.length}addListener(eventName,listener){this._emitInternalEvent("newListener",eventName,listener);listener=this._getListeners(eventName).concat(listener);this.events.set(eventName,listener);0<this.maxListeners&&this.listenerCount(eventName)>this.maxListeners&&!this.hasWarnedAboutPotentialMemoryLeak&&(this.hasWarnedAboutPotentialMemoryLeak=!0,eventName=new MemoryLeakError_1.MemoryLeakError(this,
eventName,this.listenerCount(eventName)),console.warn(eventName));return this}on(eventName,listener){return this.addListener(eventName,listener)}once(eventName,listener){return this.addListener(eventName,this._wrapOnceListener(eventName,listener))}prependListener(eventName,listener){const listeners=this._getListeners(eventName);0<listeners.length?(listener=[listener].concat(listeners),this.events.set(eventName,listener)):this.events.set(eventName,listeners.concat(listener));return this}prependOnceListener(eventName,
listener){return this.prependListener(eventName,this._wrapOnceListener(eventName,listener))}removeListener(eventName,listener){const listeners=this._getListeners(eventName);0<listeners.length&&(this._removeListener(listeners,listener),this.events.set(eventName,listeners),this._emitInternalEvent("removeListener",eventName,listener));return this}off(eventName,listener){return this.removeListener(eventName,listener)}removeAllListeners(eventName){eventName?this.events.delete(eventName):this.events.clear();
return this}listeners(eventName){return Array.from(this._getListeners(eventName))}listenerCount(eventName){return this._getListeners(eventName).length}rawListeners(eventName){return this.listeners(eventName)}}exports.Emitter=Emitter;Emitter.defaultMaxListeners=10}
//# sourceMappingURL=module$node_modules$msw$node_modules$strict_event_emitter$lib$Emitter.js.map
