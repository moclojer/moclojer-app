{
"version":3,
"file":"module$node_modules$object_DOT_assign$polyfill.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3G,IAAIC,eAAiBH,OAAA,CAAQ,sDAAR,CAArB,CAwBII,2BAA6BA,QAAS,EAAG,CAC5C,GAAI,CAACC,MAAOC,CAAAA,MAAZ,EAAsB,CAACD,MAAOE,CAAAA,iBAA9B,CACC,MAAO,CAAA,CAMR,KAAIC,QAAUH,MAAOE,CAAAA,iBAAP,CAAyB,CAAE,EAAG,CAAL,CAAzB,CACd,IAAI,CACHF,MAAOC,CAAAA,MAAP,CAAcE,OAAd,CAAuB,IAAvB,CADG,CAEF,MAAOC,CAAP,CAAU,CACX,MAAsB,GAAtB,GAAOD,OAAA,CAAQ,CAAR,CADI,CAGZ,MAAO,CAAA,CAdqC,CAiB7CP,OAAOC,CAAAA,OAAP,CAAiBQ,QAAoB,EAAG,CACvC,GAAI,CAACL,MAAOC,CAAAA,MAAZ,CACC,MAAOH,eAxCR,IAAKE,MAAOC,CAAAA,MAAZ,CAAA,CAUA,IAFA,IAAIK,QAAU,sBAAA,CAAA,KAAA,CAAA,EAAA,CAAd;AACIC,IAAM,EADV,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,OAAQG,CAAAA,MAA5B,CAAoC,EAAED,CAAtC,CACCD,GAAA,CAAID,OAAA,CAAQE,CAAR,CAAJ,CAAA,CAAkBF,OAAA,CAAQE,CAAR,CAEfE,QAAAA,CAAMV,MAAOC,CAAAA,MAAP,CAAc,EAAd,CAAkBM,GAAlB,CACNI,IAAAA,CAAS,EACb,KAASC,wBAAT,GAAcF,QAAd,CACCC,GAAA,EAAUC,wBAEX,KAAA,yBAXUC,sBAWV,GAAeF,GAlBf,CAAA,IACC,yBAAA,CAAO,CAAA,CA4CR,OAHI,yBAGJ,EAAIZ,0BAAA,EAAJ,CACQD,cADR,CAGOE,MAAOC,CAAAA,MAVyB,CA5CmE;",
"sources":["node_modules/object_DOT_assign/polyfill.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$object_DOT_assign$polyfill\"] = function(global,require,module,exports) {\n'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","implementation","assignHasPendingExceptions","Object","assign","preventExtensions","thrower","e","module.exports","letters","map","i","length","obj","actual","k","str"]
}
