{
"version":3,
"file":"module$node_modules$$testing_library$dom$dist$suggestions.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@testing-library/dom/dist/suggestions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$testing_library$dom$dist$suggestions\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSuggestedQuery = getSuggestedQuery;\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\nvar _matches = require(\"./matches\");\nvar _getNodeText = require(\"./get-node-text\");\nvar _config = require(\"./config\");\nvar _roleHelpers = require(\"./role-helpers\");\nvar _labelHelpers = require(\"./label-helpers\");\nconst normalize = (0, _matches.getDefaultNormalizer)();\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction getRegExpMatcher(string) {\n  return new RegExp(escapeRegExp(string.toLowerCase()), 'i');\n}\nfunction makeSuggestion(queryName, element, content, {\n  variant,\n  name\n}) {\n  let warning = '';\n  const queryOptions = {};\n  const queryArgs = [['Role', 'TestId'].includes(queryName) ? content : getRegExpMatcher(content)];\n  if (name) {\n    queryOptions.name = getRegExpMatcher(name);\n  }\n  if (queryName === 'Role' && (0, _roleHelpers.isInaccessible)(element)) {\n    queryOptions.hidden = true;\n    warning = `Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    `;\n  }\n  if (Object.keys(queryOptions).length > 0) {\n    queryArgs.push(queryOptions);\n  }\n  const queryMethod = `${variant}By${queryName}`;\n  return {\n    queryName,\n    queryMethod,\n    queryArgs,\n    variant,\n    warning,\n    toString() {\n      if (warning) {\n        console.warn(warning);\n      }\n      let [text, options] = queryArgs;\n      text = typeof text === 'string' ? `'${text}'` : text;\n      options = options ? `, { ${Object.entries(options).map(([k, v]) => `${k}: ${v}`).join(', ')} }` : '';\n      return `${queryMethod}(${text}${options})`;\n    }\n  };\n}\nfunction canSuggest(currentMethod, requestedMethod, data) {\n  return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());\n}\nfunction getSuggestedQuery(element, variant = 'get', method) {\n  var _getImplicitAriaRoles;\n  // don't create suggestions for script and style elements\n  if (element.matches((0, _config.getConfig)().defaultIgnore)) {\n    return undefined;\n  }\n\n  //We prefer to suggest something else if the role is generic\n  const role = element.getAttribute('role') ?? ((_getImplicitAriaRoles = (0, _roleHelpers.getImplicitAriaRoles)(element)) == null ? void 0 : _getImplicitAriaRoles[0]);\n  if (role !== 'generic' && canSuggest('Role', method, role)) {\n    return makeSuggestion('Role', element, role, {\n      variant,\n      name: (0, _domAccessibilityApi.computeAccessibleName)(element, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })\n    });\n  }\n  const labelText = (0, _labelHelpers.getLabels)(document, element).map(label => label.content).join(' ');\n  if (canSuggest('LabelText', method, labelText)) {\n    return makeSuggestion('LabelText', element, labelText, {\n      variant\n    });\n  }\n  const placeholderText = element.getAttribute('placeholder');\n  if (canSuggest('PlaceholderText', method, placeholderText)) {\n    return makeSuggestion('PlaceholderText', element, placeholderText, {\n      variant\n    });\n  }\n  const textContent = normalize((0, _getNodeText.getNodeText)(element));\n  if (canSuggest('Text', method, textContent)) {\n    return makeSuggestion('Text', element, textContent, {\n      variant\n    });\n  }\n  if (canSuggest('DisplayValue', method, element.value)) {\n    return makeSuggestion('DisplayValue', element, normalize(element.value), {\n      variant\n    });\n  }\n  const alt = element.getAttribute('alt');\n  if (canSuggest('AltText', method, alt)) {\n    return makeSuggestion('AltText', element, alt, {\n      variant\n    });\n  }\n  const title = element.getAttribute('title');\n  if (canSuggest('Title', method, title)) {\n    return makeSuggestion('Title', element, title, {\n      variant\n    });\n  }\n  const testId = element.getAttribute((0, _config.getConfig)().testIdAttribute);\n  if (canSuggest('TestId', method, testId)) {\n    return makeSuggestion('TestId', element, testId, {\n      variant\n    });\n  }\n  return undefined;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","escapeRegExp","string","replace","makeSuggestion","queryName","element","content","variant","name","warning","queryOptions","queryArgs","includes","RegExp","toLowerCase","_roleHelpers","isInaccessible","hidden","Object","keys","length","push","queryMethod","toString","console","warn","text","options","entries","map","k","v","join","canSuggest","currentMethod","requestedMethod","data","defineProperty","value","getSuggestedQuery","method","_getImplicitAriaRoles","matches","_config","getConfig","defaultIgnore","role","getAttribute","getImplicitAriaRoles","_domAccessibilityApi","computeAccessibleName","computedStyleSupportsPseudoElements","labelText","_labelHelpers","getLabels","document","label","placeholderText","textContent","normalize","_getNodeText","getNodeText","alt","title","testId","testIdAttribute","_matches","getDefaultNormalizer"]
}
