{
"version":3,
"file":"module$node_modules$$testing_library$dom$dist$label_helpers.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@testing-library/dom/dist/label-helpers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$testing_library$dom$dist$label_helpers\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLabelContent = getLabelContent;\nexports.getLabels = getLabels;\nexports.getRealLabels = getRealLabels;\nvar _helpers = require(\"./helpers\");\nconst labelledNodeNames = ['button', 'meter', 'output', 'progress', 'select', 'textarea', 'input'];\nfunction getTextContent(node) {\n  if (labelledNodeNames.includes(node.nodeName.toLowerCase())) {\n    return '';\n  }\n  if (node.nodeType === _helpers.TEXT_NODE) return node.textContent;\n  return Array.from(node.childNodes).map(childNode => getTextContent(childNode)).join('');\n}\nfunction getLabelContent(element) {\n  let textContent;\n  if (element.tagName.toLowerCase() === 'label') {\n    textContent = getTextContent(element);\n  } else {\n    textContent = element.value || element.textContent;\n  }\n  return textContent;\n}\n\n// Based on https://github.com/eps1lon/dom-accessibility-api/pull/352\nfunction getRealLabels(element) {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- types are not aware of older browsers that don't implement `labels`\n  if (element.labels !== undefined) {\n    return element.labels ?? [];\n  }\n  if (!isLabelable(element)) return [];\n  const labels = element.ownerDocument.querySelectorAll('label');\n  return Array.from(labels).filter(label => label.control === element);\n}\nfunction isLabelable(element) {\n  return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || element.tagName === 'INPUT' && element.getAttribute('type') !== 'hidden';\n}\nfunction getLabels(container, element, {\n  selector = '*'\n} = {}) {\n  const ariaLabelledBy = element.getAttribute('aria-labelledby');\n  const labelsId = ariaLabelledBy ? ariaLabelledBy.split(' ') : [];\n  return labelsId.length ? labelsId.map(labelId => {\n    const labellingElement = container.querySelector(`[id=\"${labelId}\"]`);\n    return labellingElement ? {\n      content: getLabelContent(labellingElement),\n      formControl: null\n    } : {\n      content: '',\n      formControl: null\n    };\n  }) : Array.from(getRealLabels(element)).map(label => {\n    const textToMatch = getLabelContent(label);\n    const formControlSelector = 'button, input, meter, output, progress, select, textarea';\n    const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter(formControlElement => formControlElement.matches(selector))[0];\n    return {\n      content: textToMatch,\n      formControl: labelledFormControl\n    };\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getTextContent","node","labelledNodeNames","includes","nodeName","toLowerCase","nodeType","_helpers","TEXT_NODE","textContent","Array","from","childNodes","map","childNode","join","getLabelContent","element","tagName","value","getRealLabels","undefined","labels","isLabelable","ownerDocument","querySelectorAll","filter","label","control","test","getAttribute","Object","defineProperty","getLabels","container","selector","ariaLabelledBy","labelsId","split","length","labelId","labellingElement","querySelector","content","formControl","textToMatch","labelledFormControl","formControlSelector","formControlElement","matches"]
}
