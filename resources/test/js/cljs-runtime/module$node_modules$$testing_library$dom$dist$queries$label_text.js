shadow$provide.module$node_modules$$testing_library$dom$dist$queries$label_text=function(global,require,module,exports){function queryAllLabels(container){return Array.from(container.querySelectorAll("label,input")).map(node=>({node,textToMatch:(0,_labelHelpers.getLabelContent)(node)})).filter(({textToMatch})=>null!==textToMatch)}Object.defineProperty(exports,"__esModule",{value:!0});exports.queryByLabelText=exports.queryAllByLabelText=exports.getByLabelText=exports.getAllByLabelText=exports.findByLabelText=
exports.findAllByLabelText=void 0;var _config=require("module$node_modules$$testing_library$dom$dist$config"),_helpers=require("module$node_modules$$testing_library$dom$dist$helpers"),_labelHelpers=require("module$node_modules$$testing_library$dom$dist$label_helpers"),_allUtils=require("module$node_modules$$testing_library$dom$dist$queries$all_utils");const queryAllLabelsByText=(container,text,{exact=!0,trim,collapseWhitespace,normalizer}={})=>{const matcher=exact?_allUtils.matches:_allUtils.fuzzyMatches,
matchNormalizer=(0,_allUtils.makeNormalizer)({collapseWhitespace,trim,normalizer});return queryAllLabels(container).filter(({node,textToMatch})=>matcher(textToMatch,node,text,matchNormalizer)).map(({node})=>node)},queryAllByLabelText=(container,text,{selector="*",exact=!0,collapseWhitespace,trim,normalizer}={})=>{(0,_helpers.checkContainerType)(container);const matcher=exact?_allUtils.matches:_allUtils.fuzzyMatches,matchNormalizer=(0,_allUtils.makeNormalizer)({collapseWhitespace,trim,normalizer});
exact=Array.from(container.querySelectorAll("*")).filter(element=>(0,_labelHelpers.getRealLabels)(element).length||element.hasAttribute("aria-labelledby")).reduce((labelledElements,labelledElement)=>{const labelList=(0,_labelHelpers.getLabels)(container,labelledElement,{selector});labelList.filter(label=>!!label.formControl).forEach(label=>{matcher(label.content,label.formControl,text,matchNormalizer)&&label.formControl&&labelledElements.push(label.formControl)});const labelsValue=labelList.filter(label=>
!!label.content).map(label=>label.content);matcher(labelsValue.join(" "),labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement);1<labelsValue.length&&labelsValue.forEach((labelValue,index)=>{matcher(labelValue,labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement);labelValue=[...labelsValue];labelValue.splice(index,1);1<labelValue.length&&matcher(labelValue.join(" "),labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement)});return labelledElements},
[]).concat((0,_allUtils.queryAllByAttribute)("aria-label",container,text,{exact,normalizer:matchNormalizer}));return Array.from(new Set(exact)).filter(element=>element.matches(selector))};global=(container,text,...rest)=>{const els=queryAllByLabelText(container,text,...rest);if(!els.length){rest=queryAllLabelsByText(container,text,...rest);if(rest.length){rest=rest.map(label=>{label=(label=label.getAttribute("for"))?(label=container.querySelector(`[id="${label}"]`))?label.tagName.toLowerCase():null:
null;return label}).filter(tagName=>!!tagName);if(rest.length)throw(0,_config.getConfig)().getElementError(rest.map(tagName=>`Found a label with the text of: ${text}, however the element associated with this label (<${tagName} />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <${tagName} />, you can use aria-label or aria-labelledby instead.`).join("\n\n"),container);throw(0,_config.getConfig)().getElementError(`Found a label with the text of: ${text}, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.`,
container);}throw(0,_config.getConfig)().getElementError(`Unable to find a label with the text of: ${text}`,container);}return els};require=(c,text)=>`Found multiple elements with the text of: ${text}`;module=(0,_allUtils.wrapSingleQueryWithSuggestion)((0,_allUtils.makeSingleQuery)(queryAllByLabelText,require),queryAllByLabelText.name,"query");exports.queryByLabelText=module;require=(0,_allUtils.makeSingleQuery)(global,require);module=(0,_allUtils.makeFindQuery)((0,_allUtils.wrapAllByQueryWithSuggestion)(global,
global.name,"findAll"));exports.findAllByLabelText=module;module=(0,_allUtils.makeFindQuery)((0,_allUtils.wrapSingleQueryWithSuggestion)(require,global.name,"find"));exports.findByLabelText=module;module=(0,_allUtils.wrapAllByQueryWithSuggestion)(global,global.name,"getAll");exports.getAllByLabelText=module;global=(0,_allUtils.wrapSingleQueryWithSuggestion)(require,global.name,"get");exports.getByLabelText=global;global=(0,_allUtils.wrapAllByQueryWithSuggestion)(queryAllByLabelText,queryAllByLabelText.name,
"queryAll");exports.queryAllByLabelText=global}
//# sourceMappingURL=module$node_modules$$testing_library$dom$dist$queries$label_text.js.map
