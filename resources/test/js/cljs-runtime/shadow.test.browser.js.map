{"version":3,"sources":["shadow/test/browser.cljs"],"mappings":";AASA,4BAAA,5BAAMA;AAAN,sCACM,2CAAA,AAAA,8GAAA,2CAAA,6DAAA,2CAAA,oDAAAC,gEAAA,sDAAA,mFAAA,sGAAA,AAAA,2KAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,8GAAA,AAAA,8GAAA,AAAA,uCAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,iEAAA,AAAA,AAAAA,+EAAA,SAAA,wGAAA,AAAA,iLAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,8GAAA,AAAA,oHAAA,AAAA,uCAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,mEAAA,AAAA,AAAAA,iFAAA,yBAAA,AAAA,gHAAA,2CAAA,sDAAA,mFAAA,yFAAA,AAAA,iJAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,gHAAA,AAAA,sFAAA,AAAA,uCAAA,AAAA,KAAA,AAAA,IAAA,AAAA,IAAA,AAAA,IAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,oDAAA,AAAA,AAAAA,kEAAA,yBAAA,AAAA,0HAAA,2CAAA,6DAAA,2CAAA,oDAAAC,qEAAA,sDAAA,mFAAA,iHAAA,AAAA,kMAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,0HAAA,AAAA,2HAAA,AAAA,4CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,4EAAA,AAAA,AAAAA,0FAAA,SAAA,8GAAA,AAAA,6LAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,0HAAA,AAAA,sHAAA,AAAA,4CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,yEAAA,AAAA,AAAAA,uFAAA,SAAA,iHAAA,AAAA,iMAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,0HAAA,AAAA,2HAAA,AAAA,4CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,4EAAA,AAAA,AAAAA,0FAAA,x5SACA,AAACC;;AAEL,OAACC,wDAAiB,gEAAA,hEAACC;;AAErB,2BAAA,3BAAMC,8DAAMC;AAAZ,AAEE,QAACA,qCAAAA,uCAAAA;;AAGH,2BAAA,3BAAeC;AAAf,AACE,gDAAA,mFAAA,nIAACC;;AACD,OAACf","names":["shadow.test.browser/start","app.integration.login-view-test/cljs-test-each-fixtures","app.integration.login-view-test/auth-view-email-send-error-test","app.integration.login-view-test/auth-view-email-send-success-test","app.unit.components.button-test/props-classes-test","app.integration.login-auth-view-test/cljs-test-each-fixtures","app.integration.login-auth-view-test/login-auth-view-test-fail-workos-test","app.integration.login-auth-view-test/login-auth-view-test-fail-api-test","app.integration.login-auth-view-test/login-auth-view-test-success-api-test","shadow.test.env/reset-test-data!","shadow.test.run_all_tests","cljs_test_display.core.init_BANG_","shadow.test.browser/stop","done","shadow.test.browser/init","shadow.dom.append"],"sourcesContent":["(ns shadow.test.browser\n  \"generic browser test runner\"\n  {:dev/always true}\n  (:require\n    [shadow.test :as st]\n    [shadow.test.env :as env]\n    [shadow.dom :as dom]\n    [cljs-test-display.core :as ctd]))\n\n(defn start []\n  (-> (env/get-test-data)\n      (env/reset-test-data!))\n\n  (st/run-all-tests (ctd/init! \"test-root\")))\n\n(defn stop [done]\n  ;; FIXME: determine if async tests are still pending\n  (done))\n\n;; not sure we need to do something once?\n(defn ^:export init []\n  (dom/append [:div#test-root])\n  (start))\n"]}