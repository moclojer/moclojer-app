{
"version":3,
"file":"module$node_modules$is_regex$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3FC,MAAAA,CAAYH,OAAA,CAAQ,yCAAR,CACZI,QAAAA,CAAiBJ,OAAA,CAAQ,2CAAR,CAAA,EAMrB,IAAII,OAAJ,CAAoB,CACnB,IAAAC,IAAMF,MAAA,CAAU,iCAAV,CACN,KAAAG,MAAQH,MAAA,CAAU,uBAAV,CACR,KAAAI,cAAgB,EAEZC,QAAAA,CAAmBA,QAAS,EAAG,CAClC,KAAMD,cAAN,CADkC,CAGnC,KAAAE,eAAiB,CAChBC,SAAUF,OADM,CAEhBG,QAASH,OAFO,CAKiB,SAAlC,GAAI,MAAOI,OAAOC,CAAAA,WAAlB,GACCJ,cAAA,CAAeG,MAAOC,CAAAA,WAAtB,CADD;AACsCL,OADtC,CAbmB,CAkBpB,IAAIM,UAAYX,MAAA,CAAU,2BAAV,CAAhB,CACIY,KAAOC,MAAOC,CAAAA,wBAGlBhB,OAAOC,CAAAA,OAAP,CAAiBE,OAAA,CAEdc,QAAgB,CAACC,KAAD,CAAQ,CACzB,GAAI,CAACA,KAAL,EAA+B,QAA/B,GAAc,MAAOA,MAArB,CACC,MAAO,CAAA,CAGR,KAAIC,WAAaL,IAAA,CAAKI,KAAL,CAAY,WAAZ,CAEjB,IAD+BC,CAAAA,UAC/B,EAD6C,CAAAf,GAAA,CAAIe,UAAJ,CAAgB,OAAhB,CAC7C,CACC,MAAO,CAAA,CAGR,IAAI,CACHd,KAAA,CAAMa,KAAN,CAAaV,cAAb,CADG,CAEF,MAAOY,CAAP,CAAU,CACX,MAAOA,EAAP,GAAad,aADF,CAba,CAFV,CAmBdW,QAAgB,CAACC,KAAD,CAAQ,CAEzB,MAAI,CAACA,KAAL,EAAgC,QAAhC,GAAe,MAAOA,MAAtB,EAA6D,UAA7D,GAA4C,MAAOA,MAAnD,CACQ,CAAA,CADR,CAvBeG,iBAuBf,GAIOR,SAAA,CAAUK,KAAV,CANkB,CAnDoE;",
"sources":["node_modules/is-regex/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$is_regex$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n\n};"],
"names":["shadow$provide","global","require","module","exports","callBound","hasToStringTag","has","$exec","isRegexMarker","throwRegexMarker","badStringifier","toString","valueOf","Symbol","toPrimitive","$toString","gOPD","Object","getOwnPropertyDescriptor","isRegex","value","descriptor","e","regexClass"]
}
