{
"version":3,
"file":"module$node_modules$graphql$jsutils$promiseForObject.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CASAA,QAAyB,CAACC,MAAD,CAAS,CAChC,MAAOC,QAAQC,CAAAA,GAAR,CAAYN,MAAOO,CAAAA,MAAP,CAAcH,MAAd,CAAZ,CAAmCI,CAAAA,IAAnC,CAAyCC,cAAD,EAAoB,CACjE,MAAMC,eAAiBV,MAAOW,CAAAA,MAAP,CAAc,IAAd,CAEvB,KAAK,MAAM,CAACC,CAAD,CAAIC,GAAJ,CAAX,EAAuBb,OAAOc,CAAAA,IAAP,CAAYV,MAAZ,CAAoBW,CAAAA,OAApB,EAAvB,CACEL,cAAA,CAAeG,GAAf,CAAA,CAAsBJ,cAAA,CAAeG,CAAf,CAGxB,OAAOF,eAP0D,CAA5D,CADyB,CAf+E;",
"sources":["node_modules/graphql/jsutils/promiseForObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$jsutils$promiseForObject\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseForObject = promiseForObject;\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","promiseForObject","object","Promise","all","values","then","resolvedValues","resolvedObject","create","i","key","keys","entries"]
}
