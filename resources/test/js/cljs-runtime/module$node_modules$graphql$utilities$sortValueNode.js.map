{
"version":3,
"file":"module$node_modules$graphql$utilities$sortValueNode.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmBhHC,QAASA,cAAa,CAACC,SAAD,CAAY,CAChC,OAAQA,SAAUC,CAAAA,IAAlB,EACE,KAAKC,MAAOC,CAAAA,IAAKC,CAAAA,MAAjB,CACE,MAAO,CAAE,GAAGJ,SAAL,CAAgBK,OAAQC,UAAA,CAAWN,SAAUK,CAAAA,MAArB,CAAxB,CAET,MAAKH,MAAOC,CAAAA,IAAKI,CAAAA,IAAjB,CACE,MAAO,CAAE,GAAGP,SAAL,CAAgBQ,OAAQR,SAAUQ,CAAAA,MAAOC,CAAAA,GAAjB,CAAqBV,aAArB,CAAxB,CAET,MAAKG,MAAOC,CAAAA,IAAKO,CAAAA,GAAjB,CACA,KAAKR,MAAOC,CAAAA,IAAKQ,CAAAA,KAAjB,CACA,KAAKT,MAAOC,CAAAA,IAAKS,CAAAA,MAAjB,CACA,KAAKV,MAAOC,CAAAA,IAAKU,CAAAA,OAAjB,CACA,KAAKX,MAAOC,CAAAA,IAAKW,CAAAA,IAAjB,CACA,KAAKZ,MAAOC,CAAAA,IAAKY,CAAAA,IAAjB,CACA,KAAKb,MAAOC,CAAAA,IAAKa,CAAAA,QAAjB,CACE,MAAOhB,UAdX,CADgC;AAmBlCM,QAASA,WAAU,CAACD,MAAD,CAAS,CAC1B,MAAOA,OACJI,CAAAA,GADI,CACCQ,SAAD,EAAgB,EACnB,GAAGA,SADgB,CAEnBC,MAAOnB,aAAA,CAAckB,SAAUC,CAAAA,KAAxB,CAFY,EADhB,CAKJC,CAAAA,IALI,CAKC,CAACC,MAAD,CAASC,MAAT,CAAA,EACJ,GAAIC,eAAgBC,CAAAA,cAApB,EAAoCH,MAAOI,CAAAA,IAAKN,CAAAA,KAAhD,CAAuDG,MAAOG,CAAAA,IAAKN,CAAAA,KAAnE,CANG,CADmB,CAnC5BO,MAAOC,CAAAA,cAAP,CAAsB5B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQC,CAAAA,aAAR,CAAwBA,aAExB,KAAIuB,gBAAkB1B,OAAA,CAAQ,oDAAR,CAAtB,CAEIM,OAASN,OAAA,CAAQ,4CAAR,CAVmG;",
"sources":["node_modules/graphql/utilities/sortValueNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$sortValueNode\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.sortValueNode = sortValueNode;\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\nfunction sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case _kinds.Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case _kinds.Kind.INT:\n    case _kinds.Kind.FLOAT:\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.BOOLEAN:\n    case _kinds.Kind.NULL:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      (0, _naturalCompare.naturalCompare)(fieldA.name.value, fieldB.name.value),\n    );\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","sortValueNode","valueNode","kind","_kinds","Kind","OBJECT","fields","sortFields","LIST","values","map","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","VARIABLE","fieldNode","value","sort","fieldA","fieldB","_naturalCompare","naturalCompare","name","Object","defineProperty"]
}
