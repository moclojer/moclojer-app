{
"version":3,
"file":"module$node_modules$pretty_format$build$collections.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/pretty-format/build/collections.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pretty_format$build$collections\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printIteratorEntries = printIteratorEntries;\nexports.printIteratorValues = printIteratorValues;\nexports.printListItems = printListItems;\nexports.printObjectProperties = printObjectProperties;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getKeysOfEnumerableProperties = (object, compareKeys) => {\n  const keys = Object.keys(object).sort(compareKeys);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(object).forEach(symbol => {\n      if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n        keys.push(symbol);\n      }\n    });\n  }\n\n  return keys;\n};\n/**\n * Return entries (for example, of a map)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printIteratorEntries(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer, // Too bad, so sad that separator for ECMAScript Map has been ' => '\n  // What a distracting diff if you change a data structure to/from\n  // ECMAScript Object or Immutable.Map/OrderedMap which use the default.\n  separator = ': '\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      const name = printer(\n        current.value[0],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      const value = printer(\n        current.value[1],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      result += indentationNext + name + separator + value;\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return values (for example, of a set)\n * with spacing, indentation, and comma\n * without surrounding punctuation (braces or brackets)\n */\n\nfunction printIteratorValues(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      result +=\n        indentationNext +\n        printer(current.value, config, indentationNext, depth, refs);\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return items (for example, of an array)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, brackets)\n **/\n\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n  let result = '';\n\n  if (list.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < list.length; i++) {\n      result += indentationNext;\n\n      if (i in list) {\n        result += printer(list[i], config, indentationNext, depth, refs);\n      }\n\n      if (i < list.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return properties of an object\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n  let result = '';\n  const keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n\n  if (keys.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = printer(key, config, indentationNext, depth, refs);\n      const value = printer(val[key], config, indentationNext, depth, refs);\n      result += indentationNext + name + ': ' + value;\n\n      if (i < keys.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","printIteratorEntries","iterator","config","indentation","depth","refs","printer","separator","result","current","next","done","spacingOuter","indentationNext","indent","name","min","spacingInner","printIteratorValues","printListItems","list","length","i","printObjectProperties","val","keys","getKeysOfEnumerableProperties","compareKeys","key","object","sort","getOwnPropertySymbols","forEach","symbol","getOwnPropertyDescriptor","enumerable","push"]
}
