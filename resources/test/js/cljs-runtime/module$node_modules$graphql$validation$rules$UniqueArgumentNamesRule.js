shadow$provide.module$node_modules$graphql$validation$rules$UniqueArgumentNamesRule=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.UniqueArgumentNamesRule=function(context){function checkArgUniqueness(parentNode){var _parentNode$arguments;parentNode=null!==(_parentNode$arguments=parentNode.arguments)&&void 0!==_parentNode$arguments?_parentNode$arguments:[];_parentNode$arguments=(0,_groupBy.groupBy)(parentNode,arg=>arg.name.value);for(const [argName,
argNodes]of _parentNode$arguments)1<argNodes.length&&context.reportError(new _GraphQLError.GraphQLError(`There can be only one argument named "${argName}".`,{nodes:argNodes.map(node=>node.name)}))}return{Field:checkArgUniqueness,Directive:checkArgUniqueness}};var _groupBy=require("module$node_modules$graphql$jsutils$groupBy"),_GraphQLError=require("module$node_modules$graphql$error$GraphQLError")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$UniqueArgumentNamesRule.js.map
