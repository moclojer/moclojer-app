{
"version":3,
"file":"module$node_modules$es_get_iterator$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/es-get-iterator/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$es_get_iterator$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict';\n\n/* eslint global-require: 0 */\n// the code is structured this way so that bundlers can\n// alias out `has-symbols` to `() => true` or `() => false` if your target\n// environments' Symbol capabilities are known, and then use\n// dead code elimination on the rest of this module.\n//\n// Similarly, `isarray` can be aliased to `Array.isArray` if\n// available in all target environments.\n\nvar isArguments = require('is-arguments');\nvar getStopIterationIterator = require('stop-iteration-iterator');\n\nif (require('has-symbols')() || require('has-symbols/shams')()) {\n\tvar $iterator = Symbol.iterator;\n\t// Symbol is available natively or shammed\n\t// natively:\n\t//  - Chrome >= 38\n\t//  - Edge 12-14?, Edge >= 15 for sure\n\t//  - FF >= 36\n\t//  - Safari >= 9\n\t//  - node >= 0.12\n\tmodule.exports = function getIterator(iterable) {\n\t\t// alternatively, `iterable[$iterator]?.()`\n\t\tif (iterable != null && typeof iterable[$iterator] !== 'undefined') {\n\t\t\treturn iterable[$iterator]();\n\t\t}\n\t\tif (isArguments(iterable)) {\n\t\t\t// arguments objects lack Symbol.iterator\n\t\t\t// - node 0.12\n\t\t\treturn Array.prototype[$iterator].call(iterable);\n\t\t}\n\t};\n} else {\n\t// Symbol is not available, native or shammed\n\tvar isArray = require('isarray');\n\tvar isString = require('is-string');\n\tvar GetIntrinsic = require('get-intrinsic');\n\tvar $Map = GetIntrinsic('%Map%', true);\n\tvar $Set = GetIntrinsic('%Set%', true);\n\tvar callBound = require('call-bind/callBound');\n\tvar $arrayPush = callBound('Array.prototype.push');\n\tvar $charCodeAt = callBound('String.prototype.charCodeAt');\n\tvar $stringSlice = callBound('String.prototype.slice');\n\n\tvar advanceStringIndex = function advanceStringIndex(S, index) {\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t};\n\n\tvar getArrayIterator = function getArrayIterator(arraylike) {\n\t\tvar i = 0;\n\t\treturn {\n\t\t\tnext: function next() {\n\t\t\t\tvar done = i >= arraylike.length;\n\t\t\t\tvar value;\n\t\t\t\tif (!done) {\n\t\t\t\t\tvalue = arraylike[i];\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdone: done,\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t};\n\n\tvar getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {\n\t\tif (isArray(iterable) || isArguments(iterable)) {\n\t\t\treturn getArrayIterator(iterable);\n\t\t}\n\t\tif (isString(iterable)) {\n\t\t\tvar i = 0;\n\t\t\treturn {\n\t\t\t\tnext: function next() {\n\t\t\t\t\tvar nextIndex = advanceStringIndex(iterable, i);\n\t\t\t\t\tvar value = $stringSlice(iterable, i, nextIndex);\n\t\t\t\t\ti = nextIndex;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: nextIndex > iterable.length,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// es6-shim and es-shims' es-map use a string \"_es6-shim iterator_\" property on different iterables, such as MapIterator.\n\t\tif (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {\n\t\t\treturn iterable['_es6-shim iterator_']();\n\t\t}\n\t};\n\n\tif (!$Map && !$Set) {\n\t\t// the only language iterables are Array, String, arguments\n\t\t// - Safari <= 6.0\n\t\t// - Chrome < 38\n\t\t// - node < 0.12\n\t\t// - FF < 13\n\t\t// - IE < 11\n\t\t// - Edge < 11\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\tif (iterable != null) {\n\t\t\t\treturn getNonCollectionIterator(iterable, true);\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// either Map or Set are available, but Symbol is not\n\t\t// - es6-shim on an ES5 browser\n\t\t// - Safari 6.2 (maybe 6.1?)\n\t\t// - FF v[13, 36)\n\t\t// - IE 11\n\t\t// - Edge 11\n\t\t// - Safari v[6, 9)\n\n\t\tvar isMap = require('is-map');\n\t\tvar isSet = require('is-set');\n\n\t\t// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach\n\t\tvar $mapForEach = callBound('Map.prototype.forEach', true);\n\t\tvar $setForEach = callBound('Set.prototype.forEach', true);\n\t\tif (typeof process === 'undefined' || !process.versions || !process.versions.node) { // \"if is not node\"\n\n\t\t\t// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either\n\t\t\t// returns a value, or throws a StopIteration object. These browsers\n\t\t\t// do not have any other mechanism for iteration.\n\t\t\tvar $mapIterator = callBound('Map.prototype.iterator', true);\n\t\t\tvar $setIterator = callBound('Set.prototype.iterator', true);\n\t\t}\n\t\t// Firefox 27-35, and some older es6-shim versions, use a string \"@@iterator\" property\n\t\t// this returns a proper iterator object, so we should use it instead of forEach.\n\t\t// newer es6-shim versions use a string \"_es6-shim iterator_\" property.\n\t\tvar $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);\n\t\tvar $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);\n\n\t\tvar getCollectionIterator = function getCollectionIterator(iterable) {\n\t\t\tif (isMap(iterable)) {\n\t\t\t\tif ($mapIterator) {\n\t\t\t\t\treturn getStopIterationIterator($mapIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($mapAtAtIterator) {\n\t\t\t\t\treturn $mapAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($mapForEach) {\n\t\t\t\t\tvar entries = [];\n\t\t\t\t\t$mapForEach(iterable, function (v, k) {\n\t\t\t\t\t\t$arrayPush(entries, [k, v]);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(entries);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isSet(iterable)) {\n\t\t\t\tif ($setIterator) {\n\t\t\t\t\treturn getStopIterationIterator($setIterator(iterable));\n\t\t\t\t}\n\t\t\t\tif ($setAtAtIterator) {\n\t\t\t\t\treturn $setAtAtIterator(iterable);\n\t\t\t\t}\n\t\t\t\tif ($setForEach) {\n\t\t\t\t\tvar values = [];\n\t\t\t\t\t$setForEach(iterable, function (v) {\n\t\t\t\t\t\t$arrayPush(values, v);\n\t\t\t\t\t});\n\t\t\t\t\treturn getArrayIterator(values);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tmodule.exports = function getIterator(iterable) {\n\t\t\treturn getCollectionIterator(iterable) || getNonCollectionIterator(iterable);\n\t\t};\n\t}\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","isArguments","getStopIterationIterator","$iterator","Symbol","iterator","module.exports","iterable","Array","prototype","call","isArray","isString","GetIntrinsic","$Map","$Set","callBound","$arrayPush","$charCodeAt","$stringSlice","getArrayIterator","arraylike","i","next","done","length","value","getNonCollectionIterator","noPrimordialCollections","index","first","second","nextIndex","isMap","isSet","$mapForEach","$setForEach","versions","node","$mapIterator","$setIterator","$mapAtAtIterator","$setAtAtIterator","getCollectionIterator","entries","v","k","values"]
}
