shadow$provide.module$node_modules$internal_slot$index=function(global,require,module,exports){global=require("module$node_modules$get_intrinsic$index");var has=require("module$node_modules$has$src$index"),channel=require("module$node_modules$side_channel$index")(),$TypeError=global("%TypeError%"),SLOT={assert:function(O,slot){if(!O||"object"!==typeof O&&"function"!==typeof O)throw new $TypeError("`O` is not an object");if("string"!==typeof slot)throw new $TypeError("`slot` must be a string");channel.assert(O);
if(!SLOT.has(O,slot))throw new $TypeError("`"+slot+"` is not present on `O`");},get:function(O,slot){if(!O||"object"!==typeof O&&"function"!==typeof O)throw new $TypeError("`O` is not an object");if("string"!==typeof slot)throw new $TypeError("`slot` must be a string");return(O=channel.get(O))&&O["$"+slot]},has:function(O,slot){if(!O||"object"!==typeof O&&"function"!==typeof O)throw new $TypeError("`O` is not an object");if("string"!==typeof slot)throw new $TypeError("`slot` must be a string");O=
channel.get(O);return!!O&&has(O,"$"+slot)},set:function(O,slot,V){if(!O||"object"!==typeof O&&"function"!==typeof O)throw new $TypeError("`O` is not an object");if("string"!==typeof slot)throw new $TypeError("`slot` must be a string");var slots=channel.get(O);slots||(slots={},channel.set(O,slots));slots["$"+slot]=V}};Object.freeze&&Object.freeze(SLOT);module.exports=SLOT}
//# sourceMappingURL=module$node_modules$internal_slot$index.js.map
