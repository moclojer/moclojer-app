{
"version":3,
"file":"module$node_modules$graphql$utilities$printSchema.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/graphql/utilities/printSchema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$printSchema\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _blockString = require('../language/blockString.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nfunction printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !(0, _directives.isSpecifiedDirective)(n),\n    isDefinedType,\n  );\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    _directives.isSpecifiedDirective,\n    _introspection.isIntrospectionType,\n  );\n}\n\nfunction isDefinedType(type) {\n  return (\n    !(0, _scalars.isSpecifiedScalarType)(type) &&\n    !(0, _introspection.isIntrospectionType)(type)\n  );\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(\n    arg.defaultValue,\n    arg.type,\n  );\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isDefinedType","type","_scalars","isSpecifiedScalarType","_introspection","isIntrospectionType","printFilteredSchema","schema","directiveFilter","typeFilter","directives","getDirectives","filter","types","Object","values","getTypeMap","printSchemaDefinition","map","directive","printDescription","name","printArgs","args","isRepeatable","locations","join","printType","Boolean","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","operationTypes","push","_definition","isScalarType","specifiedByURL","astValue","_printer","print","kind","_kinds","Kind","STRING","value","isObjectType","printImplementedInterfaces","printFields","isInterfaceType","isUnionType","getTypes","possibleTypes","length","isEnumType","printEnum","isInputObjectType","printInputObject","_invariant","invariant","_inspect","inspect","interfaces","getInterfaces","i","getValues","printDeprecated","deprecationReason","printBlock","fields","getFields","f","printInputValue","String","items","indentation","every","arg","description","defaultAST","_astFromValue","astFromValue","defaultValue","argDecl","reason","_directives","DEFAULT_DEPRECATION_REASON","def","firstInBlock","blockString","block","_blockString","isPrintableAsBlockString","prefix","replace","defineProperty","printIntrospectionSchema","isSpecifiedDirective","printSchema","n"]
}
