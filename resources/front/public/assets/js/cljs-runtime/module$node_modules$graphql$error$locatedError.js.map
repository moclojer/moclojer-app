{
"version":3,
"file":"module$node_modules$graphql$error$locatedError.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,YAAR,CAWAA,QAAqB,CAACC,gBAAD,CAAmBC,KAAnB,CAA0BC,IAA1B,CAAgC,CACnD,IAAIC,MAEEC,iBAAAA,CAAgB,GAAIC,QAASC,CAAAA,OAAb,EAAsBN,gBAAtB,CAEtB,OAiBOO,MAAMC,CAAAA,OAAN,CAjBmBJ,gBAiBCF,CAAAA,IAApB,CAjBP,CACSE,gBADT,CAIO,IAAIK,aAAcC,CAAAA,YAAlB,CAA+BN,gBAAcO,CAAAA,OAA7C,CAAsD,CAC3DV,MACqC,IAAnC,IAACE,MAAD,CAAUC,gBAAcH,CAAAA,KAAxB,GAAsD,IAAK,EAA3D,GAA2CE,MAA3C,CACIA,MADJ,CAEIF,KAJqD,CAK3DW,OAAQR,gBAAcQ,CAAAA,MALqC;AAM3DC,UAAWT,gBAAcS,CAAAA,SANkC,CAO3DX,IAP2D,CAQ3DE,cAAAA,gBAR2D,CAAtD,CAT4C,CATrD,KAAIC,SAAWZ,OAAA,CAAQ,6CAAR,CAAf,CAEIgB,cAAgBhB,OAAA,CAAQ,gDAAR,CAVuF;",
"sources":["node_modules/graphql/error/locatedError.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$error$locatedError\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","locatedError","rawOriginalError","nodes","path","_nodes","originalError","_toError","toError","Array","isArray","_GraphQLError","GraphQLError","message","source","positions"]
}
