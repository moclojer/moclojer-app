shadow$provide.module$node_modules$graphql$validation$rules$LoneSchemaDefinitionRule=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.LoneSchemaDefinitionRule=function(context){var _ref,_ref2,_oldSchema$astNode;const oldSchema=context.getSchema(),alreadyDefined=null!==(_ref=null!==(_ref2=null!==(_oldSchema$astNode=null===oldSchema||void 0===oldSchema?void 0:oldSchema.astNode)&&void 0!==_oldSchema$astNode?_oldSchema$astNode:null===oldSchema||void 0===
oldSchema?void 0:oldSchema.getQueryType())&&void 0!==_ref2?_ref2:null===oldSchema||void 0===oldSchema?void 0:oldSchema.getMutationType())&&void 0!==_ref?_ref:null===oldSchema||void 0===oldSchema?void 0:oldSchema.getSubscriptionType();let schemaDefinitionsCount=0;return{SchemaDefinition(node){alreadyDefined?context.reportError(new _GraphQLError.GraphQLError("Cannot define a new schema within a schema extension.",{nodes:node})):(0<schemaDefinitionsCount&&context.reportError(new _GraphQLError.GraphQLError("Must provide only one schema definition.",
{nodes:node})),++schemaDefinitionsCount)}}};var _GraphQLError=require("module$node_modules$graphql$error$GraphQLError")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$LoneSchemaDefinitionRule.js.map
