{
"version":3,
"file":"module$node_modules$graphql$validation$rules$custom$NoSchemaIntrospectionCustomRule.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,+BAAR,CAkBAA,QAAwC,CAACC,OAAD,CAAU,CAChD,MAAO,CACLC,KAAK,CAACC,IAAD,CAAO,CACV,MAAMC,KAAO,GAAIC,WAAYC,CAAAA,YAAhB,EAA8BL,OAAQM,CAAAA,OAAR,EAA9B,CAETH,KAAJ,EAAY,GAAII,cAAeC,CAAAA,mBAAnB,EAAwCL,IAAxC,CAAZ,EACEH,OAAQS,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,yFAAwFT,IAAKU,CAAAA,IAAKd,CAAAA,KAAlG,IADH;AAEE,CACEe,MAAOX,IADT,CAFF,CADF,CAJQ,CADP,CADyC,CAhBlD,KAAIQ,cAAgBjB,OAAA,CAAQ,gDAAR,CAApB,CAEIW,YAAcX,OAAA,CAAQ,6CAAR,CAFlB,CAIIc,eAAiBd,OAAA,CAAQ,gDAAR,CAZ2H;",
"sources":["node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$custom$NoSchemaIntrospectionCustomRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\nvar _introspection = require('../../../type/introspection.js');\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","NoSchemaIntrospectionCustomRule","context","Field","node","type","_definition","getNamedType","getType","_introspection","isIntrospectionType","reportError","_GraphQLError","GraphQLError","name","nodes"]
}
