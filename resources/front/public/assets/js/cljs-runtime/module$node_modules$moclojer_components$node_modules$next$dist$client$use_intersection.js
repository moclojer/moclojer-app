shadow$provide.module$node_modules$moclojer_components$node_modules$next$dist$client$use_intersection=function(global,require,module,exports){function observe(element,callback,options){const {id,observer,elements}=createObserver(options);elements.set(element,callback);observer.observe(element);return function(){elements.delete(element);observer.unobserve(element);if(0===elements.size){observer.disconnect();observers.delete(id);const index=idList.findIndex(obj=>obj.root===id.root&&obj.margin===id.margin);
-1<index&&idList.splice(index,1)}}}function createObserver(options){const id={root:options.root||null,margin:options.rootMargin||""};var existing=idList.find(obj=>obj.root===id.root&&obj.margin===id.margin);if(existing&&(existing=observers.get(existing)))return existing;const elements=new Map;options=new IntersectionObserver(entries=>{entries.forEach(entry=>{const callback=elements.get(entry.target);entry=entry.isIntersecting||0<entry.intersectionRatio;callback&&entry&&callback(entry)})},options);
existing={id,observer:options,elements};idList.push(id);observers.set(id,existing);return existing}Object.defineProperty(exports,"__esModule",{value:!0});exports.useIntersection=function({rootRef,rootMargin,disabled}){const isDisabled=disabled||!hasIntersectionObserver,unobserve=(0,_react).useRef(),[visible,setVisible]=(0,_react).useState(!1),[element,setElement]=(0,_react).useState(null);(0,_react).useEffect(()=>{if(hasIntersectionObserver){if(unobserve.current&&(unobserve.current(),unobserve.current=
void 0),!isDisabled&&!visible)return element&&element.tagName&&(unobserve.current=observe(element,isVisible=>isVisible&&setVisible(isVisible),{root:null==rootRef?void 0:rootRef.current,rootMargin})),()=>{null==unobserve.current?void 0:unobserve.current();unobserve.current=void 0}}else if(!visible){const idleCallback=(0,_requestIdleCallback).requestIdleCallback(()=>setVisible(!0));return()=>(0,_requestIdleCallback).cancelIdleCallback(idleCallback)}},[element,isDisabled,rootMargin,rootRef,visible]);
disabled=(0,_react).useCallback(()=>{setVisible(!1)},[]);return[setElement,visible,disabled]};var _react=require("module$node_modules$moclojer_components$node_modules$react$index"),_requestIdleCallback=require("module$node_modules$moclojer_components$node_modules$next$dist$client$request_idle_callback");const hasIntersectionObserver="function"===typeof IntersectionObserver,observers=new Map,idList=[];("function"===typeof exports.default||"object"===typeof exports.default&&null!==exports.default)&&
"undefined"===typeof exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)}
//# sourceMappingURL=module$node_modules$moclojer_components$node_modules$next$dist$client$use_intersection.js.map
