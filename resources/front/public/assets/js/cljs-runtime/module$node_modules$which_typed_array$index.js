shadow$provide.module$node_modules$which_typed_array$index=function(global,require,module,exports){var forEach=require("module$node_modules$for_each$index"),availableTypedArrays=require("module$node_modules$available_typed_arrays$index");exports=require("module$node_modules$call_bind$callBound");var gOPD=require("module$node_modules$gopd$index"),$toString=exports("Object.prototype.toString"),hasToStringTag=require("module$node_modules$has_tostringtag$shams")(),g="undefined"===typeof globalThis?global:
globalThis;global=availableTypedArrays();var $slice=exports("String.prototype.slice"),toStrTags={},getPrototypeOf=Object.getPrototypeOf;hasToStringTag&&gOPD&&getPrototypeOf&&forEach(global,function(typedArray){if("function"===typeof g[typedArray]){var arr=new g[typedArray];if(Symbol.toStringTag in arr){arr=getPrototypeOf(arr);var descriptor=gOPD(arr,Symbol.toStringTag);descriptor||(arr=getPrototypeOf(arr),descriptor=gOPD(arr,Symbol.toStringTag));toStrTags[typedArray]=descriptor.get}}});var tryTypedArrays=
function(value){var foundName=!1;forEach(toStrTags,function(getter,typedArray){if(!foundName)try{var name=getter.call(value);name===typedArray&&(foundName=name)}catch(e){}});return foundName},isTypedArray=require("module$node_modules$is_typed_array$index");module.exports=function(value){return isTypedArray(value)?hasToStringTag&&Symbol.toStringTag in value?tryTypedArrays(value):$slice($toString(value),8,-1):!1}}
//# sourceMappingURL=module$node_modules$which_typed_array$index.js.map
