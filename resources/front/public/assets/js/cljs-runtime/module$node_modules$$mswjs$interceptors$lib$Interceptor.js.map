{
"version":3,
"file":"module$node_modules$$mswjs$interceptors$lib$Interceptor.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@mswjs/interceptors/lib/Interceptor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mswjs$interceptors$lib$Interceptor\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Interceptor = exports.InterceptorReadyState = exports.deleteGlobalSymbol = exports.getGlobalSymbol = void 0;\nvar debug_1 = require(\"debug\");\nvar AsyncEventEmitter_1 = require(\"./utils/AsyncEventEmitter\");\nvar nextTick_1 = require(\"./utils/nextTick\");\nfunction getGlobalSymbol(symbol) {\n    return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || undefined);\n}\nexports.getGlobalSymbol = getGlobalSymbol;\nfunction setGlobalSymbol(symbol, value) {\n    // @ts-ignore\n    globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n    // @ts-ignore\n    delete globalThis[symbol];\n}\nexports.deleteGlobalSymbol = deleteGlobalSymbol;\nvar InterceptorReadyState;\n(function (InterceptorReadyState) {\n    InterceptorReadyState[\"IDLE\"] = \"IDLE\";\n    InterceptorReadyState[\"APPLYING\"] = \"APPLYING\";\n    InterceptorReadyState[\"APPLIED\"] = \"APPLIED\";\n    InterceptorReadyState[\"DISPOSING\"] = \"DISPOSING\";\n    InterceptorReadyState[\"DISPOSED\"] = \"DISPOSED\";\n})(InterceptorReadyState = exports.InterceptorReadyState || (exports.InterceptorReadyState = {}));\nvar Interceptor = /** @class */ (function () {\n    function Interceptor(symbol) {\n        this.symbol = symbol;\n        this.readyState = InterceptorReadyState.IDLE;\n        this.emitter = new AsyncEventEmitter_1.AsyncEventEmitter();\n        this.subscriptions = [];\n        this.log = debug_1.debug(symbol.description);\n        // Do not limit the maximum number of listeners\n        // so not to limit the maximum amount of parallel events emitted.\n        this.emitter.setMaxListeners(0);\n        this.log('constructing the interceptor...');\n    }\n    /**\n     * Determine if this interceptor can be applied\n     * in the current environment.\n     */\n    Interceptor.prototype.checkEnvironment = function () {\n        return true;\n    };\n    /**\n     * Apply this interceptor to the current process.\n     * Returns an already running interceptor instance if it's present.\n     */\n    Interceptor.prototype.apply = function () {\n        var _this = this;\n        var log = this.log.extend('apply');\n        log('applying the interceptor...');\n        if (this.readyState === InterceptorReadyState.APPLIED) {\n            log('intercepted already applied!');\n            return;\n        }\n        var shouldApply = this.checkEnvironment();\n        if (!shouldApply) {\n            log('the interceptor cannot be applied in this environment!');\n            return;\n        }\n        this.readyState = InterceptorReadyState.APPLYING;\n        // Always activate the emitter when applying the interceptor.\n        // This will ensure the interceptor can process events after it's\n        // been disposed and re-applied again (it may be a singleton).\n        this.emitter.activate();\n        log('activated the emiter!', this.emitter.readyState);\n        // Whenever applying a new interceptor, check if it hasn't been applied already.\n        // This enables to apply the same interceptor multiple times, for example from a different\n        // interceptor, only proxying events but keeping the stubs in a single place.\n        var runningInstance = this.getInstance();\n        if (runningInstance) {\n            log('found a running instance, reusing...');\n            // Proxy any listeners you set on this instance to the running instance.\n            this.on = function (event, listener) {\n                log('proxying the \"%s\" listener', event);\n                // Add listeners to the running instance so they appear\n                // at the top of the event listeners list and are executed first.\n                runningInstance.emitter.addListener(event, listener);\n                // Ensure that once this interceptor instance is disposed,\n                // it removes all listeners it has appended to the running interceptor instance.\n                _this.subscriptions.push(function () {\n                    runningInstance.emitter.removeListener(event, listener);\n                    log('removed proxied \"%s\" listener!', event);\n                });\n            };\n            nextTick_1.nextTick(function () {\n                _this.readyState = InterceptorReadyState.APPLIED;\n            });\n            return;\n        }\n        log('no running instance found, setting up a new instance...');\n        // Setup the interceptor.\n        this.setup();\n        // Store the newly applied interceptor instance globally.\n        this.setInstance();\n        nextTick_1.nextTick(function () {\n            _this.readyState = InterceptorReadyState.APPLIED;\n        });\n    };\n    /**\n     * Setup the module augments and stubs necessary for this interceptor.\n     * This method is not run if there's a running interceptor instance\n     * to prevent instantiating an interceptor multiple times.\n     */\n    Interceptor.prototype.setup = function () { };\n    /**\n     * Listen to the interceptor's public events.\n     */\n    Interceptor.prototype.on = function (event, listener) {\n        var log = this.log.extend('on');\n        if (this.readyState === InterceptorReadyState.DISPOSING ||\n            this.readyState === InterceptorReadyState.DISPOSED) {\n            log('cannot listen to events, already disposed!');\n            return;\n        }\n        log('adding \"%s\" event listener:', event, listener.name);\n        this.emitter.on(event, listener);\n    };\n    /**\n     * Disposes of any side-effects this interceptor has introduced.\n     */\n    Interceptor.prototype.dispose = function () {\n        var e_1, _a;\n        var _this = this;\n        var log = this.log.extend('dispose');\n        if (this.readyState === InterceptorReadyState.DISPOSED) {\n            log('cannot dispose, already disposed!');\n            return;\n        }\n        log('disposing the interceptor...');\n        this.readyState = InterceptorReadyState.DISPOSING;\n        if (!this.getInstance()) {\n            log('no interceptors running, skipping dispose...');\n            return;\n        }\n        // Delete the global symbol as soon as possible,\n        // indicating that the interceptor is no longer running.\n        this.clearInstance();\n        log('global symbol deleted:', getGlobalSymbol(this.symbol));\n        if (this.subscriptions.length > 0) {\n            log('disposing of %d subscriptions...', this.subscriptions.length);\n            try {\n                for (var _b = __values(this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var dispose = _c.value;\n                    dispose();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.subscriptions = [];\n            log('disposed of all subscriptions!', this.subscriptions.length);\n        }\n        this.emitter.deactivate();\n        log('destroyed the listener!');\n        nextTick_1.nextTick(function () {\n            _this.readyState = InterceptorReadyState.DISPOSED;\n        });\n    };\n    Interceptor.prototype.getInstance = function () {\n        var _a;\n        var instance = getGlobalSymbol(this.symbol);\n        this.log('retrieved global instance:', (_a = instance === null || instance === void 0 ? void 0 : instance.constructor) === null || _a === void 0 ? void 0 : _a.name);\n        return instance;\n    };\n    Interceptor.prototype.setInstance = function () {\n        setGlobalSymbol(this.symbol, this);\n        this.log('set global instance!', this.symbol.description);\n    };\n    Interceptor.prototype.clearInstance = function () {\n        deleteGlobalSymbol(this.symbol);\n        this.log('cleared global instance!', this.symbol.description);\n    };\n    return Interceptor;\n}());\nexports.Interceptor = Interceptor;\n//# sourceMappingURL=Interceptor.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getGlobalSymbol","symbol","globalThis","undefined","deleteGlobalSymbol","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Object","defineProperty","Interceptor","InterceptorReadyState","debug_1","AsyncEventEmitter_1","nextTick_1","readyState","IDLE","emitter","AsyncEventEmitter","subscriptions","log","debug","description","setMaxListeners","prototype","checkEnvironment","Interceptor.prototype.checkEnvironment","apply","Interceptor.prototype.apply","_this","extend","APPLIED","shouldApply","APPLYING","activate","runningInstance","getInstance","on","this.on","event","listener","addListener","push","removeListener","setup","setInstance","nextTick","Interceptor.prototype.setup","Interceptor.prototype.on","DISPOSING","DISPOSED","name","dispose","Interceptor.prototype.dispose","_a","clearInstance","_b","_c","e_1_1","e_1","error","return","deactivate","Interceptor.prototype.getInstance","instance","constructor","Interceptor.prototype.setInstance","Interceptor.prototype.clearInstance"]
}
