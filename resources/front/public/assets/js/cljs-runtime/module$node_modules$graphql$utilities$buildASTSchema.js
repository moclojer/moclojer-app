shadow$provide.module$node_modules$graphql$utilities$buildASTSchema=function(global,require,module,exports){function buildASTSchema(documentAST,options){null!=documentAST&&documentAST.kind===_kinds.Kind.DOCUMENT||(0,_devAssert.devAssert)(!1,"Must provide valid Document AST.");!0!==(null===options||void 0===options?void 0:options.assumeValid)&&!0!==(null===options||void 0===options?void 0:options.assumeValidSDL)&&(0,_validate.assertValidSDL)(documentAST);const emptySchemaConfig={description:void 0,
types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},config=(0,_extendSchema.extendSchemaImpl)(emptySchemaConfig,documentAST,options);if(null==config.astNode)for(const type of config.types)switch(type.name){case "Query":config.query=type;break;case "Mutation":config.mutation=type;break;case "Subscription":config.subscription=type}documentAST=[...config.directives,..._directives.specifiedDirectives.filter(stdDirective=>config.directives.every(directive=>directive.name!==
stdDirective.name))];return new _schema.GraphQLSchema({...config,directives:documentAST})}Object.defineProperty(exports,"__esModule",{value:!0});exports.buildASTSchema=buildASTSchema;exports.buildSchema=function(source,options){source=(0,_parser.parse)(source,{noLocation:null===options||void 0===options?void 0:options.noLocation,allowLegacyFragmentVariables:null===options||void 0===options?void 0:options.allowLegacyFragmentVariables});return buildASTSchema(source,{assumeValidSDL:null===options||void 0===
options?void 0:options.assumeValidSDL,assumeValid:null===options||void 0===options?void 0:options.assumeValid})};var _devAssert=require("module$node_modules$graphql$jsutils$devAssert"),_kinds=require("module$node_modules$graphql$language$kinds"),_parser=require("module$node_modules$graphql$language$parser"),_directives=require("module$node_modules$graphql$type$directives"),_schema=require("module$node_modules$graphql$type$schema"),_validate=require("module$node_modules$graphql$validation$validate"),
_extendSchema=require("module$node_modules$graphql$utilities$extendSchema")}
//# sourceMappingURL=module$node_modules$graphql$utilities$buildASTSchema.js.map
