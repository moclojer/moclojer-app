shadow$provide.module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$match_remote_pattern=function(global,require,module,exports){function matchRemotePattern(pattern,url){if(void 0!==pattern.protocol){const actualProto=url.protocol.slice(0,-1);if(pattern.protocol!==actualProto)return!1}if(void 0!==pattern.port&&pattern.port!==url.port)return!1;if(void 0===pattern.hostname)throw Error(`Pattern should define hostname but found\n${JSON.stringify(pattern)}`);if(!(0,_micromatch).makeRe(pattern.hostname).test(url.hostname))return!1;
var _pathname;return(0,_micromatch).makeRe(null!=(_pathname=pattern.pathname)?_pathname:"**").test(url.pathname)?!0:!1}Object.defineProperty(exports,"__esModule",{value:!0});exports.matchRemotePattern=matchRemotePattern;exports.hasMatch=function(domains,remotePatterns,url){return domains.some(domain=>url.hostname===domain)||remotePatterns.some(p=>matchRemotePattern(p,url))};var _micromatch=require("module$node_modules$moclojer_components$node_modules$next$dist$compiled$micromatch$index")}
//# sourceMappingURL=module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$match_remote_pattern.js.map
