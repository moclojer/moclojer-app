{
"version":3,
"file":"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$i18n$detect_domain_locale.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mGAAA,CAAwH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEhKC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CACzCG,MAAO,CAAA,CADkC,CAA7C,CAGAH,QAAQI,CAAAA,kBAAR,CACAA,QAA2B,CAACC,WAAD,CAAcC,QAAd,CAAwBC,cAAxB,CAAwC,CAC/D,IAAIC,UACJ,IAAIH,WAAJ,CAAiB,CACTE,cAAJ,GACIA,cADJ,CACqBA,cAAeE,CAAAA,WAAf,EADrB,CAGA,KAAK,MAAMC,IAAX,GAAmBL,YAAnB,CAA+B,CAAA,IACvBM,GADuB,CAClBC,IAEHC,YAAAA,CAAwC,IAAvB,GAACF,GAAD,CAAOD,IAAKI,CAAAA,MAAZ,EAA8B,IAAK,EAAnC,CAAuCH,GAAII,CAAAA,KAAJ,CAAU,GAAV,CAAA,CAAe,CAAf,CAAkBN,CAAAA,WAAlB,EAC9D,IAAIH,QAAJ;AAAiBO,WAAjB,EAAmCN,cAAnC,GAAsDG,IAAKM,CAAAA,aAAcP,CAAAA,WAAnB,EAAtD,GAAoH,IAAzB,GAACG,IAAD,CAAQF,IAAKO,CAAAA,OAAb,EAAgC,CAAhC,CAAyCL,IAAKM,CAAAA,IAAL,CAAWC,MAAD,EAAUA,MAAOV,CAAAA,WAAP,EAAV,GAAmCF,cAA7C,CAApI,EAAmM,CAC/LC,UAAA,CAAaE,IACb,MAF+L,CAJxK,CAJlB,CAcjB,MAAOF,WAhBwD,CAN6F;",
"sources":["node_modules/moclojer-components/node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$i18n$detect_domain_locale\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.detectDomainLocale = detectDomainLocale;\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","toLowerCase","item","ref","ref1","domainHostname","domain","split","defaultLocale","locales","some","locale"]
}
