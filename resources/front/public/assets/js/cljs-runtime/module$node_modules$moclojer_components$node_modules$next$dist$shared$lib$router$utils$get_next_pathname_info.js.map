{
"version":3,
"file":"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$get_next_pathname_info.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6GAAA,CAAkI,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1KC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CACzCG,MAAO,CAAA,CADkC,CAA7C,CAGAH,QAAQI,CAAAA,mBAAR,CAIAA,QAA4B,CAACC,QAAD,CAAWC,OAAX,CAAoB,CAC5C,IAAIC,WACJ,OAAM,CAAEC,QAAF,CAAaC,IAAb,CAAoBC,aAApB,CAAA,CAA6E,IAAtC,GAACH,WAAD,CAAeD,OAAQK,CAAAA,UAAvB,EAA6CJ,WAA7C,CAA2D,EAClGK,SAAAA,CAAO,CACCP,QADD,CAETK,cAA4B,GAAb,GAAAL,QAAA,CAAmBA,QAASQ,CAAAA,QAAT,CAAkB,GAAlB,CAAnB,CAA4CH,aAFlD,CAITF,SAAJ,EAAoCM,CAAnB,CAAA,CAAGC,cAAgBD,EAAAA,aAApB,CAAkCF,QAAKP,CAAAA,QAAvC;AAAiDG,QAAjD,CAAhB,GACII,QAAKP,CAAAA,QACL,CADuCW,CAAtB,CAAA,CAAGC,iBAAmBD,EAAAA,gBAAvB,CAAwCJ,QAAKP,CAAAA,QAA7C,CAAuDG,QAAvD,CAChB,CAAAI,QAAKJ,CAAAA,QAAL,CAAgBA,QAFpB,CAI0B,EAAA,CAA1B,GAAIF,OAAQY,CAAAA,SAAZ,EAAkCN,QAAKP,CAAAA,QAASc,CAAAA,UAAd,CAAyB,cAAzB,CAAlC,EAA8EP,QAAKP,CAAAA,QAASQ,CAAAA,QAAd,CAAuB,OAAvB,CAA9E,GACUO,OAGN,CAHcR,QAAKP,CAAAA,QAASgB,CAAAA,OAAd,CAAsB,kBAAtB,CAA0C,EAA1C,CAA8CA,CAAAA,OAA9C,CAAsD,SAAtD,CAAiE,EAAjE,CAAqEC,CAAAA,KAArE,CAA2E,GAA3E,CAGd,CAFMC,WAEN,CAFgBH,OAAA,CAAM,CAAN,CAEhB,CADAR,QAAKP,CAAAA,QACL,CAD6B,OAAb,GAAAe,OAAA,CAAM,CAAN,CAAA,CAAwB,IAAGA,OAAMI,CAAAA,KAAN,CAAY,CAAZ,CAAeC,CAAAA,IAAf,CAAoB,GAApB,CAAH,EAAxB,CAAwD,GACxE,CAAAb,QAAKW,CAAAA,OAAL,CAAeA,WAJnB,CAMId,KAAJ,GACUiB,OAEN,CAF6CC,CAAzB,CAAA,CAAGC,oBAAsBD,EAAAA,mBAA1B,CAA8Cf,QAAKP,CAAAA,QAAnD;AAA6DI,IAAKoB,CAAAA,OAAlE,CAEnB,CADAjB,QAAKkB,CAAAA,MACL,CAD4B,IAAd,EAAAJ,OAAA,CAAqB,IAAK,EAA1B,CAA8BA,OAAWK,CAAAA,cACvD,CAAAnB,QAAKP,CAAAA,QAAL,EAA+B,IAAd,EAAAqB,OAAA,CAAqB,IAAK,EAA1B,CAA8BA,OAAWrB,CAAAA,QAA1D,GAAuEO,QAAKP,CAAAA,QAHhF,CAKA,OAAOO,SAtBqC,CAHhD,KAAIgB,qBAAuB9B,OAAA,CAAQ,sGAAR,CAA3B,CACImB,kBAAoBnB,OAAA,CAAQ,2GAAR,CADxB,CAEIiB,eAAiBjB,OAAA,CAAQ,wGAAR,CARqJ;",
"sources":["node_modules/moclojer-components/node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$get_next_pathname_info\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getNextPathnameInfo = getNextPathnameInfo;\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\nvar _removePathPrefix = require(\"./remove-path-prefix\");\nvar _pathHasPrefix = require(\"./path-has-prefix\");\nfunction getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && (0, _pathHasPrefix).pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = (0, _removePathPrefix).removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = (0, _normalizeLocalePath).normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getNextPathnameInfo","pathname","options","_nextConfig","basePath","i18n","trailingSlash","nextConfig","info","endsWith","pathHasPrefix","_pathHasPrefix","removePathPrefix","_removePathPrefix","parseData","startsWith","paths","replace","split","buildId","slice","join","pathLocale","normalizeLocalePath","_normalizeLocalePath","locales","locale","detectedLocale"]
}
