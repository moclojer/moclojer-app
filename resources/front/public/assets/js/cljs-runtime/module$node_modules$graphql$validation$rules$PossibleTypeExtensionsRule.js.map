{
"version":3,
"file":"module$node_modules$graphql$validation$rules$PossibleTypeExtensionsRule.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$PossibleTypeExtensionsRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot extend non-${kindStr} type \"${typeName}\".`,\n            {\n              nodes: defNode ? [defNode, node] : node,\n            },\n          ),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = (0, _suggestionList.suggestionList)(\n        typeName,\n        allTypeNames,\n      );\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            (0, _didYouMean.didYouMean)(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\n\nconst defKindToExtKind = {\n  [_kinds.Kind.SCALAR_TYPE_DEFINITION]: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n  [_kinds.Kind.OBJECT_TYPE_DEFINITION]: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n  [_kinds.Kind.INTERFACE_TYPE_DEFINITION]: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n  [_kinds.Kind.UNION_TYPE_DEFINITION]: _kinds.Kind.UNION_TYPE_EXTENSION,\n  [_kinds.Kind.ENUM_TYPE_DEFINITION]: _kinds.Kind.ENUM_TYPE_EXTENSION,\n  [_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION]:\n    _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return _kinds.Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return _kinds.Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return _kinds.Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return _kinds.Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(kind),\n        );\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","typeToExtKind","type","_definition","isScalarType","_kinds","Kind","SCALAR_TYPE_EXTENSION","isObjectType","OBJECT_TYPE_EXTENSION","isInterfaceType","INTERFACE_TYPE_EXTENSION","isUnionType","UNION_TYPE_EXTENSION","isEnumType","ENUM_TYPE_EXTENSION","isInputObjectType","INPUT_OBJECT_TYPE_EXTENSION","_invariant","invariant","_inspect","inspect","extensionKindToTypeName","kind","Object","defineProperty","value","PossibleTypeExtensionsRule","context","checkExtension","node","typeName","name","defNode","definedTypes","existingType","schema","getType","expectedKind","defKindToExtKind","kindStr","reportError","_GraphQLError","GraphQLError","nodes","allTypeNames","keys","getTypeMap","suggestedTypes","_suggestionList","suggestionList","_didYouMean","didYouMean","getSchema","create","def","getDocument","definitions","_predicates","isTypeDefinitionNode","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION"]
}
