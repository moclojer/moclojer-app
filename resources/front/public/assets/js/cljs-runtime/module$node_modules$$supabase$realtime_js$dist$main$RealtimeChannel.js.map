{
"version":3,
"file":"module$node_modules$$supabase$realtime_js$dist$main$RealtimeChannel.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/@supabase/realtime-js/dist/main/RealtimeChannel.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$realtime_js$dist$main$RealtimeChannel\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REALTIME_SUBSCRIBE_STATES = exports.REALTIME_LISTEN_TYPES = exports.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = void 0;\nconst constants_1 = require(\"./lib/constants\");\nconst push_1 = __importDefault(require(\"./lib/push\"));\nconst timer_1 = __importDefault(require(\"./lib/timer\"));\nconst RealtimePresence_1 = __importDefault(require(\"./RealtimePresence\"));\nconst Transformers = __importStar(require(\"./lib/transformers\"));\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = exports.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (exports.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nvar REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    /**\n     * listen to Postgres changes.\n     */\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES = exports.REALTIME_LISTEN_TYPES || (exports.REALTIME_LISTEN_TYPES = {}));\nvar REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES = exports.REALTIME_SUBSCRIBE_STATES || (exports.REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nclass RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = constants_1.CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new push_1.default(this, constants_1.CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new timer_1.default(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = constants_1.CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = constants_1.CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = constants_1.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = constants_1.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(constants_1.CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence_1.default(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = constants_1.CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(constants_1.CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new push_1.default(this, constants_1.CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new push_1.default(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = constants_1.CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === constants_1.CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === constants_1.CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === constants_1.CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === constants_1.CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(constants_1.CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(constants_1.CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = constants_1.CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\nexports.default = RealtimeChannel;\n//# sourceMappingURL=RealtimeChannel.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__importDefault","REALTIME_SUBSCRIBE_STATES","REALTIME_LISTEN_TYPES","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","constants_1","push_1","timer_1","RealtimePresence_1","Transformers","RealtimeChannel","constructor","topic","params","config","socket","bindings","state","CHANNEL_STATES","closed","joinedOnce","pushBuffer","assign","broadcast","ack","self","presence","key","timeout","joinPush","default","CHANNEL_EVENTS","join","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","receive","joined","reset","forEach","pushEvent","send","_onClose","log","_joinRef","_remove","_onError","reason","_isLeaving","_isClosed","errored","scheduleTimeout","_isJoining","_on","reply","payload","ref","_trigger","_replyEventName","subscribe","callback","_a","_b","accessTokenPayload","postgres_changes","map","r","filter","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","setAuth","clientPostgresBindings","bindingsLen","length","newPostgresBindings","i","clientPostgresBinding","event","schema","table","serverPostgresFilter","push","id","unsubscribe","Error","error","JSON","stringify","values","presenceState","track","opts","type","untrack","on","_c","_push","rateLimited","updatePayload","leaving","onClose","close","destroy","leavePush","leave","_canPush","trigger","startTimeout","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","events","indexOf","handledPayload","includes","bind","_e","_f","bindId","bindEvent","ids","data","_d","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","_off","isEqual","obj1","obj2","keys","isConnected","_leaveOpenTopic","resend","records","convertChangeData","columns","record","old_record"]
}
