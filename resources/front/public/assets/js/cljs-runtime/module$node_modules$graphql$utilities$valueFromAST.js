shadow$provide.module$node_modules$graphql$utilities$valueFromAST=function(global,require,module,exports){function valueFromAST(valueNode,type,variables){if(valueNode){if(valueNode.kind===_kinds.Kind.VARIABLE){var variableName=valueNode.name.value;if(null==variables||void 0===variables[variableName])return;variables=variables[variableName];return null===variables&&(0,_definition.isNonNullType)(type)?void 0:variables}if((0,_definition.isNonNullType)(type))return valueNode.kind===_kinds.Kind.NULL?void 0:
valueFromAST(valueNode,type.ofType,variables);if(valueNode.kind===_kinds.Kind.NULL)return null;if((0,_definition.isListType)(type)){type=type.ofType;if(valueNode.kind===_kinds.Kind.LIST){variableName=[];for(var itemNode of valueNode.values)if(isMissingVariable(itemNode,variables)){if((0,_definition.isNonNullType)(type))return;variableName.push(null)}else{valueNode=valueFromAST(itemNode,type,variables);if(void 0===valueNode)return;variableName.push(valueNode)}return variableName}variables=valueFromAST(valueNode,
type,variables);return void 0===variables?void 0:[variables]}if((0,_definition.isInputObjectType)(type)){if(valueNode.kind!==_kinds.Kind.OBJECT)return;itemNode=Object.create(null);valueNode=(0,_keyMap.keyMap)(valueNode.fields,field=>field.name.value);for(variableName of Object.values(type.getFields()))if(type=valueNode[variableName.name],!type||isMissingVariable(type.value,variables))if(void 0!==variableName.defaultValue)itemNode[variableName.name]=variableName.defaultValue;else{if((0,_definition.isNonNullType)(variableName.type))return}else{type=
valueFromAST(type.value,variableName.type,variables);if(void 0===type)return;itemNode[variableName.name]=type}return itemNode}if((0,_definition.isLeafType)(type)){let result;try{result=type.parseLiteral(valueNode,variables)}catch(_error){return}return void 0===result?void 0:result}(0,_invariant.invariant)(!1,"Unexpected input type: "+(0,_inspect.inspect)(type))}}function isMissingVariable(valueNode,variables){return valueNode.kind===_kinds.Kind.VARIABLE&&(null==variables||void 0===variables[valueNode.name.value])}
Object.defineProperty(exports,"__esModule",{value:!0});exports.valueFromAST=valueFromAST;var _inspect=require("module$node_modules$graphql$jsutils$inspect"),_invariant=require("module$node_modules$graphql$jsutils$invariant"),_keyMap=require("module$node_modules$graphql$jsutils$keyMap"),_kinds=require("module$node_modules$graphql$language$kinds"),_definition=require("module$node_modules$graphql$type$definition")}
//# sourceMappingURL=module$node_modules$graphql$utilities$valueFromAST.js.map
