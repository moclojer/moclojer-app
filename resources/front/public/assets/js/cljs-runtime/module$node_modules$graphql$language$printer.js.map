{
"version":3,
"file":"module$node_modules$graphql$language$printer.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/graphql/language/printer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$language$printer\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","join","maybeArray","separator","_maybeArray$filter$jo","filter","x","block","array","wrap","indent","start","maybeString","end","str","replace","hasMultilineItems","_maybeArray$some","some","includes","Object","defineProperty","value","print","ast","_visitor","visit","printDocASTReducer","_blockString","_printString","Name","leave","node","Variable","name","Document","definitions","OperationDefinition","varDefs","variableDefinitions","prefix","operation","directives","selectionSet","VariableDefinition","variable","type","defaultValue","SelectionSet","selections","Field","alias","args","argsLine","MAX_LINE_LENGTH","length","Argument","FragmentSpread","InlineFragment","typeCondition","FragmentDefinition","IntValue","FloatValue","StringValue","isBlockString","printBlockString","printString","BooleanValue","NullValue","EnumValue","ListValue","values","ObjectValue","fields","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","description","operationTypes","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","interfaces","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","types","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","repeatable","locations","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension"]
}
