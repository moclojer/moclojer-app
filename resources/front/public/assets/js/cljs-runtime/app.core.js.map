{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/default-db","refx.alpha.reg_event_fx","refx.alpha.inject_cofx","p__25321","map__25322","cljs.core/--destructure-map","cljs.core.get","cookie-current-user","_","cljs.core.assoc","goog/DEBUG","app.core/sig25323","helix.core/signature!","G__25324","props__20503__auto__","maybe-ref__20504__auto__","vec__25325","helix.core/extract-cljs-props","map__25328","cljs.core.nth","G__25331","cljs.core/with-meta","helix.core/register!","app.core/dashboard-screen","user","app.components.dashboard.header/Header","app.components.aside/Aside","app.components.dashboard.main/Main","app.core/sig25332","G__25333","vec__25334","map__25337","G__25342","app.core/landing-screen","current-route","refx.alpha/use-sub","route-data","helix.core/get-react","obj25339","obj25341","obj25349","obj25351","app.components.nav/NavBar","or__5045__auto__","temp__5804__auto__","view","app.auth.views/login-view","app.components.footer/FooterComponent","app.core/sig25343","G__25344","vec__25345","G__25352","app.core/app","js/app","js/app.core","js/app.core.root","app.core/root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","app.core/render","app.core/setup!","refx.alpha/clear-subscription-cache!","refx.alpha/dispatch-sync","app.routes.core/init-routes!","app.routes.bookmarks/routes","app.core/init","obj25330"],"sourcesContent":["(ns app.core\n  (:require\n   [\"react-dom/client\" :as rdom]\n   [app.auth.db]\n   [app.auth.events]\n   [app.auth.subs]\n   [app.auth.views :as auth]\n   [app.components.aside :as dashboard]\n   [app.components.dashboard.header :refer [Header]]\n   [app.components.dashboard.main :refer [Main]]\n   [app.components.footer :refer [FooterComponent]]\n   [app.components.nav :refer [NavBar]]\n   [app.lib :refer [defnc]]\n   [app.routes.bookmarks :as routes.bookmarks]\n   [app.routes.core :as routes]\n   [app.routes.events]\n   [app.routes.subs]\n   [helix.core :refer [$]]\n   [helix.dom :as d]\n   [refx.alpha :as refx]))\n\n(def default-db\n  {:current-route nil\n   :current-user nil})\n\n;;; Events ;;;\n\n(refx/reg-event-fx\n ::initialize-db\n [(refx/inject-cofx :app.auth/cookie)]\n (fn [{:keys [cookie-current-user]} _]\n   {:db (assoc default-db\n               :current-user cookie-current-user)}))\n\n;;; Components ;;;\n\n(defnc dashboard-screen\n  [{:keys [user]}]\n  (d/body\n   {:class-name\n    \"relative bg-yellow-50 overflow-hidden max-h-screen\"}\n   ($ Header)\n   ($ dashboard/Aside)\n   ($ Main)))\n\n(defnc landing-screen [{:keys [user]}]\n  (let [current-route (refx/use-sub [:app.routes/current-route])\n        route-data (:data current-route)]\n    (d/div\n     ($ NavBar {:user user})\n     (if (or user (:public? route-data))\n       (when-let [view (:view route-data)]\n         ($ view {:match current-route}))\n       ($ auth/login-view))\n     ($ FooterComponent))))\n\n(defnc app []\n  (let [user (refx/use-sub [:app.auth/current-user])]\n    (d/div\n     (if user\n       ($ dashboard-screen {:user user})\n       ($ landing-screen {:user user})))))\n\n;;; Setup ;;;\n\n(defonce root\n  (rdom/createRoot (js/document.getElementById \"app\")))\n\n(defn render []\n  (.render root ($ app)))\n\n(defn setup! []\n  (refx/clear-subscription-cache!)\n  (refx/dispatch-sync [::initialize-db])\n  (routes/init-routes! routes.bookmarks/routes))\n\n(defn ^:export init []\n  (setup!)\n  (render))\n"]}