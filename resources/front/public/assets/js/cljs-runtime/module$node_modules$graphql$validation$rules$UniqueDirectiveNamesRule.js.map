{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueDirectiveNamesRule.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,wBAAR,CASAA,QAAiC,CAACC,OAAD,CAAU,CACzC,MAAMC,oBAAsBL,MAAOM,CAAAA,MAAP,CAAc,IAAd,CAA5B,CACMC,OAASH,OAAQI,CAAAA,SAAR,EACf,OAAO,CACLC,mBAAmB,CAACC,IAAD,CAAO,CACxB,MAAMC,cAAgBD,IAAKE,CAAAA,IAAKV,CAAAA,KAEhC,IACa,IADb,GACEK,MADF,EAEa,IAAK,EAFlB,GAEEA,MAFF,EAGEA,MAAOM,CAAAA,YAAP,CAAoBF,aAApB,CAHF,CAKEP,OAAQU,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,eAAcL,aAAd,yDADH;AAEE,CACEM,MAAOP,IAAKE,CAAAA,IADd,CAFF,CADF,CALF,KA6BA,OAbIP,oBAAA,CAAoBM,aAApB,CAAJ,CACEP,OAAQU,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,2CAA0CL,aAA1C,IADH,CAEE,CACEM,MAAO,CAACZ,mBAAA,CAAoBM,aAApB,CAAD,CAAqCD,IAAKE,CAAAA,IAA1C,CADT,CAFF,CADF,CADF,CAUEP,mBAAA,CAAoBM,aAApB,CAVF,CAUuCD,IAAKE,CAAAA,IAGrC,CAAA,CAAA,CAhCiB,CADrB,CAHkC,CAP3C,KAAIG,cAAgBlB,OAAA,CAAQ,gDAAR,CAR8G;",
"sources":["node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueDirectiveNamesRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","UniqueDirectiveNamesRule","context","knownDirectiveNames","create","schema","getSchema","DirectiveDefinition","node","directiveName","name","getDirective","reportError","_GraphQLError","GraphQLError","nodes"]
}
