{"version":3,"sources":["front/app/core.cljs"],"mappings":"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","names":["front.app.core/default-db","refx.alpha.reg_event_fx","refx.alpha.inject_cofx","p__40531","map__40532","cljs.core/--destructure-map","cljs.core.get","cookie-current-user","_","cljs.core.assoc","goog/DEBUG","front.app.core/sig40533","helix.core/signature!","G__40534","props__32635__auto__","maybe-ref__32636__auto__","vec__40535","helix.core/extract-cljs-props","map__40538","cljs.core.nth","G__40541","cljs.core/with-meta","helix.core/register!","front.app.core/dashboard-screen","user","front.app.components.dashboard.header/Header","front.app.components.aside/Aside","front.app.components.dashboard.main/Main","front.app.core/sig40542","G__40543","vec__40544","map__40547","G__40552","front.app.core/landing-screen","current-route","refx.alpha/use-sub","route-data","helix.core/get-react","obj40549","obj40551","obj40559","obj40561","front.app.components.nav/NavBar","or__5045__auto__","temp__5804__auto__","view","front.app.auth.views/login-view","front.app.components.footer/FooterComponent","front.app.core/sig40553","G__40554","vec__40555","G__40562","front.app.core/app","js/front","js/front.app","js/front.app.core","js/front.app.core.root","front.app.core/root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","front.app.core/render","front.app.core/setup!","refx.alpha/clear-subscription-cache!","refx.alpha/dispatch-sync","front.app.routes.core/init-routes!","front.app.routes.bookmarks/routes","front.app.core/init","obj40540"],"sourcesContent":["(ns front.app.core\n  (:require\n   [\"react-dom/client\" :as rdom]\n   [front.app.auth.db]\n   [front.app.auth.events]\n   [front.app.auth.subs]\n   [front.app.auth.views :as auth]\n   [front.app.components.aside :as dashboard]\n   [front.app.components.dashboard.header :refer [Header]]\n   [front.app.components.dashboard.main :refer [Main]]\n   [front.app.components.footer :refer [FooterComponent]]\n   [front.app.components.nav :refer [NavBar]]\n   [front.app.lib :refer [defnc]]\n   [front.app.routes.bookmarks :as routes.bookmarks]\n   [front.app.routes.core :as routes]\n   [front.app.routes.events]\n   [front.app.routes.subs]\n   [helix.core :refer [$]]\n   [helix.dom :as d]\n   [refx.alpha :as refx]))\n\n(def default-db\n  {:current-route nil\n   :current-user nil})\n\n;;; Events ;;;\n\n(refx/reg-event-fx\n ::initialize-db\n [(refx/inject-cofx :app.auth/cookie)]\n (fn [{:keys [cookie-current-user]} _]\n   {:db (assoc default-db\n               :current-user cookie-current-user)}))\n\n;;; Components ;;;\n\n(defnc dashboard-screen\n  [{:keys [user]}]\n  (d/body\n   {:class-name\n    \"relative bg-yellow-50 overflow-hidden max-h-screen\"}\n   ($ Header)\n   ($ dashboard/Aside)\n   ($ Main)))\n\n(defnc landing-screen [{:keys [user]}]\n  (let [current-route (refx/use-sub [:app.routes/current-route])\n        route-data (:data current-route)]\n    (d/div\n     ($ NavBar {:user user})\n     (if (or user (:public? route-data))\n       (when-let [view (:view route-data)]\n         ($ view {:match current-route}))\n       ($ auth/login-view))\n     ($ FooterComponent))))\n\n(defnc app []\n  (let [user (refx/use-sub [:app.auth/current-user])]\n    (d/div\n     (if user\n       ($ dashboard-screen {:user user})\n       ($ landing-screen {:user user})))))\n\n;;; Setup ;;;\n\n(defonce root\n  (rdom/createRoot (js/document.getElementById \"app\")))\n\n(defn render []\n  (.render root ($ app)))\n\n(defn setup! []\n  (refx/clear-subscription-cache!)\n  (refx/dispatch-sync [::initialize-db])\n  (routes/init-routes! routes.bookmarks/routes))\n\n(defn ^:export init []\n  (setup!)\n  (render))\n"]}