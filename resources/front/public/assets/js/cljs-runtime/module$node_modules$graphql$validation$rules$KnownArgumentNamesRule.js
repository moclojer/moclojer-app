shadow$provide.module$node_modules$graphql$validation$rules$KnownArgumentNamesRule=function(global,require,module,exports){function KnownArgumentNamesOnDirectivesRule(context){const directiveArgs=Object.create(null);var schema=context.getSchema();schema=schema?schema.getDirectives():_directives.specifiedDirectives;for(var directive of schema)directiveArgs[directive.name]=directive.args.map(arg=>arg.name);directive=context.getDocument().definitions;for(const def of directive)if(def.kind===_kinds.Kind.DIRECTIVE_DEFINITION){var _def$arguments;
directive=null!==(_def$arguments=def.arguments)&&void 0!==_def$arguments?_def$arguments:[];directiveArgs[def.name.value]=directive.map(arg=>arg.name.value)}return{Directive(directiveNode){const directiveName=directiveNode.name.value,knownArgs=directiveArgs[directiveName];if(directiveNode.arguments&&knownArgs)for(const argNode of directiveNode.arguments)if(directiveNode=argNode.name.value,!knownArgs.includes(directiveNode)){const suggestions=(0,_suggestionList.suggestionList)(directiveNode,knownArgs);
context.reportError(new _GraphQLError.GraphQLError(`Unknown argument "${directiveNode}" on directive "@${directiveName}".`+(0,_didYouMean.didYouMean)(suggestions),{nodes:argNode}))}return!1}}}Object.defineProperty(exports,"__esModule",{value:!0});exports.KnownArgumentNamesOnDirectivesRule=KnownArgumentNamesOnDirectivesRule;exports.KnownArgumentNamesRule=function(context){return{...KnownArgumentNamesOnDirectivesRule(context),Argument(argNode){var argDef=context.getArgument();const fieldDef=context.getFieldDef(),
parentType=context.getParentType();if(!argDef&&fieldDef&&parentType){argDef=argNode.name.value;var knownArgsNames=fieldDef.args.map(arg=>arg.name);knownArgsNames=(0,_suggestionList.suggestionList)(argDef,knownArgsNames);context.reportError(new _GraphQLError.GraphQLError(`Unknown argument "${argDef}" on field "${parentType.name}.${fieldDef.name}".`+(0,_didYouMean.didYouMean)(knownArgsNames),{nodes:argNode}))}}}};var _didYouMean=require("module$node_modules$graphql$jsutils$didYouMean"),_suggestionList=
require("module$node_modules$graphql$jsutils$suggestionList"),_GraphQLError=require("module$node_modules$graphql$error$GraphQLError"),_kinds=require("module$node_modules$graphql$language$kinds"),_directives=require("module$node_modules$graphql$type$directives")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$KnownArgumentNamesRule.js.map
