{
"version":3,
"file":"module$node_modules$graphql$jsutils$isIterableObject.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAmBAA,QAAyB,CAACC,aAAD,CAAgB,CACvC,MAC2B,QAD3B,GACE,MAAOA,cADT,EAI0C,UAJ1C,GAEE,OAA0B,IAAlB,GAAAA,aAAA,EAA4C,IAAK,EAAjD,GAA0BA,aAA1B,CACJ,IAAK,EADD,CAEJA,aAAA,CAAcC,MAAOC,CAAAA,QAArB,CAFJ,CAHqC,CAzBwE;",
"sources":["node_modules/graphql/jsutils/isIterableObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$jsutils$isIterableObject\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isIterableObject = isIterableObject;\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nfunction isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","isIterableObject","maybeIterable","Symbol","iterator"]
}
