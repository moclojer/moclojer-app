{
"version":3,
"file":"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$parse_relative_url.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,yGAAA,CAA8H,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtKC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CACzCG,MAAO,CAAA,CADkC,CAA7C,CAGAH,QAAQI,CAAAA,gBAAR,CAGAA,QAAyB,CAACC,GAAD,CAAMC,IAAN,CAAY,CACjC,MAAMC,WAAa,IAAIC,GAAJ,CAA0B,WAAlB,GAAA,MAAOC,OAAP,CAAgC,UAAhC,CAAyDC,CAAX,CAAA,CAAGC,MAAQD,EAAAA,iBAAZ,EAArD,CACbE,KAAAA,CAAeN,IAAA,CAAO,IAAIE,GAAJ,CAAQF,IAAR,CAAcC,UAAd,CAAP,CAAmCF,GAAIQ,CAAAA,UAAJ,CAAe,GAAf,CAAA,CAAsB,IAAIL,GAAJ,CAA0B,WAAlB,GAAA,MAAOC,OAAP,CAAgC,UAAhC,CAA6CA,MAAOK,CAAAA,QAASC,CAAAA,IAArE,CAAtB,CAAmGR,UAC3J,OAAM,CAAES,QAAF;AAAaC,YAAb,CAA4BC,MAA5B,CAAqCC,IAArC,CAA4CJ,IAA5C,CAAmDK,MAAnD,CAAA,CAA+D,IAAIZ,GAAJ,CAAQH,GAAR,CAAaO,IAAb,CACrE,IAAIQ,MAAJ,GAAeb,UAAWa,CAAAA,MAA1B,CACI,KAAUC,MAAJ,CAAW,oDAAmDhB,GAAnD,EAAX,CAAN,CAEJ,MAAO,CACHW,QADG,CAEHM,MAAyBC,CAAjB,CAAA,CAAGC,YAAcD,EAAAA,sBAAlB,CAAyCN,YAAzC,CAFJ,CAGHC,MAHG,CAIHC,IAJG,CAKHJ,KAAMA,IAAKU,CAAAA,KAAL,CAAWlB,UAAWa,CAAAA,MAAOM,CAAAA,MAA7B,CALH,CAP0B,CAFrC,KAAIf,OAASb,OAAA,CAAQ,iFAAR,CAAb,CACI0B,aAAe1B,OAAA,CAAQ,oGAAR,CAPmJ;",
"sources":["node_modules/moclojer-components/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$parse_relative_url\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\nvar _utils = require(\"../../utils\");\nvar _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n    const { pathname , searchParams , search , hash , href , origin  } = new URL(url, resolvedBase);\n    if (origin !== globalBase.origin) {\n        throw new Error(`invariant: invalid relative URL, router received ${url}`);\n    }\n    return {\n        pathname,\n        query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n        search,\n        hash,\n        href: href.slice(globalBase.origin.length)\n    };\n}\n\n//# sourceMappingURL=parse-relative-url.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","parseRelativeUrl","url","base","globalBase","URL","window","getLocationOrigin","_utils","resolvedBase","startsWith","location","href","pathname","searchParams","search","hash","origin","Error","query","searchParamsToUrlQuery","_querystring","slice","length"]
}
