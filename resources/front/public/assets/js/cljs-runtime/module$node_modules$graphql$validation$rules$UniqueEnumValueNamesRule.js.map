{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueEnumValueNamesRule.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,wBAAR,CAWAA,QAAiC,CAACC,OAAD,CAAU,CASzCC,QAASA,qBAAoB,CAACC,IAAD,CAAO,CAClC,IAAIC,YAEJ,OAAMC,SAAWF,IAAKG,CAAAA,IAAKP,CAAAA,KAEtBQ,gBAAA,CAAgBF,QAAhB,CAAL,GACEE,eAAA,CAAgBF,QAAhB,CADF,CAC8BR,MAAOW,CAAAA,MAAP,CAAc,IAAd,CAD9B,CAMMC,KAAAA,CAC6B,IAAjC,IAACL,YAAD,CAAgBD,IAAKO,CAAAA,MAArB,GAA0D,IAAK,EAA/D,GAAyCN,YAAzC,CACIA,YADJ,CAEI,EACAO,aAAAA,CAAaJ,eAAA,CAAgBF,QAAhB,CAEnB;IAAK,MAAMO,QAAX,GAAuBH,KAAvB,CAAmC,CAC3BI,IAAAA,CAAYD,QAASN,CAAAA,IAAKP,CAAAA,KAChC,OAAMe,aAAeC,eAAA,CAAgBV,QAAhB,CAGnB,IAAIW,WAAYC,CAAAA,UAAhB,EAA4BH,YAA5B,CADF,EAEEA,YAAaI,CAAAA,QAAb,CAAsBL,IAAtB,CAFF,CAIEZ,OAAQkB,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,eAAchB,QAAd,IAA0BQ,IAA1B,mFADH,CAEE,CACES,MAAOV,QAASN,CAAAA,IADlB,CAFF,CADF,CAJF,CAYWK,YAAA,CAAWE,IAAX,CAAJ,CACLZ,OAAQkB,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,eAAchB,QAAd,IAA0BQ,IAA1B,6BADH,CAEE,CACES,MAAO,CAACX,YAAA,CAAWE,IAAX,CAAD;AAAwBD,QAASN,CAAAA,IAAjC,CADT,CAFF,CADF,CADK,CAULK,YAAA,CAAWE,IAAX,CAVK,CAUmBD,QAASN,CAAAA,IA1BF,CA8BnC,MAAO,CAAA,CA/C2B,CARpC,MAAMiB,OAAStB,OAAQuB,CAAAA,SAAR,EAAf,CACMT,gBAAkBQ,MAAA,CAASA,MAAOE,CAAAA,UAAP,EAAT,CAA+B5B,MAAOW,CAAAA,MAAP,CAAc,IAAd,CADvD,CAEMD,gBAAkBV,MAAOW,CAAAA,MAAP,CAAc,IAAd,CACxB,OAAO,CACLkB,mBAAoBxB,oBADf,CAELyB,kBAAmBzB,oBAFd,CAJkC,CAT3C,KAAIkB,cAAgB1B,OAAA,CAAQ,gDAAR,CAApB,CAEIsB,YAActB,OAAA,CAAQ,6CAAR,CAVgH;",
"sources":["node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueEnumValueNamesRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (\n        (0, _definition.isEnumType)(existingType) &&\n        existingType.getValue(valueName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","UniqueEnumValueNamesRule","context","checkValueUniqueness","node","_node$values","typeName","name","knownValueNames","create","valueNodes","values","valueNames","valueDef","valueName","existingType","existingTypeMap","_definition","isEnumType","getValue","reportError","_GraphQLError","GraphQLError","nodes","schema","getSchema","getTypeMap","EnumTypeDefinition","EnumTypeExtension"]
}
