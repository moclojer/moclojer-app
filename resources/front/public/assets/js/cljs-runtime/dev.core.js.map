{"version":3,"sources":["dev/core.cljs"],"mappings":";AAKA,AAAKA,wBAAgBC;AAErB,qBAAA,rBAAMC;AAAN,AACE,GAAMF;AAAN,AACE,AAACG;;AACD,gHAAA,zGAACC;;AAFH;;;AAIF,gBAAA,hBAAeC;AAAf,AACE,OAAAC,wBAAA,AAAAC,2BAAA,MAAA,WAAAC;AAAA,AAAA,OAAAF,wBAAA,AAAAC,sDAAA,WAAAE,tCAAM,AAACC;AAAP,AAAA,OAAAJ,wBAAA,AAAAC,iDAAA,WAAAE,jCACM,AAACP;AADP,AAAA,OAAAK,2BAEM,AAACI;;;;;;AAET","names":["dev.core/debug?","js/goog.DEBUG","dev.core/dev-setup","cljs.core/enable-console-print!","cljs.core.println","dev.core/init","promesa.protocols/-bind","promesa.protocols/-promise","___32147__auto__","___32146__auto__","dev.msw.core/init!","front.app.core/init"],"sourcesContent":["(ns dev.core\n  (:require [front.app.core :as app]\n            [dev.msw.core :as mock]\n            [promesa.core :as p]))\n\n(def debug? ^boolean goog.DEBUG)\n\n(defn dev-setup []\n  (when debug?\n    (enable-console-print!)\n    (println \"dev mode\")))\n\n(defn ^:export init []\n  (p/do (mock/init!)\n        (dev-setup)\n        (app/init)))\n\n(comment\n  \"Start mock service worker\"\n  (p/do (mock/start!)\n        (.reload js/location)\n        )\n\n  \"Stop mock service worker\"\n  (p/do (mock/stop!)\n        (.reload js/location)))\n"]}