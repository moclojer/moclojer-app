{
"version":3,
"file":"module$node_modules$graphql$utilities$assertValidName.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmClHC,QAASA,iBAAgB,CAACC,IAAD,CAAO,CACd,QAAhB,GAAA,MAAOA,KAAP,EACE,GAAIC,UAAWC,CAAAA,SAAf,EAA0B,CAAA,CAA1B,CAAiC,+BAAjC,CAEF,IAAIF,IAAKG,CAAAA,UAAL,CAAgB,IAAhB,CAAJ,CACE,MAAO,KAAIC,aAAcC,CAAAA,YAAlB,CACJ,SAAQL,IAAR,yEADI,CAKT,IAAI,CACF,GAAIM,WAAYC,CAAAA,UAAhB,EAA4BP,IAA5B,CADE,CAEF,MAAOQ,KAAP,CAAc,CACd,MAAOA,MADO,CAZc,CAhChCC,MAAOC,CAAAA,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ca,MAAO,CAAA,CADoC,CAA7C,CAGAb,QAAQc,CAAAA,eAAR;AAeAA,QAAwB,CAACZ,IAAD,CAAO,CAC7B,MAAMQ,MAAQT,gBAAA,CAAiBC,IAAjB,CAEd,IAAIQ,KAAJ,CACE,KAAMA,MAAN,CAGF,MAAOR,KAPsB,CAd/BF,QAAQC,CAAAA,gBAAR,CAA2BA,gBAE3B,KAAIE,WAAaL,OAAA,CAAQ,+CAAR,CAAjB,CAEIQ,cAAgBR,OAAA,CAAQ,gDAAR,CAFpB,CAIIU,YAAcV,OAAA,CAAQ,6CAAR,CAbgG;",
"sources":["node_modules/graphql/utilities/assertValidName.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$assertValidName\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n\n};"],
"names":["shadow$provide","global","require","module","exports","isValidNameError","name","_devAssert","devAssert","startsWith","_GraphQLError","GraphQLError","_assertName","assertName","error","Object","defineProperty","value","assertValidName"]
}
