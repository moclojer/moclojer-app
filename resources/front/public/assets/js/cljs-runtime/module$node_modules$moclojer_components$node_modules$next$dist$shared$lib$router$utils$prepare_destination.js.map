{
"version":3,
"file":"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$prepare_destination.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/moclojer-components/node_modules/next/dist/shared/lib/router/utils/prepare-destination.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$prepare_destination\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.matchHas = matchHas;\nexports.compileNonPath = compileNonPath;\nexports.prepareDestination = prepareDestination;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _pathToRegexp = require(\"next/dist/compiled/path-to-regexp\");\nvar _escapeRegexp = require(\"../../escape-regexp\");\nvar _parseUrl = require(\"./parse-url\");\nfunction matchHas(req, has, query) {\n    const params = {};\n    const allMatch = has.every((hasItem)=>{\n        let value;\n        let key = hasItem.key;\n        switch(hasItem.type){\n            case 'header':\n                {\n                    key = key.toLowerCase();\n                    value = req.headers[key];\n                    break;\n                }\n            case 'cookie':\n                {\n                    value = req.cookies[hasItem.key];\n                    break;\n                }\n            case 'query':\n                {\n                    value = query[key];\n                    break;\n                }\n            case 'host':\n                {\n                    const { host  } = (req == null ? void 0 : req.headers) || {};\n                    // remove port from host if present\n                    const hostname = host == null ? void 0 : host.split(':')[0].toLowerCase();\n                    value = hostname;\n                    break;\n                }\n            default:\n                {\n                    break;\n                }\n        }\n        if (!hasItem.value && value) {\n            params[getSafeParamName(key)] = value;\n            return true;\n        } else if (value) {\n            const matcher = new RegExp(`^${hasItem.value}$`);\n            const matches = Array.isArray(value) ? value.slice(-1)[0].match(matcher) : value.match(matcher);\n            if (matches) {\n                if (Array.isArray(matches)) {\n                    if (matches.groups) {\n                        Object.keys(matches.groups).forEach((groupKey)=>{\n                            params[groupKey] = matches.groups[groupKey];\n                        });\n                    } else if (hasItem.type === 'host' && matches[0]) {\n                        params.host = matches[0];\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    });\n    if (allMatch) {\n        return params;\n    }\n    return false;\n}\nfunction compileNonPath(value, params) {\n    if (!value.includes(':')) {\n        return value;\n    }\n    for (const key of Object.keys(params)){\n        if (value.includes(`:${key}`)) {\n            value = value.replace(new RegExp(`:${key}\\\\*`, 'g'), `:${key}--ESCAPED_PARAM_ASTERISKS`).replace(new RegExp(`:${key}\\\\?`, 'g'), `:${key}--ESCAPED_PARAM_QUESTION`).replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`).replace(new RegExp(`:${key}(?!\\\\w)`, 'g'), `--ESCAPED_PARAM_COLON${key}`);\n        }\n    }\n    value = value.replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1').replace(/--ESCAPED_PARAM_PLUS/g, '+').replace(/--ESCAPED_PARAM_COLON/g, ':').replace(/--ESCAPED_PARAM_QUESTION/g, '?').replace(/--ESCAPED_PARAM_ASTERISKS/g, '*');\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    return (0, _pathToRegexp).compile(`/${value}`, {\n        validate: false\n    })(params).slice(1);\n}\nfunction prepareDestination(args) {\n    const query = Object.assign({}, args.query);\n    delete query.__nextLocale;\n    delete query.__nextDefaultLocale;\n    delete query.__nextDataReq;\n    let escapedDestination = args.destination;\n    for (const param of Object.keys(_extends({}, args.params, query))){\n        escapedDestination = escapeSegment(escapedDestination, param);\n    }\n    const parsedDestination = (0, _parseUrl).parseUrl(escapedDestination);\n    const destQuery = parsedDestination.query;\n    const destPath = unescapeSegments(`${parsedDestination.pathname}${parsedDestination.hash || ''}`);\n    const destHostname = unescapeSegments(parsedDestination.hostname || '');\n    const destPathParamKeys = [];\n    const destHostnameParamKeys = [];\n    (0, _pathToRegexp).pathToRegexp(destPath, destPathParamKeys);\n    (0, _pathToRegexp).pathToRegexp(destHostname, destHostnameParamKeys);\n    const destParams = [];\n    destPathParamKeys.forEach((key)=>destParams.push(key.name));\n    destHostnameParamKeys.forEach((key)=>destParams.push(key.name));\n    const destPathCompiler = (0, _pathToRegexp).compile(destPath, // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    {\n        validate: false\n    });\n    const destHostnameCompiler = (0, _pathToRegexp).compile(destHostname, {\n        validate: false\n    });\n    // update any params in query values\n    for (const [key1, strOrArray] of Object.entries(destQuery)){\n        // the value needs to start with a forward-slash to be compiled\n        // correctly\n        if (Array.isArray(strOrArray)) {\n            destQuery[key1] = strOrArray.map((value)=>compileNonPath(unescapeSegments(value), args.params));\n        } else {\n            destQuery[key1] = compileNonPath(unescapeSegments(strOrArray), args.params);\n        }\n    }\n    // add path params to query if it's not a redirect and not\n    // already defined in destination query or path\n    let paramKeys = Object.keys(args.params).filter((name)=>name !== 'nextInternalLocale');\n    if (args.appendParamsToQuery && !paramKeys.some((key)=>destParams.includes(key))) {\n        for (const key of paramKeys){\n            if (!(key in destQuery)) {\n                destQuery[key] = args.params[key];\n            }\n        }\n    }\n    let newUrl;\n    try {\n        newUrl = destPathCompiler(args.params);\n        const [pathname, hash] = newUrl.split('#');\n        parsedDestination.hostname = destHostnameCompiler(args.params);\n        parsedDestination.pathname = pathname;\n        parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`;\n        delete parsedDestination.search;\n    } catch (err) {\n        if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n            throw new Error(`To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`);\n        }\n        throw err;\n    }\n    // Query merge order lowest priority to highest\n    // 1. initial URL query values\n    // 2. path segment values\n    // 3. destination specified query values\n    parsedDestination.query = _extends({}, query, parsedDestination.query);\n    return {\n        newUrl,\n        destQuery,\n        parsedDestination\n    };\n}\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */ function getSafeParamName(paramName) {\n    let newParamName = '';\n    for(let i = 0; i < paramName.length; i++){\n        const charCode = paramName.charCodeAt(i);\n        if (charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 // a-z\n        ) {\n            newParamName += paramName[i];\n        }\n    }\n    return newParamName;\n}\nfunction escapeSegment(str, segmentName) {\n    return str.replace(new RegExp(`:${(0, _escapeRegexp).escapeStringRegexp(segmentName)}`, 'g'), `__ESC_COLON_${segmentName}`);\n}\nfunction unescapeSegments(str) {\n    return str.replace(/__ESC_COLON_/gi, ':');\n}\n\n//# sourceMappingURL=prepare-destination.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","compileNonPath","value","params","includes","key","Object","keys","replace","RegExp","compile","_pathToRegexp","validate","slice","getSafeParamName","paramName","newParamName","i","length","charCode","charCodeAt","escapeSegment","str","segmentName","escapeStringRegexp","_escapeRegexp","unescapeSegments","defineProperty","matchHas","req","has","query","every","allMatch","hasItem","type","toLowerCase","headers","cookies","host","hostname","split","matcher","matches","Array","isArray","match","groups","forEach","groupKey","prepareDestination","args","assign","__nextLocale","__nextDefaultLocale","__nextDataReq","escapedDestination","destination","param","_extends","parsedDestination","parseUrl","_parseUrl","destQuery","destPath","pathname","hash","destHostname","destPathParamKeys","destHostnameParamKeys","pathToRegexp","destParams","push","name","destPathCompiler","destHostnameCompiler","key1","strOrArray","entries","map","paramKeys","filter","appendParamsToQuery","some","newUrl","search","err","message","Error","default"]
}
