shadow$provide.module$node_modules$msw$lib$index=function(global,require,module,exports){function set(...args){return res=>{const [name,value]=args;"string"===typeof name?res.headers.append(name,value):(0,import_headers_polyfill.objectToHeaders)(name).forEach((value2,name2)=>{res.headers.append(name2,value2)});return res}}function jsonParse(value){try{return JSON.parse(value)}catch(error2){}}function isObject(value){return null!=value&&"object"===typeof value&&!Array.isArray(value)}function mergeRight(left,
right){return Object.entries(right).reduce((result,[key,rightValue])=>{const leftValue=result[key];if(Array.isArray(leftValue)&&Array.isArray(rightValue))return result[key]=leftValue.concat(rightValue),result;if(isObject(leftValue)&&isObject(rightValue))return result[key]=mergeRight(leftValue,rightValue),result;result[key]=rightValue;return result},Object.assign({},left))}function formatMessage(message,...positionals){return`${"[MSW]"} ${(0,import_outvariant.format)(message,...positionals)}`}function printStartMessage(args=
{}){args.quiet||(console.groupCollapsed(`%c${devUtils.formatMessage(args.message||"Mocking enabled.")}`,"color:orangered;font-weight:bold;"),console.log("%cDocumentation: %chttps://mswjs.io/docs","font-weight:bold","font-weight:normal"),console.log("Found an issue? https://github.com/mswjs/msw/issues"),args.workerUrl&&console.log("Worker script URL:",args.workerUrl),args.workerScope&&console.log("Worker scope:",args.workerScope),console.groupEnd())}async function enableMocking(context,options){var _a,
_b;context.workerChannel.send("MOCK_ACTIVATE");await context.events.once("MOCKING_ENABLED");context.isMockingEnabled?devUtils.warn('Found a redundant "worker.start()" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this "worker.start()" call.'):(context.isMockingEnabled=!0,printStartMessage({quiet:options.quiet,workerScope:null==(_a=context.registration)?void 0:_a.scope,workerUrl:null==(_b=context.worker)?void 0:_b.scriptURL}))}function getRequestCookies(request){if("undefined"===
typeof document||"undefined"===typeof location)return{};switch(request.credentials){case "same-origin":return location.origin===request.url.origin?cookieUtils2.parse(document.cookie):{};case "include":return cookieUtils2.parse(document.cookie);default:return{}}}function parseContentHeaders(headersString){var _a,_b,headers=(0,import_headers_polyfill3.stringToHeaders)(headersString);headersString=headers.get("content-type")||"text/plain";headers=headers.get("content-disposition");if(!headers)throw Error('"Content-Disposition" header is required.');
const directives=headers.split(";").reduce((acc,chunk)=>{const [name2,...rest2]=chunk.trim().split("\x3d");acc[name2]=rest2.join("\x3d");return acc},{});headers=null==(_a=directives.name)?void 0:_a.slice(1,-1);_a=null==(_b=directives.filename)?void 0:_b.slice(1,-1);return{name:headers,filename:_a,contentType:headersString}}function parseMultipartData(data2,headers){if(headers=null==headers?void 0:headers.get("content-type"))if([,...headers]=headers.split(/; */),headers=headers.filter(d=>d.startsWith("boundary\x3d")).map(s=>
s.replace(/^boundary=/,""))[0])if(data2=data2.split(new RegExp(`--+${headers}`)).filter(chunk=>chunk.startsWith("\r\n")&&chunk.endsWith("\r\n")).map(chunk=>chunk.trimStart().replace(/\r\n$/,"")),data2.length){headers={};try{for(const field2 of data2){const [contentHeaders,...rest2]=field2.split("\r\n\r\n"),contentBody=rest2.join("\r\n\r\n"),{contentType:contentType2,filename,name}=parseContentHeaders(contentHeaders),value=void 0===filename?contentBody:new File([contentBody],filename,{type:contentType2}),
parsedValue=headers[name];void 0===parsedValue?headers[name]=value:Array.isArray(parsedValue)?headers[name]=[...parsedValue,value]:headers[name]=[parsedValue,value]}return headers}catch(error2){}}}function parseBody(body2,headers){var _a;if(!body2)return body2;const contentType=(null==(_a=null==headers?void 0:headers.get("content-type"))?void 0:_a.toLowerCase())||"";return contentType.startsWith("multipart/form-data")&&"object"!==typeof body2?parseMultipartData(body2.toString(),headers)||body2:contentType.includes("json")&&
"object"!==typeof body2?jsonParse(body2.toString())||body2:body2}function isStringEqual(actual,expected){return actual.toLowerCase()===expected.toLowerCase()}function parseWorkerRequest(rawRequest){const url=new URL(rawRequest.url),headers=new import_headers_polyfill5.Headers(rawRequest.headers);return new MockedRequest(url,__spreadProps(__spreadValues({},rawRequest),{body:(0,import_interceptors2.encodeBuffer)(rawRequest.body||""),headers}))}function parseDocumentNode(node){var _a;node=node.definitions.find(def=>
"OperationDefinition"===def.kind);return{operationType:null==node?void 0:node.operation,operationName:null==(_a=null==node?void 0:node.name)?void 0:_a.value}}function getGraphQLInput(request){var _a,_b;switch(request.method){case "GET":var query$jscomp$0=request.url.searchParams.get("query"),variables$jscomp$0=request.url.searchParams.get("variables")||"";return{query:query$jscomp$0,variables:jsonParse(variables$jscomp$0)};case "POST":if(null==(_a=request.body)?0:_a.query){const {query,variables}=
request.body;return{query,variables}}if(null==(_b=request.body)?0:_b.operations){request=request.body;const {operations,map}=request;_a=request;_b=["operations","map"];request={};for(var prop in _a)__hasOwnProp.call(_a,prop)&&0>_b.indexOf(prop)&&(request[prop]=_a[prop]);if(null!=_a&&__getOwnPropSymbols)for(prop of __getOwnPropSymbols(_a))0>_b.indexOf(prop)&&__propIsEnum.call(_a,prop)&&(request[prop]=_a[prop]);prop=jsonParse(operations)||{};if(!prop.query)return null;_a=jsonParse(map||"")||{};if(prop.variables){_b=
_a;_a={variables:prop.variables};for(const [key,pathArray]of Object.entries(_b)){if(!(key in request))throw Error(`Given files do not have a key '${key}' .`);for(query$jscomp$0 of pathArray){const [lastPath,...reversedPaths]=query$jscomp$0.split(".").reverse();_b=reversedPaths.reverse();let target=_a;for(variables$jscomp$0 of _b){if(!(variables$jscomp$0 in target))throw Error(`Property '${_b}' is not in operations.`);target=target[variables$jscomp$0]}target[lastPath]=request[key]}}query$jscomp$0=
_a.variables}else query$jscomp$0={};return{query:prop.query,variables:query$jscomp$0}}default:return null}}function parseGraphQLRequest(request){var input=getGraphQLInput(request);if(input&&input.query){var {query,variables}=input;try{const ast=(0,import_graphql.parse)(query);var JSCompiler_inline_result=parseDocumentNode(ast)}catch(error2){JSCompiler_inline_result=error2}input=JSCompiler_inline_result;if(input instanceof Error)throw JSCompiler_inline_result=getPublicUrlFromRequest(request),Error(devUtils.formatMessage('Failed to intercept a GraphQL request to "%s %s": cannot parse query. See the error message from the parser below.\n\n%s',
request.method,JSCompiler_inline_result,input.message));return{operationType:input.operationType,operationName:input.operationName,variables}}}function getStatusCodeColor(status2){return 300>status2?"#69AB32":400>status2?"#F0BB4B":"#E95F5D"}function getTimestamp(){const now=new Date;return[now.getHours(),now.getMinutes(),now.getSeconds()].map(String).map(chunk=>chunk.slice(0,2)).map(chunk=>chunk.padStart(2,"0")).join(":")}function prepareRequest(request){return __spreadProps(__spreadValues({},request),
{body:request.body,headers:request.headers.all()})}function prepareResponse(res){const responseHeaders=(0,import_headers_polyfill6.objectToHeaders)(res.headers);return __spreadProps(__spreadValues({},res),{body:parseBody(res.body,responseHeaders)})}function cleanUrl(path){return path.replace(REDUNDANT_CHARACTERS_EXP,"")}function coercePath(path){return path.replace(/([:a-zA-Z_-]*)(\*{1,2})+/g,(_,parameterName,wildcard)=>parameterName?parameterName.startsWith(":")?`${parameterName}${wildcard}`:`${parameterName}${"(.*)"}`:
"(.*)").replace(/([^\/])(:)(?=\d+)/,"$1\\$2").replace(/^([^\/]+)(:)(?=\/\/)/,"$1\\$2")}function matchRequestUrl(url,path,baseUrl){path instanceof RegExp||(/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(path)||path.startsWith("*")||(path=(baseUrl=baseUrl||"undefined"!==typeof document&&document.baseURI)?decodeURI((new URL(encodeURI(path),baseUrl)).href):path),path=cleanUrl(path));path="string"===typeof path?coercePath(path):path;url=(0,import_getCleanUrl.getCleanUrl)(url);url=(0,import_path_to_regexp.match)(path,
{decode:decodeURIComponent})(url);return{matches:!1!==url,params:url&&url.params||{}}}function compose(...fns){return(...args)=>fns.reduceRight((leftFn,rightFn)=>leftFn instanceof Promise?Promise.resolve(leftFn).then(rightFn):rightFn(leftFn),args[0])}function createResponseComposition(responseOverrides,defaultTransformers=defaultResponseTransformers){return async(...transformers)=>{const initialResponse=Object.assign({},defaultResponse,{headers:new import_headers_polyfill7.Headers({"x-powered-by":"msw"})},
responseOverrides);transformers=[...defaultTransformers,...transformers].filter(Boolean);return 0<transformers.length?compose(...transformers)(initialResponse):initialResponse}}function getCallFrame(error2){if(error2=error2.stack)if(error2=error2.split("\n").slice(1).find(frame=>!(SOURCE_FRAME.test(frame)||BUILD_FRAME.test(frame))))return error2.replace(/\s*at [^()]*\(([^)]+)\)/,"$1").replace(/^@/,"")}function tryCatch(fn,onException){try{return fn()}catch(error2){null==onException?void 0:onException(error2)}}
function groupHandlersByType(handlers){return handlers.reduce((groups,handler)=>{handler instanceof RestHandler&&groups.rest.push(handler);handler instanceof GraphQLHandler&&groups.graphql.push(handler);return groups},{rest:[],graphql:[]})}function getRestHandlerScore(){return(request,handler)=>{const {path,method}=handler.info;if(path instanceof RegExp||method instanceof RegExp)return Infinity;handler=isStringEqual(request.method,method)?TYPE_MATCH_DELTA:0;request=getPublicUrlFromRequest(request);
return(0,import_js_levenshtein.default)(request,path)-handler}}function getGraphQLHandlerScore(parsedQuery){return(_,handler)=>{if("undefined"===typeof parsedQuery.operationName)return Infinity;const {operationType,operationName}=handler.info;if("string"!==typeof operationName)return Infinity;_=parsedQuery.operationType===operationType?TYPE_MATCH_DELTA:0;return(0,import_js_levenshtein.default)(parsedQuery.operationName,operationName)-_}}function getSuggestedHandler(request,handlers,getScore){return handlers.reduce((suggestions,
handler)=>{const score=getScore(request,handler);return suggestions.concat([[score,handler]])},[]).sort(([leftScore],[rightScore])=>leftScore-rightScore).filter(([score])=>score<=MAX_MATCH_SCORE).slice(0,MAX_SUGGESTION_COUNT).map(([,handler])=>handler)}function getSuggestedHandlersMessage(handlers){return 1<handlers.length?`Did you mean to request one of the following resources instead?

${handlers.map(handler=>`  \u2022 ${handler.info.header}`).join("\n")}`:`Did you mean to request "${handlers[0].info.header}" instead?`}function onUnhandledRequest(request,handlers,strategy="warn"){function applyStrategy(strategy2){var JSCompiler_inline_result=getPublicUrlFromRequest(request);JSCompiler_inline_result=parsedGraphQLQuery?`${parsedGraphQLQuery.operationType} ${parsedGraphQLQuery.operationName} (${request.method} ${JSCompiler_inline_result})`:`${request.method} ${JSCompiler_inline_result}`;
var JSCompiler_inline_result$jscomp$0=groupHandlersByType(handlers);JSCompiler_inline_result$jscomp$0=getSuggestedHandler(request,parsedGraphQLQuery?JSCompiler_inline_result$jscomp$0.graphql:JSCompiler_inline_result$jscomp$0.rest,parsedGraphQLQuery?getGraphQLHandlerScore(parsedGraphQLQuery):getRestHandlerScore());JSCompiler_inline_result$jscomp$0=0<JSCompiler_inline_result$jscomp$0.length?getSuggestedHandlersMessage(JSCompiler_inline_result$jscomp$0):"";JSCompiler_inline_result=["captured a request without a matching request handler:",
`  \u2022 ${JSCompiler_inline_result}`,JSCompiler_inline_result$jscomp$0,"If you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks"].filter(Boolean).join("\n\n");switch(strategy2){case "error":throw devUtils.error("Error: %s",JSCompiler_inline_result),Error(devUtils.formatMessage('Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.'));case "warn":devUtils.warn("Warning: %s",
JSCompiler_inline_result);break;case "bypass":break;default:throw Error(devUtils.formatMessage('Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',strategy2));}}const parsedGraphQLQuery=tryCatch(()=>parseGraphQLRequest(request));"function"===typeof strategy?strategy(request,{warning:applyStrategy.bind(null,"warn"),error:applyStrategy.bind(null,
"error")}):applyStrategy(strategy)}function readResponseCookies(request,response2){import_cookies2.store.add(__spreadProps(__spreadValues({},request),{url:request.url.toString()}),response2);import_cookies2.store.persist()}async function handleRequest(request,handlers,options,emitter,handleRequestOptions){var _a,_b,_c,_d,_e,_f;emitter.emit("request:start",request);if("true"===request.headers.get("x-msw-bypass"))emitter.emit("request:end",request),null==(_a=null==handleRequestOptions?void 0:handleRequestOptions.onPassthroughResponse)?
void 0:_a.call(handleRequestOptions,request);else{var [lookupError,lookupResult]=await (0,import_until2.until)(()=>getResponse(request,handlers,null==handleRequestOptions?void 0:handleRequestOptions.resolutionContext));if(lookupError)throw emitter.emit("unhandledException",lookupError,request),lookupError;var {handler,response:response2}=lookupResult;if(handler)if(response2)if(response2.passthrough)emitter.emit("request:end",request),null==(_d=null==handleRequestOptions?void 0:handleRequestOptions.onPassthroughResponse)?
void 0:_d.call(handleRequestOptions,request);else return readResponseCookies(request,response2),emitter.emit("request:match",request),options=(null==(_e=null==handleRequestOptions?void 0:handleRequestOptions.transformResponse)?void 0:_e.call(handleRequestOptions,response2))||response2,null==(_f=null==handleRequestOptions?void 0:handleRequestOptions.onMockedResponse)?void 0:_f.call(handleRequestOptions,options,lookupResult),emitter.emit("request:end",request),options;else devUtils.warn("Expected response resolver to return a mocked response Object, but got %s. The original response is going to be used instead.\n\n  • %s\n    %s",
response2,handler.info.header,handler.info.callFrame),emitter.emit("request:end",request),null==(_c=null==handleRequestOptions?void 0:handleRequestOptions.onPassthroughResponse)?void 0:_c.call(handleRequestOptions,request);else onUnhandledRequest(request,handlers,options.onUnhandledRequest),emitter.emit("request:unhandled",request),emitter.emit("request:end",request),null==(_b=null==handleRequestOptions?void 0:handleRequestOptions.onPassthroughResponse)?void 0:_b.call(handleRequestOptions,request)}}
function serializeResponse(source){return{status:source.status,statusText:source.statusText,headers:(0,import_headers_polyfill9.flattenHeadersObject)((0,import_headers_polyfill9.headersToObject)(source.headers)),body:source.body}}function transformResponse(response2){return{status:response2.status,statusText:response2.statusText,headers:response2.headers.all(),body:response2.body,delay:response2.delay}}async function requestIntegrityCheck(context,serviceWorker){context.workerChannel.send("INTEGRITY_CHECK_REQUEST");
({payload:context}=await context.events.once("INTEGRITY_CHECK_RESPONSE"));if("b3066ef78c2f9090b4ce87e874965995"!==context)throw Error(`Currently active Service Worker (${context}) is behind the latest published one (${"b3066ef78c2f9090b4ce87e874965995"}).`);return serviceWorker}function deferNetworkRequestsUntil(predicatePromise){const originalXhrSend=window.XMLHttpRequest.prototype.send;window.XMLHttpRequest.prototype.send=function(...args){(0,import_until3.until)(()=>predicatePromise).then(()=>
{window.XMLHttpRequest.prototype.send=originalXhrSend;this.send(...args)})};const originalFetch=window.fetch;window.fetch=async(...args)=>{await (0,import_until3.until)(()=>predicatePromise);window.fetch=originalFetch;return window.fetch(...args)}}function createResponseListener(context){return(_,message)=>{var _a;({payload:_}=message);null!=(_a=_.type)&&_a.includes("opaque")||(_a=new Response(_.body||null,_),"msw"===_a.headers.get("x-powered-by")?context.emitter.emit("response:mocked",_a,_.requestId):
context.emitter.emit("response:bypass",_a,_.requestId))}}function validateWorkerScope(registration,options){(null==options?0:options.quiet)||location.href.startsWith(registration.scope)||devUtils.warn(`Cannot intercept requests on this page because it's outside of the worker's scope ("${registration.scope}"). If you wish to mock API requests on this page, you must resolve this scope issue.

- (Recommended) Register the worker at the root level ("/") of your application.
- Set the "Service-Worker-Allowed" response header to allow out-of-scope workers.`)}function printStopMessage(args={}){args.quiet||console.log(`%c${devUtils.formatMessage("Mocking disabled.")}`,"color:orangered;font-weight:bold;")}function use(currentHandlers,...handlers){currentHandlers.unshift(...handlers)}function restoreHandlers(handlers){handlers.forEach(handler=>{handler.markAsSkipped(!1)})}function resetHandlers(initialHandlers,...nextHandlers){return 0<nextHandlers.length?[...nextHandlers]:
[...initialHandlers]}function prepareStartHandler(handler,context){return initialOptions=>{context.startOptions=mergeRight(DEFAULT_START_OPTIONS,initialOptions||{});return handler(context.startOptions,initialOptions||{})}}function createResponseFromIsomorphicResponse(response2){return __spreadProps(__spreadValues({},response2),{ok:200<=response2.status&&300>response2.status,url:"",type:"default",status:response2.status,statusText:response2.statusText,headers:response2.headers,body:new ReadableStream,
redirected:null!=response2.headers.get("Location"),async text(){return response2.body||""},async json(){return JSON.parse(response2.body||"")},async arrayBuffer(){return(0,import_interceptors3.encodeBuffer)(response2.body||"")},bodyUsed:!1,formData:noop,blob:noop,clone:noop})}function createFallbackRequestListener(context,options){const interceptor=new import_interceptors4.BatchInterceptor({name:"fallback",interceptors:[new import_fetch3.FetchInterceptor,new import_XMLHttpRequest.XMLHttpRequestInterceptor]});
interceptor.on("request",async request=>{var mockedRequest=new MockedRequest(request.url,__spreadProps(__spreadValues({},request),{body:await request.arrayBuffer()}));(mockedRequest=await handleRequest(mockedRequest,context.requestHandlers,options,context.emitter,{transformResponse(response3){return{status:response3.status,statusText:response3.statusText,headers:response3.headers.all(),body:response3.body,delay:response3.delay}},onMockedResponse(_,{handler,publicRequest,parsedRequest}){if(!options.quiet)context.emitter.once("response:mocked",
response3=>{handler.log(publicRequest,serializeResponse(response3),parsedRequest)})}}))&&request.respondWith(mockedRequest)});interceptor.on("response",(request,response2)=>{if(request.id){var browserResponse=createResponseFromIsomorphicResponse(response2);"msw"===response2.headers.get("x-powered-by")?context.emitter.emit("response:mocked",browserResponse,request.id):context.emitter.emit("response:bypass",browserResponse,request.id)}});interceptor.apply();return interceptor}function createFallbackStart(context){return async function(options){context.fallbackInterceptor=
createFallbackRequestListener(context,options);printStartMessage({message:"Mocking enabled (fallback mode).",quiet:options.quiet})}}function createFallbackStop(context){return function(){var _a,_b;null==(_a=context.fallbackInterceptor)?void 0:_a.dispose();printStopMessage({quiet:null==(_b=context.startOptions)?void 0:_b.quiet})}}function pipeEvents(source,destination){const rawEmit=source.emit;rawEmit._isPiped||(source.emit=function(event,...data2){destination.emit(event,...data2);return rawEmit.call(this,
event,...data2)},source.emit._isPiped=!0)}function setupWorker(...requestHandlers){requestHandlers.forEach(handler=>{if(Array.isArray(handler))throw Error(devUtils.formatMessage('Failed to call "setupWorker" given an Array of request handlers (setupWorker([a, b])), expected to receive each handler individually: setupWorker(a, b).'));});if((0,import_is_node_process3.isNodeProcess)())throw Error(devUtils.formatMessage("Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead."));
var emitter=new import_strict_event_emitter.StrictEventEmitter;const publicEmitter=new import_strict_event_emitter.StrictEventEmitter;pipeEvents(emitter,publicEmitter);const context={isMockingEnabled:!1,startOptions:void 0,worker:null,registration:null,requestHandlers:[...requestHandlers],emitter,workerChannel:{on(eventType,callback){context.events.addListener(navigator.serviceWorker,"message",event=>{if(event.source===context.worker){var message=event.data;message&&message.type===eventType&&callback(event,
message)}})},send(type){var _a;null==(_a=context.worker)?void 0:_a.postMessage(type)}},events:{addListener(target,eventType,callback){target.addEventListener(eventType,callback);listeners.push({eventType,target,callback});return()=>{target.removeEventListener(eventType,callback)}},removeAllListeners(){for(const {target,eventType,callback}of listeners)target.removeEventListener(eventType,callback);listeners=[]},once(eventType){const bindings=[];return(new Promise((resolve,reject)=>{bindings.push(context.events.addListener(navigator.serviceWorker,
"message",event=>{try{const message=event.data;message.type===eventType&&resolve(message)}catch(error2){reject(error2)}}),context.events.addListener(navigator.serviceWorker,"messageerror",reject))})).finally(()=>{bindings.forEach(unbind=>unbind())})}},useFallbackMode:!("serviceWorker"in navigator)||"file:"===location.protocol};emitter=context.useFallbackMode?createFallbackStart(context):createStartHandler(context);const stopHandler=context.useFallbackMode?createFallbackStop(context):createStop(context);
return{start:prepareStartHandler(emitter,context),stop(){context.events.removeAllListeners();context.emitter.removeAllListeners();publicEmitter.removeAllListeners();stopHandler()},use(...handlers){use(context.requestHandlers,...handlers)},restoreHandlers(){restoreHandlers(context.requestHandlers)},resetHandlers(...nextHandlers){context.requestHandlers=resetHandlers(requestHandlers,...nextHandlers)},listHandlers(){const clone=[...context.requestHandlers];Object.freeze(clone);return clone},printHandlers(){this.listHandlers().forEach(handler=>
{const {header,callFrame}=handler.info,pragma=handler.info.hasOwnProperty("operationType")?"[graphql]":"[rest]";console.groupCollapsed(`${pragma} ${header}`);callFrame&&console.log(`Declaration: ${callFrame}`);console.log("Handler:",handler);handler instanceof RestHandler&&console.log("Match:",`https://mswjs.io/repl?path=${handler.info.path}`);console.groupEnd()})},events:{on(...args){return publicEmitter.on(...args)},removeListener(...args){return publicEmitter.removeListener(...args)},removeAllListeners(...args){return publicEmitter.removeAllListeners(...args)}}}}
function createRestHandler(method){return(path,resolver)=>new RestHandler(method,path,resolver)}function createScopedGraphQLHandler(operationType,url){return(operationName,resolver)=>new GraphQLHandler(operationType,operationName,url,resolver)}function createGraphQLOperationHandler(url){return resolver=>new GraphQLHandler("all",RegExp(".*"),url,resolver)}var __create=Object.create,__defProp=Object.defineProperty,__defProps=Object.defineProperties,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropDescs=
Object.getOwnPropertyDescriptors,__getOwnPropNames=Object.getOwnPropertyNames,__getOwnPropSymbols=Object.getOwnPropertySymbols,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(prop of __getOwnPropSymbols(b))__propIsEnum.call(b,
prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b)),__export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__toESM=(mod,
isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)),src_exports={};__export(src_exports,{GraphQLHandler:()=>GraphQLHandler,MockedRequest:()=>MockedRequest,RESTMethods:()=>RESTMethods,RequestHandler:()=>RequestHandler,RestHandler:()=>RestHandler,cleanUrl:()=>cleanUrl,compose:()=>compose,context:()=>context_exports,createResponseComposition:()=>createResponseComposition,defaultContext:()=>
defaultContext,defaultResponse:()=>defaultResponse,graphql:()=>graphql,graphqlContext:()=>graphqlContext,handleRequest:()=>handleRequest,matchRequestUrl:()=>matchRequestUrl,response:()=>response,rest:()=>rest,restContext:()=>restContext,setupWorker:()=>setupWorker});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(src_exports);var context_exports={};__export(context_exports,{body:()=>body,cookie:()=>cookie,data:()=>data,delay:()=>delay,errors:()=>errors,extensions:()=>
extensions,fetch:()=>fetch,json:()=>json,set:()=>set,status:()=>status,text:()=>text,xml:()=>xml});var import_codes=__toESM(require("module$node_modules$msw$node_modules$statuses$codes_json")),status=(statusCode,statusText)=>res=>{res.status=statusCode;res.statusText=statusText||import_codes.default[String(statusCode)];return res},import_headers_polyfill=require("module$node_modules$headers_polyfill$lib$index"),cookieUtils=__toESM(require("module$node_modules$cookie$index")),cookie=(name,value,options)=>
res=>{const serializedCookie=cookieUtils.serialize(name,value,options);res.headers.append("Set-Cookie",serializedCookie);"undefined"!==typeof document&&(document.cookie=serializedCookie);return res},body=value=>res=>{res.body=value;return res},json=body2=>res=>{res.headers.set("Content-Type","application/json");res.body=JSON.stringify(body2);return res},data=payload=>res=>{var prevBody=jsonParse(res.body)||{};prevBody=mergeRight(prevBody,{data:payload});return json(prevBody)(res)},extensions=payload=>
res=>{var prevBody=jsonParse(res.body)||{};prevBody=mergeRight(prevBody,{extensions:payload});return json(prevBody)(res)},import_is_node_process=require("module$node_modules$is_node_process$lib$index"),delay=durationOrMode=>res=>{let delayTime;if("string"===typeof durationOrMode)switch(durationOrMode){case "infinite":delayTime=2147483647;break;case "real":delayTime=(0,import_is_node_process.isNodeProcess)()?5:Math.floor(300*Math.random()+100);break;default:throw Error(`Failed to delay a response: unknown delay mode "${durationOrMode}". Please make sure you provide one of the supported modes ("real", "infinite") or a number to "ctx.delay".`);
}else if("undefined"===typeof durationOrMode)delayTime=(0,import_is_node_process.isNodeProcess)()?5:Math.floor(300*Math.random()+100);else{if(2147483647<durationOrMode)throw Error(`Failed to delay a response: provided delay duration (${durationOrMode}) exceeds the maximum allowed duration for "setTimeout" (${2147483647}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the "infinite" delay mode to delay the response indefinitely.`);
delayTime=durationOrMode}res.delay=delayTime;return res},errors=errorsList=>res=>{if(null==errorsList)return res;var prevBody=jsonParse(res.body)||{};prevBody=mergeRight(prevBody,{errors:errorsList});return json(prevBody)(res)},import_is_node_process2=require("module$node_modules$is_node_process$lib$index"),import_headers_polyfill2=require("module$node_modules$headers_polyfill$lib$index"),useFetch=(0,import_is_node_process2.isNodeProcess)()?require("module$node_modules$node_fetch$browser"):window.fetch,
augmentRequestInit=requestInit=>{const headers=new import_headers_polyfill2.Headers(requestInit.headers);headers.set("x-msw-bypass","true");return __spreadProps(__spreadValues({},requestInit),{headers:headers.all()})},fetch=(input,requestInit={})=>{if("string"===typeof input)return useFetch(input,augmentRequestInit(requestInit));{const {body:body2,method}=input;requestInit=__spreadProps(__spreadValues({},input),{body:void 0});["GET","HEAD"].includes(method)||(requestInit.body="object"===typeof body2||
"number"===typeof body2||"boolean"===typeof body2?JSON.stringify(body2):body2)}requestInit=augmentRequestInit(requestInit);return useFetch(input.url.href,requestInit)},text=body2=>res=>{res.headers.set("Content-Type","text/plain");res.body=body2;return res},xml=body2=>res=>{res.headers.set("Content-Type","text/xml");res.body=body2;return res},import_is_node_process3=require("module$node_modules$is_node_process$lib$index"),import_strict_event_emitter=require("module$node_modules$strict_event_emitter$lib$index"),
import_until4=require("module$node_modules$$open_draft$until$lib$index"),import_until=require("module$node_modules$$open_draft$until$lib$index"),getWorkerByRegistration=(registration,absoluteWorkerUrl,findWorker)=>[registration.active,registration.installing,registration.waiting].filter(Boolean).find(worker=>findWorker(worker.scriptURL,absoluteWorkerUrl))||null,import_outvariant=require("module$node_modules$outvariant$lib$index"),devUtils={formatMessage,warn:function(message,...positionals){console.warn(formatMessage(message,
...positionals))},error:function(message,...positionals){console.error(formatMessage(message,...positionals))}},getWorkerInstance=async(url,options={},findWorker)=>{const absoluteWorkerUrl=(new URL(url,location.origin)).href;var mockRegistrations=await navigator.serviceWorker.getRegistrations().then(registrations=>registrations.filter(registration=>getWorkerByRegistration(registration,absoluteWorkerUrl,findWorker)));!navigator.serviceWorker.controller&&0<mockRegistrations.length&&location.reload();
const [existingRegistration]=mockRegistrations;if(existingRegistration)return existingRegistration.update().then(()=>[getWorkerByRegistration(existingRegistration,absoluteWorkerUrl,findWorker),existingRegistration]);const [error2,instance]=await (0,import_until.until)(async()=>{const registration=await navigator.serviceWorker.register(url,options);return[getWorkerByRegistration(registration,absoluteWorkerUrl,findWorker),registration]});if(error2){if(error2.message.includes("(404)"))throw mockRegistrations=
new URL((null==options?void 0:options.scope)||"/",location.href),Error(devUtils.formatMessage(`Failed to register a Service Worker for scope ('${mockRegistrations.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.

Did you forget to run "npx msw init <PUBLIC_DIR>"?

Learn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`));throw Error(devUtils.formatMessage("Failed to register the Service Worker:\n\n%s",error2.message));}return instance},WorkerChannel=class{constructor(port){this.port=port}postMessage(event,...rest2){const [data2,transfer]=rest2;this.port.postMessage({type:event,data:data2},{transfer})}},NetworkError=class extends Error{constructor(message){super(message);this.name="NetworkError"}},import_interceptors2=require("module$node_modules$$mswjs$interceptors$lib$index"),
import_headers_polyfill5=require("module$node_modules$headers_polyfill$lib$index"),cookieUtils3=__toESM(require("module$node_modules$cookie$index")),import_cookies=require("module$node_modules$$mswjs$cookies$lib$index"),import_interceptors=require("module$node_modules$$mswjs$interceptors$lib$index"),import_bufferUtils=require("module$node_modules$$mswjs$interceptors$lib$utils$bufferUtils"),import_headers_polyfill4=require("module$node_modules$headers_polyfill$lib$index"),cookieUtils2=__toESM(require("module$node_modules$cookie$index")),
import_headers_polyfill3=require("module$node_modules$headers_polyfill$lib$index"),MockedRequest=class extends import_interceptors.IsomorphicRequest{constructor(url,init={}){super(url,init);init.id&&(this.id=init.id);this.cache=init.cache||"default";this.destination=init.destination||"";this.integrity=init.integrity||"";this.keepalive=init.keepalive||!1;this.mode=init.mode||"cors";this.priority=init.priority||"auto";this.redirect=init.redirect||"follow";this.referrer=init.referrer||"";this.referrerPolicy=
init.referrerPolicy||"no-referrer";this.cookies=init.cookies||this.getCookies()}get body(){var text2=(0,import_bufferUtils.decodeBuffer)(this._body);text2=parseBody(text2,this.headers);if(!isStringEqual(this.method,"GET")||""!==text2)return text2}passthrough(){return{status:101,statusText:"Continue",headers:new import_headers_polyfill4.Headers,body:null,passthrough:!0,once:!1}}getCookies(){var _a,requestCookiesString=this.headers.get("cookie");requestCookiesString=requestCookiesString?cookieUtils3.parse(requestCookiesString):
{};import_cookies.store.hydrate();const cookiesFromStore=Array.from(null==(_a=import_cookies.store.get(__spreadProps(__spreadValues({},this),{url:this.url.href})))?void 0:_a.entries()).reduce((cookies,[name,{value}])=>Object.assign(cookies,{[name.trim()]:value}),{});_a=getRequestCookies(this);_a=__spreadValues(__spreadValues({},_a),cookiesFromStore);for(const [name,value]of Object.entries(_a))this.headers.append("cookie",`${name}=${value}`);return __spreadValues(__spreadValues({},_a),requestCookiesString)}},
import_until2=require("module$node_modules$$open_draft$until$lib$index"),getResponse=async(request,handlers,resolutionContext)=>{handlers=handlers.filter(handler=>handler.test(request,resolutionContext));return 0===handlers.length?{handler:void 0,response:void 0}:(handlers=await handlers.reduce(async(executionResult,handler)=>{const previousResults=await executionResult;if(null==previousResults?0:previousResults.response)return executionResult;executionResult=await handler.run(request,resolutionContext);
if(null===executionResult||executionResult.handler.shouldSkip)return null;if(!executionResult.response)return{request:executionResult.request,handler:executionResult.handler,response:void 0,parsedResult:executionResult.parsedResult};executionResult.response.once&&handler.markAsSkipped(!0);return executionResult},Promise.resolve(null)))?{handler:handlers.handler,publicRequest:handlers.request,parsedRequest:handlers.parsedResult,response:handlers.response}:{handler:void 0,response:void 0}},import_js_levenshtein=
__toESM(require("module$node_modules$js_levenshtein$index")),import_graphql=require("module$node_modules$graphql$index"),getPublicUrlFromRequest=request=>request.referrer.startsWith(request.url.origin)?request.url.pathname:(new URL(request.url.pathname,`${request.url.protocol}//${request.url.host}`)).href,import_headers_polyfill6=require("module$node_modules$headers_polyfill$lib$index"),import_path_to_regexp=require("module$node_modules$path_to_regexp$dist$index"),import_getCleanUrl=require("module$node_modules$$mswjs$interceptors$lib$utils$getCleanUrl"),
REDUNDANT_CHARACTERS_EXP=/[\?|#].*$/g;require("module$node_modules$headers_polyfill$lib$index");var import_headers_polyfill7=require("module$node_modules$headers_polyfill$lib$index"),defaultResponse={status:200,statusText:"OK",body:null,delay:0,once:!1,passthrough:!1},defaultResponseTransformers=[],response=Object.assign(createResponseComposition(),{once:createResponseComposition({once:!0}),networkError(message){throw new NetworkError(message);}}),SOURCE_FRAME=/[\/\\]msw[\/\\]src[\/\\](.+)/,BUILD_FRAME=
/(node_modules)?[\/\\]lib[\/\\](umd|esm|iief|cjs)[\/\\]|^[^\/\\]*$/,defaultContext={status,set,delay,fetch},RequestHandler=class{constructor(options){this.shouldSkip=!1;this.ctx=options.ctx||defaultContext;this.resolver=options.resolver;const callFrame=getCallFrame(Error());this.info=__spreadProps(__spreadValues({},options.info),{callFrame})}parse(_request,_resolutionContext){return null}test(request,resolutionContext){return this.predicate(request,this.parse(request,resolutionContext),resolutionContext)}getPublicRequest(request,
_parsedResult){return request}markAsSkipped(shouldSkip=!0){this.shouldSkip=shouldSkip}async run(request,resolutionContext){if(this.shouldSkip)return null;const parsedResult=this.parse(request,resolutionContext);if(!this.predicate(request,parsedResult,resolutionContext))return null;request=this.getPublicRequest(request,parsedResult);resolutionContext=await this.wrapResolver(this.resolver)(request,response,this.ctx);return this.createExecutionResult(parsedResult,request,resolutionContext)}wrapResolver(resolver){return async(req,
res,ctx)=>{req=this.resolverGenerator||await resolver(req,res,ctx);res=req?"function"==typeof req[Symbol.iterator]:!1;if(res){const {value,done}=req[Symbol.iterator]().next();res=await value;if(!res&&done)return this.resolverGeneratorResult;this.resolverGenerator||(this.resolverGenerator=req);return this.resolverGeneratorResult=res}return req}}createExecutionResult(parsedResult,request,response2){return{handler:this,parsedResult:parsedResult||null,request,response:response2||null}}},RESTMethods=(RESTMethods2=>
{RESTMethods2.HEAD="HEAD";RESTMethods2.GET="GET";RESTMethods2.POST="POST";RESTMethods2.PUT="PUT";RESTMethods2.PATCH="PATCH";RESTMethods2.OPTIONS="OPTIONS";RESTMethods2.DELETE="DELETE";return RESTMethods2})(RESTMethods||{}),restContext=__spreadProps(__spreadValues({},defaultContext),{cookie,body,text,json,xml}),RestRequest=class extends MockedRequest{constructor(request,params){super(request.url,__spreadProps(__spreadValues({},request),{body:request._body}));this.params=params;this.id=request.id}},
RestHandler=class extends RequestHandler{constructor(method,path,resolver){super({info:{header:`${method} ${path}`,path,method},ctx:restContext,resolver});this.checkRedundantQueryParameters()}checkRedundantQueryParameters(){const {method,path}=this.info;if(!(path instanceof RegExp)&&cleanUrl(path)!==path){var queryParams=[];(new URL(`/${path}`,"http://localhost")).searchParams.forEach((_,paramName)=>{queryParams.push(paramName)});devUtils.warn(`Found a redundant usage of query parameters in the request handler URL for "${method} ${path}". Please match against a path instead and access query parameters in the response resolver function using "req.url.searchParams".`)}}parse(request,
resolutionContext){return matchRequestUrl(request.url,this.info.path,null==resolutionContext?void 0:resolutionContext.baseUrl)}getPublicRequest(request,parsedResult){return new RestRequest(request,parsedResult.params||{})}predicate(request,parsedResult){return(this.info.method instanceof RegExp?this.info.method.test(request.method):isStringEqual(this.info.method,request.method))&&parsedResult.matches}log(request,response2){const publicUrl=getPublicUrlFromRequest(request),loggedRequest=prepareRequest(request),
loggedResponse=prepareResponse(response2),statusColor=getStatusCodeColor(response2.status);console.groupCollapsed(devUtils.formatMessage("%s %s %s (%c%s%c)"),getTimestamp(),request.method,publicUrl,`color:${statusColor}`,`${response2.status} ${response2.statusText}`,"color:inherit");console.log("Request",loggedRequest);console.log("Handler:",this);console.log("Response",loggedResponse);console.groupEnd()}},import_outvariant2=require("module$node_modules$outvariant$lib$index"),graphqlContext=__spreadProps(__spreadValues({},
defaultContext),{data,extensions,errors,cookie,field:(fieldName,fieldValue)=>res=>{(0,import_outvariant2.invariant)(""!==fieldName.trim(),devUtils.formatMessage("Failed to set a custom field on a GraphQL response: field name cannot be empty."));(0,import_outvariant2.invariant)("data"!==fieldName,devUtils.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.data()" instead?',fieldName));(0,import_outvariant2.invariant)("errors"!==
fieldName,devUtils.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.errors()" instead?',fieldName));(0,import_outvariant2.invariant)("extensions"!==fieldName,devUtils.formatMessage('Failed to set a custom "%s" field on a mocked GraphQL response: forbidden field name. Did you mean to call "ctx.extensions()" instead?',fieldName));var prevBody=jsonParse(res.body)||{};prevBody=mergeRight(prevBody,{[fieldName]:fieldValue});return json(prevBody)(res)}}),
GraphQLRequest=class extends MockedRequest{constructor(request,variables){super(request.url,__spreadProps(__spreadValues({},request),{body:request._body}));this.variables=variables}},GraphQLHandler=class extends RequestHandler{constructor(operationType,operationName,endpoint,resolver){let resolvedOperationName=operationName;if(null==operationName?0:"object"===typeof operationName&&"kind"in operationName&&"definitions"in operationName){operationName=parseDocumentNode(operationName);if(operationName.operationType!==
operationType)throw Error(`Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected "${operationType}", but got "${operationName.operationType}").`);if(!operationName.operationName)throw Error("Failed to create a GraphQL handler: provided a DocumentNode with no operation name.");resolvedOperationName=operationName.operationName}super({info:{header:"all"===operationType?`${operationType} (origin: ${endpoint.toString()})`:`${operationType} ${resolvedOperationName} (origin: ${endpoint.toString()})`,
operationType,operationName:resolvedOperationName},ctx:graphqlContext,resolver});this.endpoint=endpoint}parse(request){return tryCatch(()=>parseGraphQLRequest(request),error2=>console.error(error2.message))}getPublicRequest(request,parsedResult){return new GraphQLRequest(request,(null==parsedResult?void 0:parsedResult.variables)||{})}predicate(request,parsedResult){if(!parsedResult)return!1;if(!parsedResult.operationName&&"all"!==this.info.operationType)return parsedResult=getPublicUrlFromRequest(request),
devUtils.warn(`Failed to intercept a GraphQL request at "${request.method} ${parsedResult}": anonymous GraphQL operations are not supported.

Consider naming this operation or using "graphql.operation" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/operation      `),!1;request=matchRequestUrl(request.url,this.endpoint);const hasMatchingOperationType="all"===this.info.operationType||parsedResult.operationType===this.info.operationType;parsedResult=this.info.operationName instanceof RegExp?this.info.operationName.test(parsedResult.operationName||""):parsedResult.operationName===
this.info.operationName;return request.matches&&hasMatchingOperationType&&parsedResult}log(request,response2,parsedRequest){request=prepareRequest(request);const loggedResponse=prepareResponse(response2),statusColor=getStatusCodeColor(response2.status);parsedRequest=(null==parsedRequest?0:parsedRequest.operationName)?`${null==parsedRequest?void 0:parsedRequest.operationType} ${null==parsedRequest?void 0:parsedRequest.operationName}`:`anonymous ${null==parsedRequest?void 0:parsedRequest.operationType}`;
console.groupCollapsed(devUtils.formatMessage("%s %s (%c%s%c)"),getTimestamp(),`${parsedRequest}`,`color:${statusColor}`,`${response2.status} ${response2.statusText}`,"color:inherit");console.log("Request:",request);console.log("Handler:",this);console.log("Response:",loggedResponse);console.groupEnd()}},MAX_MATCH_SCORE=3,MAX_SUGGESTION_COUNT=4,TYPE_MATCH_DELTA=.5,import_cookies2=require("module$node_modules$$mswjs$cookies$lib$index"),import_headers_polyfill9=require("module$node_modules$headers_polyfill$lib$index"),
createRequestListener=(context,options)=>async(event,message)=>{var _a;const messageChannel=new WorkerChannel(event.ports[0]);event=parseWorkerRequest(message.payload);try{await handleRequest(event,context.requestHandlers,options,context.emitter,{transformResponse,onPassthroughResponse(){messageChannel.postMessage("NOT_FOUND")},async onMockedResponse(response2,{handler,publicRequest,parsedRequest}){if(response2.body instanceof ReadableStream)throw Error(devUtils.formatMessage('Failed to construct a mocked response with a "ReadableStream" body: mocked streams are not supported. Follow https://github.com/mswjs/msw/issues/1336 for more details.'));
const responseBodyBuffer=await (new Response(response2.body,response2)).arrayBuffer(),responseBody=null==response2.body?null:responseBodyBuffer;messageChannel.postMessage("MOCK_RESPONSE",__spreadProps(__spreadValues({},response2),{body:responseBody}),[responseBodyBuffer]);if(!options.quiet)context.emitter.once("response:mocked",response3=>{handler.log(publicRequest,serializeResponse(response3),parsedRequest)})}})}catch(error2){error2 instanceof NetworkError?messageChannel.postMessage("NETWORK_ERROR",
{name:error2.name,message:error2.message}):error2 instanceof Error&&(devUtils.error('Uncaught exception in the request handler for "%s %s":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it\'s strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses',event.method,event.url,null!=(_a=error2.stack)?_a:error2),messageChannel.postMessage("MOCK_RESPONSE",
{status:500,statusText:"Request Handler Error",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:error2.name,message:error2.message,stack:error2.stack})}))}},import_until3=require("module$node_modules$$open_draft$until$lib$index"),createStartHandler=context=>function(options,customOptions){const workerRegistration=(async()=>{context.events.removeAllListeners();context.workerChannel.on("REQUEST",createRequestListener(context,options));context.workerChannel.on("RESPONSE",createResponseListener(context));
var instance=await getWorkerInstance(options.serviceWorker.url,options.serviceWorker.options,options.findWorker);const [worker,registration]=instance;if(!worker)throw instance=(null==customOptions?0:customOptions.findWorker)?devUtils.formatMessage('Failed to locate the Service Worker registration using a custom "findWorker" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at "%s".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n',
options.serviceWorker.url):devUtils.formatMessage('Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL "%s" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom "serviceWorker.url" option to point to the actual worker script location, or a custom "findWorker" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start',
options.serviceWorker.url,location.host),Error(instance);context.worker=worker;context.registration=registration;context.events.addListener(window,"beforeunload",()=>{"redundant"!==worker.state&&context.workerChannel.send("CLIENT_CLOSED");window.clearInterval(context.keepAliveInterval)});[instance]=await (0,import_until4.until)(()=>requestIntegrityCheck(context,worker));instance&&devUtils.error(`Detected outdated Service Worker: ${instance.message}

The mocking is still enabled, but it's highly recommended that you update your Service Worker by running:

$ npx msw init <PUBLIC_DIR>

This is necessary to ensure that the Service Worker is in sync with the library to guarantee its stability.
If this message still persists after updating, please report an issue: https://github.com/open-draft/msw/issues      `);context.keepAliveInterval=window.setInterval(()=>context.workerChannel.send("KEEPALIVE_REQUEST"),5E3);validateWorkerScope(registration,context.startOptions);return registration})().then(async registration=>{const pendingInstance=registration.installing||registration.waiting;pendingInstance&&await new Promise(resolve=>{pendingInstance.addEventListener("statechange",()=>{if("activated"===
pendingInstance.state)return resolve()})});await enableMocking(context,options).catch(error2=>{throw Error(`Failed to enable mocking: ${null==error2?void 0:error2.message}`);});return registration});options.waitUntilReady&&deferNetworkRequestsUntil(workerRegistration);return workerRegistration},createStop=context=>function(){var _a;context.isMockingEnabled?(context.workerChannel.send("MOCK_DEACTIVATE"),context.isMockingEnabled=!1,window.clearInterval(context.keepAliveInterval),printStopMessage({quiet:null==
(_a=context.startOptions)?void 0:_a.quiet})):devUtils.warn('Found a redundant "worker.stop()" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this "worker.stop()" call.')},DEFAULT_START_OPTIONS={serviceWorker:{url:"/mockServiceWorker.js",options:null},quiet:!1,waitUntilReady:!0,onUnhandledRequest:"warn",findWorker(scriptURL,mockServiceWorkerUrl){return scriptURL===mockServiceWorkerUrl}},import_interceptors4=require("module$node_modules$$mswjs$interceptors$lib$index"),
import_fetch3=require("module$node_modules$$mswjs$interceptors$lib$interceptors$fetch$index"),import_XMLHttpRequest=require("module$node_modules$$mswjs$interceptors$lib$interceptors$XMLHttpRequest$index"),import_interceptors3=require("module$node_modules$$mswjs$interceptors$lib$index"),noop=()=>{throw Error("Not implemented");},listeners=[],rest={all:createRestHandler(/.+/),head:createRestHandler("HEAD"),get:createRestHandler("GET"),post:createRestHandler("POST"),put:createRestHandler("PUT"),delete:createRestHandler("DELETE"),
patch:createRestHandler("PATCH"),options:createRestHandler("OPTIONS")},standardGraphQLHandlers={operation:createGraphQLOperationHandler("*"),query:createScopedGraphQLHandler("query","*"),mutation:createScopedGraphQLHandler("mutation","*")},graphql=__spreadProps(__spreadValues({},standardGraphQLHandlers),{link:function(url){return{operation:createGraphQLOperationHandler(url),query:createScopedGraphQLHandler("query",url),mutation:createScopedGraphQLHandler("mutation",url)}}})}
//# sourceMappingURL=module$node_modules$msw$lib$index.js.map
