shadow$provide.module$node_modules$graphql$utilities$TypeInfo=function(global,require,module,exports){function getFieldDef(schema,parentType,fieldNode){fieldNode=fieldNode.name.value;if(fieldNode===_introspection.SchemaMetaFieldDef.name&&schema.getQueryType()===parentType)return _introspection.SchemaMetaFieldDef;if(fieldNode===_introspection.TypeMetaFieldDef.name&&schema.getQueryType()===parentType)return _introspection.TypeMetaFieldDef;if(fieldNode===_introspection.TypeNameMetaFieldDef.name&&(0,_definition.isCompositeType)(parentType))return _introspection.TypeNameMetaFieldDef;
if((0,_definition.isObjectType)(parentType)||(0,_definition.isInterfaceType)(parentType))return parentType.getFields()[fieldNode]}Object.defineProperty(exports,"__esModule",{value:!0});exports.TypeInfo=void 0;exports.visitWithTypeInfo=function(typeInfo,visitor){return{enter(...args){const node=args[0];typeInfo.enter(node);const fn=(0,_visitor.getEnterLeaveForKind)(visitor,node.kind).enter;if(fn)return args=fn.apply(visitor,args),void 0!==args&&(typeInfo.leave(node),(0,_ast.isNode)(args)&&typeInfo.enter(args)),
args},leave(...args){const node=args[0],fn=(0,_visitor.getEnterLeaveForKind)(visitor,node.kind).leave;let result;fn&&(result=fn.apply(visitor,args));typeInfo.leave(node);return result}}};var _ast=require("module$node_modules$graphql$language$ast"),_kinds=require("module$node_modules$graphql$language$kinds"),_visitor=require("module$node_modules$graphql$language$visitor"),_definition=require("module$node_modules$graphql$type$definition"),_introspection=require("module$node_modules$graphql$type$introspection"),
_typeFromAST=require("module$node_modules$graphql$utilities$typeFromAST");class TypeInfo{constructor(schema,initialType,getFieldDefFn){this._schema=schema;this._typeStack=[];this._parentTypeStack=[];this._inputTypeStack=[];this._fieldDefStack=[];this._defaultValueStack=[];this._enumValue=this._argument=this._directive=null;this._getFieldDef=null!==getFieldDefFn&&void 0!==getFieldDefFn?getFieldDefFn:getFieldDef;initialType&&((0,_definition.isInputType)(initialType)&&this._inputTypeStack.push(initialType),
(0,_definition.isCompositeType)(initialType)&&this._parentTypeStack.push(initialType),(0,_definition.isOutputType)(initialType)&&this._typeStack.push(initialType))}get [Symbol.toStringTag](){return"TypeInfo"}getType(){if(0<this._typeStack.length)return this._typeStack[this._typeStack.length-1]}getParentType(){if(0<this._parentTypeStack.length)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(0<this._inputTypeStack.length)return this._inputTypeStack[this._inputTypeStack.length-
1]}getParentInputType(){if(1<this._inputTypeStack.length)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(0<this._fieldDefStack.length)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(0<this._defaultValueStack.length)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(node){var schema=this._schema;switch(node.kind){case _kinds.Kind.SELECTION_SET:schema=
(0,_definition.getNamedType)(this.getType());this._parentTypeStack.push((0,_definition.isCompositeType)(schema)?schema:void 0);break;case _kinds.Kind.FIELD:var parentType=this.getParentType();let fieldDef,fieldType;parentType&&(fieldDef=this._getFieldDef(schema,parentType,node))&&(fieldType=fieldDef.type);this._fieldDefStack.push(fieldDef);this._typeStack.push((0,_definition.isOutputType)(fieldType)?fieldType:void 0);break;case _kinds.Kind.DIRECTIVE:this._directive=schema.getDirective(node.name.value);
break;case _kinds.Kind.OPERATION_DEFINITION:schema=schema.getRootType(node.operation);this._typeStack.push((0,_definition.isObjectType)(schema)?schema:void 0);break;case _kinds.Kind.INLINE_FRAGMENT:case _kinds.Kind.FRAGMENT_DEFINITION:schema=(parentType=node.typeCondition)?(0,_typeFromAST.typeFromAST)(schema,parentType):(0,_definition.getNamedType)(this.getType());this._typeStack.push((0,_definition.isOutputType)(schema)?schema:void 0);break;case _kinds.Kind.VARIABLE_DEFINITION:schema=(0,_typeFromAST.typeFromAST)(schema,
node.type);this._inputTypeStack.push((0,_definition.isInputType)(schema)?schema:void 0);break;case _kinds.Kind.ARGUMENT:let argDef,argType;if(schema=null!==(parentType=this.getDirective())&&void 0!==parentType?parentType:this.getFieldDef())if(argDef=schema.args.find(arg=>arg.name===node.name.value))argType=argDef.type;this._argument=argDef;this._defaultValueStack.push(argDef?argDef.defaultValue:void 0);this._inputTypeStack.push((0,_definition.isInputType)(argType)?argType:void 0);break;case _kinds.Kind.LIST:schema=
(0,_definition.getNullableType)(this.getInputType());schema=(0,_definition.isListType)(schema)?schema.ofType:schema;this._defaultValueStack.push(void 0);this._inputTypeStack.push((0,_definition.isInputType)(schema)?schema:void 0);break;case _kinds.Kind.OBJECT_FIELD:schema=(0,_definition.getNamedType)(this.getInputType());let inputFieldType,inputField;(0,_definition.isInputObjectType)(schema)&&(inputField=schema.getFields()[node.name.value])&&(inputFieldType=inputField.type);this._defaultValueStack.push(inputField?
inputField.defaultValue:void 0);this._inputTypeStack.push((0,_definition.isInputType)(inputFieldType)?inputFieldType:void 0);break;case _kinds.Kind.ENUM:schema=(0,_definition.getNamedType)(this.getInputType());let enumValue;(0,_definition.isEnumType)(schema)&&(enumValue=schema.getValue(node.value));this._enumValue=enumValue}}leave(node){switch(node.kind){case _kinds.Kind.SELECTION_SET:this._parentTypeStack.pop();break;case _kinds.Kind.FIELD:this._fieldDefStack.pop();this._typeStack.pop();break;case _kinds.Kind.DIRECTIVE:this._directive=
null;break;case _kinds.Kind.OPERATION_DEFINITION:case _kinds.Kind.INLINE_FRAGMENT:case _kinds.Kind.FRAGMENT_DEFINITION:this._typeStack.pop();break;case _kinds.Kind.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case _kinds.Kind.ARGUMENT:this._argument=null;this._defaultValueStack.pop();this._inputTypeStack.pop();break;case _kinds.Kind.LIST:case _kinds.Kind.OBJECT_FIELD:this._defaultValueStack.pop();this._inputTypeStack.pop();break;case _kinds.Kind.ENUM:this._enumValue=null}}}exports.TypeInfo=
TypeInfo}
//# sourceMappingURL=module$node_modules$graphql$utilities$TypeInfo.js.map
