{
"version":3,
"file":"module$node_modules$$supabase$storage_js$dist$main$packages$StorageBucketApi.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@supabase/storage-js/dist/main/packages/StorageBucketApi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$storage_js$dist$main$packages$StorageBucketApi\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../lib/constants\");\nconst errors_1 = require(\"../lib/errors\");\nconst fetch_1 = require(\"../lib/fetch\");\nconst helpers_1 = require(\"../lib/helpers\");\nclass StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\nexports.default = StorageBucketApi;\n//# sourceMappingURL=StorageBucketApi.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","constants_1","errors_1","fetch_1","helpers_1","StorageBucketApi","constructor","url","headers","fetch","assign","DEFAULT_HEADERS","resolveFetch","listBuckets","data","get","error","isStorageError","getBucket","id","createBucket","options","public","post","name","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","put","emptyBucket","deleteBucket","remove","default"]
}
