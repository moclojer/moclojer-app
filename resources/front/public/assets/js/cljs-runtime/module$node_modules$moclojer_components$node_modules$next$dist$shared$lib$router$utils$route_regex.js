shadow$provide.module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$route_regex=function(global,require,module,exports){function getRouteRegex(normalizedRoute){const {parameterizedRoute,groups}=getParametrizedRoute(normalizedRoute);return{re:new RegExp(`^${parameterizedRoute}(?:/)?$`),groups}}function getParametrizedRoute(route){const groups={};let groupIndex=1;return{parameterizedRoute:(0,_removeTrailingSlash).removeTrailingSlash(route).slice(1).split("/").map(segment=>
{if(segment.startsWith("[")&&segment.endsWith("]")){const {key,optional,repeat}=parseParameter(segment.slice(1,-1));groups[key]={pos:groupIndex++,repeat,optional};return repeat?optional?"(?:/(.+?))?":"/(.+?)":"/([^/]+?)"}return`/${(0,_escapeRegexp).escapeStringRegexp(segment)}`}).join(""),groups}}function getNamedParametrizedRoute(route){route=(0,_removeTrailingSlash).removeTrailingSlash(route).slice(1).split("/");const getSafeRouteKey=buildGetSafeRouteKey(),routeKeys={};return{namedParameterizedRoute:route.map(segment=>
{if(segment.startsWith("[")&&segment.endsWith("]")){const {key,optional,repeat}=parseParameter(segment.slice(1,-1));segment=key.replace(/\W/g,"");let invalidKey=!1;if(0===segment.length||30<segment.length)invalidKey=!0;isNaN(parseInt(segment.slice(0,1)))||(invalidKey=!0);invalidKey&&(segment=getSafeRouteKey());routeKeys[segment]=key;return repeat?optional?`(?:/(?<${segment}>.+?))?`:`/(?<${segment}>.+?)`:`/(?<${segment}>[^/]+?)`}return`/${(0,_escapeRegexp).escapeStringRegexp(segment)}`}).join(""),
routeKeys}}function parseParameter(param){const optional=param.startsWith("[")&&param.endsWith("]");optional&&(param=param.slice(1,-1));const repeat=param.startsWith("...");repeat&&(param=param.slice(3));return{key:param,repeat,optional}}function buildGetSafeRouteKey(){let routeKeyCharCode=97,routeKeyCharLength=1;return()=>{let routeKey="";for(let i=0;i<routeKeyCharLength;i++)routeKey+=String.fromCharCode(routeKeyCharCode),routeKeyCharCode++,122<routeKeyCharCode&&(routeKeyCharLength++,routeKeyCharCode=
97);return routeKey}}Object.defineProperty(exports,"__esModule",{value:!0});exports.getRouteRegex=getRouteRegex;exports.getNamedRouteRegex=function(normalizedRoute){const result=getNamedParametrizedRoute(normalizedRoute);return _extends({},getRouteRegex(normalizedRoute),{namedRegex:`^${result.namedParameterizedRoute}(?:/)?$`,routeKeys:result.routeKeys})};exports.getMiddlewareRegex=function(normalizedRoute,options){const {parameterizedRoute,groups}=getParametrizedRoute(normalizedRoute);({catchAll:normalizedRoute=
!0}=null!=options?options:{});return"/"===parameterizedRoute?{groups:{},re:new RegExp(`^/${normalizedRoute?".*":""}$`)}:{groups,re:new RegExp(`^${parameterizedRoute}${normalizedRoute?"(?:(/.*)?)":""}$`)}};exports.getNamedMiddlewareRegex=function(normalizedRoute,options){const {parameterizedRoute}=getParametrizedRoute(normalizedRoute);({catchAll:options=!0}=options);if("/"===parameterizedRoute)return{namedRegex:`^/${options?".*":""}$`};({namedParameterizedRoute:normalizedRoute}=getNamedParametrizedRoute(normalizedRoute));
return{namedRegex:`^${normalizedRoute}${options?"(?:(/.*)?)":""}$`}};var _extends=require("module$node_modules$moclojer_components$node_modules$$swc$helpers$lib$_extends").default,_escapeRegexp=require("module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$escape_regexp"),_removeTrailingSlash=require("module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$remove_trailing_slash")}
//# sourceMappingURL=module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$route_regex.js.map
