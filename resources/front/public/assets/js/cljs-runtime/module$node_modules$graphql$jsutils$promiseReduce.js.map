{
"version":3,
"file":"module$node_modules$graphql$jsutils$promiseReduce.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAWAA,QAAsB,CAACC,MAAD,CAASC,UAAT,CAAqBC,YAArB,CAAmC,CAGvD,IAAK,MAAMJ,KAAX,GAAoBE,OAApB,CACEG,YAAA,CAAc,GAAIC,UAAWC,CAAAA,SAAf,EAA0BF,YAA1B,CAAA,CACVA,YAAYG,CAAAA,IAAZ,CAAkBC,QAAD,EAAcN,UAAA,CAAWM,QAAX,CAAqBT,KAArB,CAA/B,CADU,CAEVG,UAAA,CAAWE,YAAX,CAAwBL,KAAxB,CAGN,OAAOK,aATgD,CATzD,KAAIC,WAAaX,OAAA,CAAQ,+CAAR,CAR6F;",
"sources":["node_modules/graphql/jsutils/promiseReduce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$jsutils$promiseReduce\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseReduce = promiseReduce;\n\nvar _isPromise = require('./isPromise.js');\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = (0, _isPromise.isPromise)(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","promiseReduce","values","callbackFn","initialValue","accumulator","_isPromise","isPromise","then","resolved"]
}
