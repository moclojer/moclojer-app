{
"version":3,
"file":"module$node_modules$cookie$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/cookie/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$cookie$index\"] = function(global,require,module,exports) {\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parse","str","options","TypeError","obj","opt","pairs","split","dec","decode","i","length","pair","index","indexOf","key","substring","trim","undefined","val","slice","e","serialize","name","enc","encode","fieldContentRegExp","test","value","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent"]
}
