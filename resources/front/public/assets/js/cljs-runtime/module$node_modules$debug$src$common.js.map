{
"version":3,
"file":"module$node_modules$debug$src$common.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/debug/src/common.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$debug$src$common\"] = function(global,require,module,exports) {\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n};"],
"names":["shadow$provide","global","require","module","exports","setup","env","createDebug","namespace","debug","args","enabled","curr","Number","Date","diff","prevTime","prev","coerce","unshift","index","replace","match","format","formatter","formatters","call","val","splice","formatArgs","apply","log","enableOverride","namespacesCache","enabledCache","useColors","color","selectColor","extend","destroy","Object","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","toNamespace","regexp","toString","substring","length","default","Error","stack","message","disable","names","map","skips","join","enable","save","i","split","len","push","RegExp","slice","name","test","humanize","console","warn","keys","forEach","key","hash","charCodeAt","colors","Math","abs","load"]
}
