{"version":3,"sources":["dev/msw/browser.cljs"],"mappings":";;AAKA,2BAAA,3BAAeA;AAEf,AAA0BC,yBAAO,AAACC,8CAAMC,8CAAgBC;AAExD,qCAAA,rCAAOC;AAAP,AACE,OAAQJ,6BAAO,qBAAA,2CAAA,kFAAA,lJAACK;;AAElB,8BAAA,9BAAMC;AAAN,OACO,AAACF,PACD,iDAAA;AAAA,AAAQ,mEAAA,5DAACG,mCAAaR;;;AAE7B,6BAAA,7BAAMS;AAAN,AACE,AAAOR;;AACP,OAACS,sCAAgBV;;AAEnB,6BAAA,7BAAMW;AAAN,AACE,oBAAI,AAACC,6BAAYZ;AACf,OAACK;;AACD,OAACQ","names":["dev.msw.browser/mock-key","dev.msw.browser/worker","cljs.core.apply","js/module$node_modules$msw$lib$index.setupWorker","dev.msw.handlers/handlers","dev.msw.browser/start-worker!","cljs.core/clj->js","dev.msw.browser/start!","dev.session-storage/set-item!","dev.msw.browser/stop!","dev.session-storage/remove-item!","dev.msw.browser/init!","dev.session-storage/get-item","js/Promise.resolve"],"sourcesContent":["(ns dev.msw.browser\n  (:require [\"msw\" :as msw]\n            [dev.msw.handlers :as handlers]\n            [dev.session-storage :as ss]))\n\n(def ^:private mock-key \"mock-active?\")\n\n(def ^:private ^js/object worker (apply msw/setupWorker handlers/handlers))\n\n(defn- start-worker! []\n  (.start worker (clj->js {:onunhandledrequest \"bypass\"})))\n\n(defn start! []\n  (->  (start-worker!)\n       (.then #(ss/set-item! mock-key true))))\n\n(defn stop! []\n  (.stop worker)\n  (ss/remove-item! mock-key))\n\n(defn init! []\n  (if (ss/get-item mock-key)\n    (start-worker!)\n    (js/Promise.resolve)))\n"]}