{
"version":3,
"file":"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$resolve_rewrites.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/moclojer-components/node_modules/next/dist/shared/lib/router/utils/resolve-rewrites.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$moclojer_components$node_modules$next$dist$shared$lib$router$utils$resolve_rewrites\"] = function(global,require,module,exports) {\nvar process = require('process');\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = resolveRewrites;\nvar _pathMatch = require(\"./path-match\");\nvar _prepareDestination = require(\"./prepare-destination\");\nvar _removeTrailingSlash = require(\"./remove-trailing-slash\");\nvar _normalizeLocalePath = require(\"../../i18n/normalize-locale-path\");\nvar _removeBasePath = require(\"../../../../client/remove-base-path\");\nvar _parseRelativeUrl = require(\"./parse-relative-url\");\nfunction resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {\n    let matchedPage = false;\n    let externalDest = false;\n    let parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(asPath);\n    let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedAs.pathname), locales).pathname);\n    let resolvedHref;\n    const handleRewrite = (rewrite)=>{\n        const matcher = (0, _pathMatch).getPathMatch(rewrite.source + (process.env.__NEXT_TRAILING_SLASH ? '(/)?' : ''), {\n            removeUnnamedParams: true,\n            strict: true\n        });\n        let params = matcher(parsedAs.pathname);\n        if (rewrite.has && params) {\n            const hasParams = (0, _prepareDestination).matchHas({\n                headers: {\n                    host: document.location.hostname\n                },\n                cookies: document.cookie.split('; ').reduce((acc, item)=>{\n                    const [key, ...value] = item.split('=');\n                    acc[key] = value.join('=');\n                    return acc;\n                }, {})\n            }, rewrite.has, parsedAs.query);\n            if (hasParams) {\n                Object.assign(params, hasParams);\n            } else {\n                params = false;\n            }\n        }\n        if (params) {\n            if (!rewrite.destination) {\n                // this is a proxied rewrite which isn't handled on the client\n                externalDest = true;\n                return true;\n            }\n            const destRes = (0, _prepareDestination).prepareDestination({\n                appendParamsToQuery: true,\n                destination: rewrite.destination,\n                params: params,\n                query: query\n            });\n            parsedAs = destRes.parsedDestination;\n            asPath = destRes.newUrl;\n            Object.assign(query, destRes.parsedDestination.query);\n            fsPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(asPath), locales).pathname);\n            if (pages.includes(fsPathname)) {\n                // check if we now match a page as this means we are done\n                // resolving the rewrites\n                matchedPage = true;\n                resolvedHref = fsPathname;\n                return true;\n            }\n            // check if we match a dynamic-route, if so we break the rewrites chain\n            resolvedHref = resolveHref(fsPathname);\n            if (resolvedHref !== asPath && pages.includes(resolvedHref)) {\n                matchedPage = true;\n                return true;\n            }\n        }\n    };\n    let finished = false;\n    for(let i = 0; i < rewrites.beforeFiles.length; i++){\n        // we don't end after match in beforeFiles to allow\n        // continuing through all beforeFiles rewrites\n        handleRewrite(rewrites.beforeFiles[i]);\n    }\n    matchedPage = pages.includes(fsPathname);\n    if (!matchedPage) {\n        if (!finished) {\n            for(let i = 0; i < rewrites.afterFiles.length; i++){\n                if (handleRewrite(rewrites.afterFiles[i])) {\n                    finished = true;\n                    break;\n                }\n            }\n        }\n        // check dynamic route before processing fallback rewrites\n        if (!finished) {\n            resolvedHref = resolveHref(fsPathname);\n            matchedPage = pages.includes(resolvedHref);\n            finished = matchedPage;\n        }\n        if (!finished) {\n            for(let i = 0; i < rewrites.fallback.length; i++){\n                if (handleRewrite(rewrites.fallback[i])) {\n                    finished = true;\n                    break;\n                }\n            }\n        }\n    }\n    return {\n        asPath,\n        parsedAs,\n        matchedPage,\n        resolvedHref,\n        externalDest\n    };\n}\n\n//# sourceMappingURL=resolve-rewrites.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","process","Object","defineProperty","value","default","resolveRewrites","asPath","pages","rewrites","query","resolveHref","locales","matchedPage","externalDest","parsedAs","parseRelativeUrl","_parseRelativeUrl","fsPathname","removeTrailingSlash","_removeTrailingSlash","normalizeLocalePath","_normalizeLocalePath","removeBasePath","_removeBasePath","pathname","resolvedHref","handleRewrite","rewrite","params","getPathMatch","_pathMatch","matcher","source","env","__NEXT_TRAILING_SLASH","removeUnnamedParams","strict","has","hasParams","matchHas","_prepareDestination","headers","host","document","location","hostname","cookies","cookie","split","reduce","acc","item","key","join","assign","destination","destRes","prepareDestination","appendParamsToQuery","parsedDestination","newUrl","includes","finished","i","beforeFiles","length","afterFiles","fallback"]
}
