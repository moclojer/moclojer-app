shadow$provide.module$node_modules$set_cookie_parser$lib$set_cookie=function(global,require,module,exports){function isNonEmptyString(str){return"string"===typeof str&&!!str.trim()}function parseString(setCookieValue,options){setCookieValue=setCookieValue.split(";").filter(isNonEmptyString);var nameValuePairStr=setCookieValue.shift(),parsed=parseNameValuePair(nameValuePairStr);nameValuePairStr=parsed.name;parsed=parsed.value;options=options?Object.assign({},defaultParseOptions,options):defaultParseOptions;
try{parsed=options.decodeValues?decodeURIComponent(parsed):parsed}catch(e){console.error("set-cookie-parser encountered an error while decoding a cookie with value '"+parsed+"'. Set options.decodeValues to false to disable this feature.",e)}var cookie={name:nameValuePairStr,value:parsed};setCookieValue.forEach(function(part){var sides=part.split("\x3d");part=sides.shift().trimLeft().toLowerCase();sides=sides.join("\x3d");"expires"===part?cookie.expires=new Date(sides):"max-age"===part?cookie.maxAge=
parseInt(sides,10):"secure"===part?cookie.secure=!0:"httponly"===part?cookie.httpOnly=!0:"samesite"===part?cookie.sameSite=sides:cookie[part]=sides});return cookie}function parseNameValuePair(nameValuePairStr){var name="",nameValueArr=nameValuePairStr.split("\x3d");1<nameValueArr.length&&(name=nameValueArr.shift(),nameValuePairStr=nameValueArr.join("\x3d"));return{name,value:nameValuePairStr}}function parse(input,options){options=options?Object.assign({},defaultParseOptions,options):defaultParseOptions;
if(!input)return options.map?{}:[];if(input.headers&&input.headers["set-cookie"])input=input.headers["set-cookie"];else if(input.headers){var sch=input.headers[Object.keys(input.headers).find(function(key){return"set-cookie"===key.toLowerCase()})];sch||!input.headers.cookie||options.silent||console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
input=sch}Array.isArray(input)||(input=[input]);options=options?Object.assign({},defaultParseOptions,options):defaultParseOptions;return options.map?input.filter(isNonEmptyString).reduce(function(cookies,str){str=parseString(str,options);cookies[str.name]=str;return cookies},{}):input.filter(isNonEmptyString).map(function(str){return parseString(str,options)})}var defaultParseOptions={decodeValues:!0,map:!1,silent:!1};module.exports=parse;module.exports.parse=parse;module.exports.parseString=parseString;
module.exports.splitCookiesString=function(cookiesString){function skipWhitespace(){for(;pos<cookiesString.length&&/\s/.test(cookiesString.charAt(pos));)pos+=1;return pos<cookiesString.length}function notSpecialChar(){ch=cookiesString.charAt(pos);return"\x3d"!==ch&&";"!==ch&&","!==ch}if(Array.isArray(cookiesString))return cookiesString;if("string"!==typeof cookiesString)return[];for(var cookiesStrings=[],pos=0,start,ch,lastComma,nextStart,cookiesSeparatorFound;pos<cookiesString.length;){start=pos;
for(cookiesSeparatorFound=!1;skipWhitespace();)if(ch=cookiesString.charAt(pos),","===ch){lastComma=pos;pos+=1;skipWhitespace();for(nextStart=pos;pos<cookiesString.length&&notSpecialChar();)pos+=1;pos<cookiesString.length&&"\x3d"===cookiesString.charAt(pos)?(cookiesSeparatorFound=!0,pos=nextStart,cookiesStrings.push(cookiesString.substring(start,lastComma)),start=pos):pos=lastComma+1}else pos+=1;(!cookiesSeparatorFound||pos>=cookiesString.length)&&cookiesStrings.push(cookiesString.substring(start,
cookiesString.length))}return cookiesStrings}}
//# sourceMappingURL=module$node_modules$set_cookie_parser$lib$set_cookie.js.map
