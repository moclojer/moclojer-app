{
"version":3,
"file":"module$node_modules$dom_accessibility_api$dist$polyfills$array_from.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUhIC,QAASA,WAAU,CAACC,EAAD,CAAK,CACtB,MAAqB,UAArB,GAAO,MAAOA,GAAd,EAAsD,mBAAtD,GAAmCC,KAAMC,CAAAA,IAAN,CAAWF,EAAX,CADb,CAPxBF,OAAQK,CAAAA,UAAR,CAAqB,CAAA,CACrBL,QAAQM,CAAAA,OAAR,CAmCAC,QAAkB,CAACC,SAAD,CAAYC,KAAZ,CAAmB,CAGnC,IAAIC,EAAIC,KAAR,CAGIC,MAAQC,MAAA,CAAOL,SAAP,CAGZ,IAAiB,IAAjB,EAAIA,SAAJ,CACE,KAAM,KAAIM,SAAJ,CAAc,kEAAd,CAAN,CAMF,GAAqB,WAArB,GAAI,MAAOL,MAAX,EAGM,CAACR,UAAA,CAAWQ,KAAX,CAHP,CAII,KAAM,KAAIK,SAAJ,CAAc,mEAAd,CAAN;AA7CAC,SAAAA,CAASC,MAAA,CAmDMJ,KAAMK,CAAAA,MAnDZ,CACb,UAAA,CAAIC,KAAA,CAAMH,SAAN,CAAJ,CACS,CADT,CAGe,CAAf,GAAIA,SAAJ,EAAqBI,QAAA,CAASJ,SAAT,CAArB,EAGiB,CAAT,CAAAA,SAAA,CAAa,CAAb,CAAiB,CAAC,CAH1B,EAG+BK,IAAKC,CAAAA,KAAL,CAAWD,IAAKE,CAAAA,GAAL,CAASP,SAAT,CAAX,CAH/B,CACSA,SAOT,UAAA,CAAOK,IAAKG,CAAAA,GAAL,CAASH,IAAKI,CAAAA,GAAL,CAASC,SAAT,CAAc,CAAd,CAAT,CAA2BC,cAA3B,CA6CHC,EAAAA,CAAI1B,UAAA,CAAWS,CAAX,CAAA,CAAgBG,MAAA,CAAO,IAAIH,CAAJ,CAAMe,SAAN,CAAP,CAAhB,CAAyCd,KAAJ,CAAUc,SAAV,CAM7C,KAHA,IAAIG,EAAI,CAAR,CAEIC,MACJ,CAAOD,CAAP,CAAWH,SAAX,CAAA,CACEI,MAMA,CANSjB,KAAA,CAAMgB,CAAN,CAMT,CAJED,CAAA,CAAEC,CAAF,CAIF,CALInB,KAAJ,CACSA,KAAA,CAAMoB,MAAN,CAAcD,CAAd,CADT,CAGSC,MAET,CAAAD,CAAA,EAAK,CAGPD,EAAEV,CAAAA,MAAF,CAAWQ,SAEX,OAAOE,EAlD4B,CA9BrC,KAAIxB,MAAQU,MAAOiB,CAAAA,SAAUC,CAAAA,QAA7B,CAcIL,eAAiBN,IAAKY,CAAAA,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAjBN,CAAmC,CAvByF;",
"sources":["node_modules/dom-accessibility-api/dist/polyfills/array.from.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dom_accessibility_api$dist$polyfills$array_from\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = arrayFrom;\n/**\n * @source {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Polyfill}\n * but without thisArg (too hard to type, no need to `this`)\n */\nvar toStr = Object.prototype.toString;\nfunction isCallable(fn) {\n  return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n}\nfunction toInteger(value) {\n  var number = Number(value);\n  if (isNaN(number)) {\n    return 0;\n  }\n  if (number === 0 || !isFinite(number)) {\n    return number;\n  }\n  return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(value) {\n  var len = toInteger(value);\n  return Math.min(Math.max(len, 0), maxSafeInteger);\n}\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n */\n\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n * @param mapfn A mapping function to call on every element of the array.\n * @param thisArg Value of 'this' used to invoke the mapfn.\n */\nfunction arrayFrom(arrayLike, mapFn) {\n  // 1. Let C be the this value.\n  // edit(@eps1lon): we're not calling it as Array.from\n  var C = Array;\n\n  // 2. Let items be ToObject(arrayLike).\n  var items = Object(arrayLike);\n\n  // 3. ReturnIfAbrupt(items).\n  if (arrayLike == null) {\n    throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n  }\n\n  // 4. If mapfn is undefined, then let mapping be false.\n  // const mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\n  if (typeof mapFn !== \"undefined\") {\n    // 5. else\n    // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n    if (!isCallable(mapFn)) {\n      throw new TypeError(\"Array.from: when provided, the second argument must be a function\");\n    }\n  }\n\n  // 10. Let lenValue be Get(items, \"length\").\n  // 11. Let len be ToLength(lenValue).\n  var len = toLength(items.length);\n\n  // 13. If IsConstructor(C) is true, then\n  // 13. a. Let A be the result of calling the [[Construct]] internal method\n  // of C with an argument list containing the single item len.\n  // 14. a. Else, Let A be ArrayCreate(len).\n  var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n  // 16. Let k be 0.\n  var k = 0;\n  // 17. Repeat, while k < len\u2026 (also steps a - h)\n  var kValue;\n  while (k < len) {\n    kValue = items[k];\n    if (mapFn) {\n      A[k] = mapFn(kValue, k);\n    } else {\n      A[k] = kValue;\n    }\n    k += 1;\n  }\n  // 18. Let putStatus be Put(A, \"length\", len, true).\n  A.length = len;\n  // 20. Return A.\n  return A;\n}\n//# sourceMappingURL=array.from.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","isCallable","fn","toStr","call","__esModule","default","arrayFrom","arrayLike","mapFn","C","Array","items","Object","TypeError","number","Number","length","isNaN","isFinite","Math","floor","abs","min","max","len","maxSafeInteger","A","k","kValue","prototype","toString","pow"]
}
