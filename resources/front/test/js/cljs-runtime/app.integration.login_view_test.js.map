{"version":3,"sources":["app/integration/login_view_test.cljs"],"mappings":"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","names":["app.integration.login-view-test/cljs-test-each-fixtures","app.integration.aux/before-fn","app.integration.aux/after-fn","app.integration.login-view-test/login-error-msw","app.integration.login-view-test/login-sucess-msw","cljs.test/test-var","app.integration.login-view-test/auth-view-email-send-error-test","cljs.test.update_current_env_BANG_","cljs.core/conj","cljs.test/update-current-env!","cljs.core/rest","js/app","js/app.integration","js/app.integration.login-view-test","js/app.integration.login-view-test.t_app$integration$login_view_test35491","app.integration.login-view-test/t_app$integration$login_view_test35491","_35493","meta35492","cljs.core/PROTOCOL_SENTINEL","unused__11778__auto__","self__","G__35523","js/Error","args35504","cljs.core/aclone","___11437__auto__","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","app.integration.login-view-test/->t_app$integration$login_view_test35491","done","promesa.protocols/-bind","promesa.protocols/-promise","___29369__auto__","___29354__auto__","___29353__auto__","_","dev.msw.core.start_BANG_","render","app.aux.wait_for","app.auth.views/login-view","app.aux/render","container","button","app.aux/tag","cljs.core/first","input","app.aux/query","_change","app.aux/change","_click","app.aux/click","error-msg","app.aux/text","values__11355__auto__","cljs.core/List","result__11356__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__11406__auto__","e35530","cljs.core/=","app.aux.cleanup","app.integration.login-view-test/auth-view-email-send-success-test","js/app.integration.login-view-test.t_app$integration$login_view_test35532","app.integration.login-view-test/t_app$integration$login_view_test35532","_35534","meta35533","G__35536","args35535","app.integration.login-view-test/->t_app$integration$login_view_test35532","success-msg","e35543"],"sourcesContent":["(ns app.integration.login-view-test\n  (:require [app.auth.events]\n            [app.auth.subs]\n            [app.auth.views :as auth.views]\n            [app.aux :as aux]\n            [app.integration.aux :refer [after-fn before-fn]]\n            [cljs.test :refer [async deftest is testing use-fixtures]]\n            [dev.msw.core :as mock]\n            [promesa.core :as p]))\n\n(use-fixtures :each\n  {:before before-fn\n   :after after-fn})\n\n;; http mocks\n\n(def login-error-msw\n  {\"/login/send-email\"\n   {:post {:lag 300\n           :status 500\n           :content-type :json\n           :body #js {:message \"Not found\"}}}})\n\n(def login-sucess-msw\n  {\"/login/send-email\"\n   {:post {:lag 300\n           :status 201\n           :content-type :json\n           :body #js {:ok true}}}})\n\n(deftest auth-view-email-send-error-test\n  (testing \"auth email send view should error\"\n    (async done\n           (p/let [_ (mock/start! login-error-msw)\n                   render (aux/wait-for #(-> auth.views/login-view aux/render))\n                   container (aux/wait-for #(.-container render))\n                   button (-> container (aux/tag \"button\") first)\n                   input (-> container (aux/query \"#login-email\"))\n                   _change (aux/wait-for #(-> input (aux/change \"err@ee.cc\")))\n                   _click (aux/wait-for #(-> button aux/click))\n                   error-msg (aux/wait-for #(-> container (aux/query \"#login-error\") aux/text))]\n             (is (= \"Error... try it again.Not found\" error-msg))\n             (aux/cleanup)\n             (done)))))\n\n(deftest auth-view-email-send-success-test\n  (testing \"auth email send view should work and show next panel\"\n    (async done\n           (p/let [_ (mock/start! login-sucess-msw)\n                   render (aux/wait-for #(-> auth.views/login-view aux/render))\n                   container (aux/wait-for #(.-container render))\n                   button (-> container (aux/tag \"button\") first)\n                   input (-> container (aux/query \"#login-email\"))\n                   _change (aux/wait-for #(-> input (aux/change \"nice@email.cc\")))\n                   _click (aux/wait-for #(-> button aux/click))\n                   success-msg (aux/wait-for #(-> container (aux/query \"#login-email-sent\") aux/text))]\n             (is (= \"Check your email, and click on the link.Didn't received it? Try again.\" success-msg))\n             (aux/cleanup)\n             (done)))))\n"]}