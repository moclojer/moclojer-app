shadow$provide.module$node_modules$graphql$validation$rules$NoUnusedFragmentsRule=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.NoUnusedFragmentsRule=function(context){const operationDefs=[],fragmentDefs=[];return{OperationDefinition(node){operationDefs.push(node);return!1},FragmentDefinition(node){fragmentDefs.push(node);return!1},Document:{leave(){const fragmentNameUsed=Object.create(null);for(var operation of operationDefs)for(const fragment of context.getRecursivelyReferencedFragments(operation))fragmentNameUsed[fragment.name.value]=
!0;for(const fragmentDef of fragmentDefs)operation=fragmentDef.name.value,!0!==fragmentNameUsed[operation]&&context.reportError(new _GraphQLError.GraphQLError(`Fragment "${operation}" is never used.`,{nodes:fragmentDef}))}}}};var _GraphQLError=require("module$node_modules$graphql$error$GraphQLError")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$NoUnusedFragmentsRule.js.map
