{
"version":3,
"file":"module$node_modules$graphql$utilities$introspectionFromSchema.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,uBAAR,CAmBAA,QAAgC,CAACC,MAAD,CAASC,OAAT,CAAkB,CAQ1CC,OAAAA,CAAW,GAAIC,OAAQC,CAAAA,KAAZ,EACf,GAAIC,sBAAuBC,CAAAA,qBAA3B,EAR0BC,CAC1BC,eAAgB,CAAA,CADUD,CAE1BE,sBAAuB,CAAA,CAFGF,CAG1BG,kBAAmB,CAAA,CAHOH,CAI1BI,sBAAuB,CAAA,CAJGJ,CAK1B,GAAGN,OALuBM,CAQ1B,CADe,CAGXK,OAAAA,CAAS,GAAIC,QAASC,CAAAA,WAAb,EAA0B,CACvCd,MADuC,CAEvCE,SAAAA,OAFuC,CAA1B,CAId,EAACU,MAAOG,CAAAA,MAAT,EAAmBH,MAAOI,CAAAA,IAA1B,EAAmC,GAAIC,UAAWC,CAAAA,SAAf,EAA0B,CAAA,CAA1B,CACnC;MAAON,OAAOI,CAAAA,IAhBkC,CAjBlD,KAAIC,WAAaxB,OAAA,CAAQ,+CAAR,CAAjB,CAEIU,QAAUV,OAAA,CAAQ,6CAAR,CAFd,CAIIoB,SAAWpB,OAAA,CAAQ,+CAAR,CAJf,CAMIY,uBAAyBZ,OAAA,CAAQ,6DAAR,CAd6F;",
"sources":["node_modules/graphql/utilities/introspectionFromSchema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$introspectionFromSchema\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _execute = require('../execution/execute.js');\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = (0, _parser.parse)(\n    (0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults),\n  );\n  const result = (0, _execute.executeSync)({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || (0, _invariant.invariant)(false);\n  return result.data;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","introspectionFromSchema","schema","options","document","_parser","parse","_getIntrospectionQuery","getIntrospectionQuery","optionsWithDefaults","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputValueDeprecation","result","_execute","executeSync","errors","data","_invariant","invariant"]
}
