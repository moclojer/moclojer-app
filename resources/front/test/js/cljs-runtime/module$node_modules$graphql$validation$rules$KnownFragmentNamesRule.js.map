{
"version":3,
"file":"module$node_modules$graphql$validation$rules$KnownFragmentNamesRule.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,sBAAR,CAYAA,QAA+B,CAACC,OAAD,CAAU,CACvC,MAAO,CACLC,cAAc,CAACC,IAAD,CAAO,CACnB,MAAMC,aAAeD,IAAKE,CAAAA,IAAKN,CAAAA,KACdE,QAAQK,CAAAA,WAARC,CAAoBH,YAApBG,CAEjB,EACEN,OAAQO,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,qBAAoBN,YAApB,IADH,CAEE,CACEO,MAAOR,IAAKE,CAAAA,IADd,CAFF,CADF,CALiB,CADhB,CADgC,CAVzC,KAAII,cAAgBf,OAAA,CAAQ,gDAAR,CAR4G;",
"sources":["node_modules/graphql/validation/rules/KnownFragmentNamesRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$KnownFragmentNamesRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown fragment \"${fragmentName}\".`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","KnownFragmentNamesRule","context","FragmentSpread","node","fragmentName","name","getFragment","fragment","reportError","_GraphQLError","GraphQLError","nodes"]
}
