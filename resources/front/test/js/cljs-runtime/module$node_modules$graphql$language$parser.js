shadow$provide.module$node_modules$graphql$language$parser=function(global,require,module,exports){function getTokenDesc(token){const value=token.value;return getTokenKindDesc(token.kind)+(null!=value?` "${value}"`:"")}function getTokenKindDesc(kind){return(0,_lexer.isPunctuatorTokenKind)(kind)?`"${kind}"`:kind}Object.defineProperty(exports,"__esModule",{value:!0});exports.Parser=void 0;exports.parse=function(source,options){return(new Parser(source,options)).parseDocument()};exports.parseConstValue=
function(source,options){source=new Parser(source,options);source.expectToken(_tokenKind.TokenKind.SOF);options=source.parseConstValueLiteral();source.expectToken(_tokenKind.TokenKind.EOF);return options};exports.parseType=function(source,options){source=new Parser(source,options);source.expectToken(_tokenKind.TokenKind.SOF);options=source.parseTypeReference();source.expectToken(_tokenKind.TokenKind.EOF);return options};exports.parseValue=function(source,options){source=new Parser(source,options);
source.expectToken(_tokenKind.TokenKind.SOF);options=source.parseValueLiteral(!1);source.expectToken(_tokenKind.TokenKind.EOF);return options};var _syntaxError=require("module$node_modules$graphql$error$syntaxError"),_ast=require("module$node_modules$graphql$language$ast"),_directiveLocation=require("module$node_modules$graphql$language$directiveLocation"),_kinds=require("module$node_modules$graphql$language$kinds"),_lexer=require("module$node_modules$graphql$language$lexer"),_source=require("module$node_modules$graphql$language$source"),
_tokenKind=require("module$node_modules$graphql$language$tokenKind");class Parser{constructor(source,options={}){source=(0,_source.isSource)(source)?source:new _source.Source(source);this._lexer=new _lexer.Lexer(source);this._options=options;this._tokenCounter=0}parseName(){const token=this.expectToken(_tokenKind.TokenKind.NAME);return this.node(token,{kind:_kinds.Kind.NAME,value:token.value})}parseDocument(){return this.node(this._lexer.token,{kind:_kinds.Kind.DOCUMENT,definitions:this.many(_tokenKind.TokenKind.SOF,
this.parseDefinition,_tokenKind.TokenKind.EOF)})}parseDefinition(){if(this.peek(_tokenKind.TokenKind.BRACE_L))return this.parseOperationDefinition();const hasDescription=this.peekDescription(),keywordToken=hasDescription?this._lexer.lookahead():this._lexer.token;if(keywordToken.kind===_tokenKind.TokenKind.NAME){switch(keywordToken.value){case "schema":return this.parseSchemaDefinition();case "scalar":return this.parseScalarTypeDefinition();case "type":return this.parseObjectTypeDefinition();case "interface":return this.parseInterfaceTypeDefinition();
case "union":return this.parseUnionTypeDefinition();case "enum":return this.parseEnumTypeDefinition();case "input":return this.parseInputObjectTypeDefinition();case "directive":return this.parseDirectiveDefinition()}if(hasDescription)throw(0,_syntaxError.syntaxError)(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(keywordToken.value){case "query":case "mutation":case "subscription":return this.parseOperationDefinition();
case "fragment":return this.parseFragmentDefinition();case "extend":return this.parseTypeSystemExtension()}}throw this.unexpected(keywordToken);}parseOperationDefinition(){const start=this._lexer.token;if(this.peek(_tokenKind.TokenKind.BRACE_L))return this.node(start,{kind:_kinds.Kind.OPERATION_DEFINITION,operation:_ast.OperationTypeNode.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const operation=this.parseOperationType();let name;this.peek(_tokenKind.TokenKind.NAME)&&
(name=this.parseName());return this.node(start,{kind:_kinds.Kind.OPERATION_DEFINITION,operation,name,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const operationToken=this.expectToken(_tokenKind.TokenKind.NAME);switch(operationToken.value){case "query":return _ast.OperationTypeNode.QUERY;case "mutation":return _ast.OperationTypeNode.MUTATION;case "subscription":return _ast.OperationTypeNode.SUBSCRIPTION}throw this.unexpected(operationToken);
}parseVariableDefinitions(){return this.optionalMany(_tokenKind.TokenKind.PAREN_L,this.parseVariableDefinition,_tokenKind.TokenKind.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:_kinds.Kind.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(_tokenKind.TokenKind.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const start=
this._lexer.token;this.expectToken(_tokenKind.TokenKind.DOLLAR);return this.node(start,{kind:_kinds.Kind.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:_kinds.Kind.SELECTION_SET,selections:this.many(_tokenKind.TokenKind.BRACE_L,this.parseSelection,_tokenKind.TokenKind.BRACE_R)})}parseSelection(){return this.peek(_tokenKind.TokenKind.SPREAD)?this.parseFragment():this.parseField()}parseField(){const start=this._lexer.token;var nameOrAlias=this.parseName();
let alias;this.expectOptionalToken(_tokenKind.TokenKind.COLON)&&(alias=nameOrAlias,nameOrAlias=this.parseName());return this.node(start,{kind:_kinds.Kind.FIELD,alias,name:nameOrAlias,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(_tokenKind.TokenKind.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(isConst){return this.optionalMany(_tokenKind.TokenKind.PAREN_L,isConst?this.parseConstArgument:this.parseArgument,_tokenKind.TokenKind.PAREN_R)}parseArgument(isConst=
!1){const start=this._lexer.token,name=this.parseName();this.expectToken(_tokenKind.TokenKind.COLON);return this.node(start,{kind:_kinds.Kind.ARGUMENT,name,value:this.parseValueLiteral(isConst)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const start=this._lexer.token;this.expectToken(_tokenKind.TokenKind.SPREAD);const hasTypeCondition=this.expectOptionalKeyword("on");return!hasTypeCondition&&this.peek(_tokenKind.TokenKind.NAME)?this.node(start,{kind:_kinds.Kind.FRAGMENT_SPREAD,
name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(start,{kind:_kinds.Kind.INLINE_FRAGMENT,typeCondition:hasTypeCondition?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const start=this._lexer.token;this.expectKeyword("fragment");return!0===this._options.allowLegacyFragmentVariables?this.node(start,{kind:_kinds.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),
typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(start,{kind:_kinds.Kind.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(isConst){const token=
this._lexer.token;switch(token.kind){case _tokenKind.TokenKind.BRACKET_L:return this.parseList(isConst);case _tokenKind.TokenKind.BRACE_L:return this.parseObject(isConst);case _tokenKind.TokenKind.INT:return this.advanceLexer(),this.node(token,{kind:_kinds.Kind.INT,value:token.value});case _tokenKind.TokenKind.FLOAT:return this.advanceLexer(),this.node(token,{kind:_kinds.Kind.FLOAT,value:token.value});case _tokenKind.TokenKind.STRING:case _tokenKind.TokenKind.BLOCK_STRING:return this.parseStringLiteral();
case _tokenKind.TokenKind.NAME:switch(this.advanceLexer(),token.value){case "true":return this.node(token,{kind:_kinds.Kind.BOOLEAN,value:!0});case "false":return this.node(token,{kind:_kinds.Kind.BOOLEAN,value:!1});case "null":return this.node(token,{kind:_kinds.Kind.NULL});default:return this.node(token,{kind:_kinds.Kind.ENUM,value:token.value})}case _tokenKind.TokenKind.DOLLAR:if(isConst){this.expectToken(_tokenKind.TokenKind.DOLLAR);if(this._lexer.token.kind===_tokenKind.TokenKind.NAME)throw(0,_syntaxError.syntaxError)(this._lexer.source,
token.start,`Unexpected variable "$${this._lexer.token.value}" in constant value.`);throw this.unexpected(token);}return this.parseVariable();default:throw this.unexpected();}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const token=this._lexer.token;this.advanceLexer();return this.node(token,{kind:_kinds.Kind.STRING,value:token.value,block:token.kind===_tokenKind.TokenKind.BLOCK_STRING})}parseList(isConst){return this.node(this._lexer.token,{kind:_kinds.Kind.LIST,
values:this.any(_tokenKind.TokenKind.BRACKET_L,()=>this.parseValueLiteral(isConst),_tokenKind.TokenKind.BRACKET_R)})}parseObject(isConst){return this.node(this._lexer.token,{kind:_kinds.Kind.OBJECT,fields:this.any(_tokenKind.TokenKind.BRACE_L,()=>this.parseObjectField(isConst),_tokenKind.TokenKind.BRACE_R)})}parseObjectField(isConst){const start=this._lexer.token,name=this.parseName();this.expectToken(_tokenKind.TokenKind.COLON);return this.node(start,{kind:_kinds.Kind.OBJECT_FIELD,name,value:this.parseValueLiteral(isConst)})}parseDirectives(isConst){const directives=
[];for(;this.peek(_tokenKind.TokenKind.AT);)directives.push(this.parseDirective(isConst));return directives}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(isConst){const start=this._lexer.token;this.expectToken(_tokenKind.TokenKind.AT);return this.node(start,{kind:_kinds.Kind.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(isConst)})}parseTypeReference(){const start=this._lexer.token;if(this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)){var type=this.parseTypeReference();
this.expectToken(_tokenKind.TokenKind.BRACKET_R);type=this.node(start,{kind:_kinds.Kind.LIST_TYPE,type})}else type=this.parseNamedType();return this.expectOptionalToken(_tokenKind.TokenKind.BANG)?this.node(start,{kind:_kinds.Kind.NON_NULL_TYPE,type}):type}parseNamedType(){return this.node(this._lexer.token,{kind:_kinds.Kind.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(_tokenKind.TokenKind.STRING)||this.peek(_tokenKind.TokenKind.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const start=
this._lexer.token,description=this.parseDescription();this.expectKeyword("schema");const directives=this.parseConstDirectives(),operationTypes=this.many(_tokenKind.TokenKind.BRACE_L,this.parseOperationTypeDefinition,_tokenKind.TokenKind.BRACE_R);return this.node(start,{kind:_kinds.Kind.SCHEMA_DEFINITION,description,directives,operationTypes})}parseOperationTypeDefinition(){const start=this._lexer.token,operation=this.parseOperationType();this.expectToken(_tokenKind.TokenKind.COLON);const type=this.parseNamedType();
return this.node(start,{kind:_kinds.Kind.OPERATION_TYPE_DEFINITION,operation,type})}parseScalarTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();this.expectKeyword("scalar");const name=this.parseName(),directives=this.parseConstDirectives();return this.node(start,{kind:_kinds.Kind.SCALAR_TYPE_DEFINITION,description,name,directives})}parseObjectTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();this.expectKeyword("type");const name=this.parseName(),
interfaces=this.parseImplementsInterfaces(),directives=this.parseConstDirectives(),fields=this.parseFieldsDefinition();return this.node(start,{kind:_kinds.Kind.OBJECT_TYPE_DEFINITION,description,name,interfaces,directives,fields})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(_tokenKind.TokenKind.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(_tokenKind.TokenKind.BRACE_L,this.parseFieldDefinition,_tokenKind.TokenKind.BRACE_R)}parseFieldDefinition(){const start=
this._lexer.token,description=this.parseDescription(),name=this.parseName(),args=this.parseArgumentDefs();this.expectToken(_tokenKind.TokenKind.COLON);const type=this.parseTypeReference(),directives=this.parseConstDirectives();return this.node(start,{kind:_kinds.Kind.FIELD_DEFINITION,description,name,arguments:args,type,directives})}parseArgumentDefs(){return this.optionalMany(_tokenKind.TokenKind.PAREN_L,this.parseInputValueDef,_tokenKind.TokenKind.PAREN_R)}parseInputValueDef(){const start=this._lexer.token,
description=this.parseDescription(),name=this.parseName();this.expectToken(_tokenKind.TokenKind.COLON);const type=this.parseTypeReference();let defaultValue;this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)&&(defaultValue=this.parseConstValueLiteral());const directives=this.parseConstDirectives();return this.node(start,{kind:_kinds.Kind.INPUT_VALUE_DEFINITION,description,name,type,defaultValue,directives})}parseInterfaceTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();
this.expectKeyword("interface");const name=this.parseName(),interfaces=this.parseImplementsInterfaces(),directives=this.parseConstDirectives(),fields=this.parseFieldsDefinition();return this.node(start,{kind:_kinds.Kind.INTERFACE_TYPE_DEFINITION,description,name,interfaces,directives,fields})}parseUnionTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();this.expectKeyword("union");const name=this.parseName(),directives=this.parseConstDirectives(),types=this.parseUnionMemberTypes();
return this.node(start,{kind:_kinds.Kind.UNION_TYPE_DEFINITION,description,name,directives,types})}parseUnionMemberTypes(){return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)?this.delimitedMany(_tokenKind.TokenKind.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();this.expectKeyword("enum");const name=this.parseName(),directives=this.parseConstDirectives(),values=this.parseEnumValuesDefinition();return this.node(start,
{kind:_kinds.Kind.ENUM_TYPE_DEFINITION,description,name,directives,values})}parseEnumValuesDefinition(){return this.optionalMany(_tokenKind.TokenKind.BRACE_L,this.parseEnumValueDefinition,_tokenKind.TokenKind.BRACE_R)}parseEnumValueDefinition(){const start=this._lexer.token,description=this.parseDescription(),name=this.parseEnumValueName(),directives=this.parseConstDirectives();return this.node(start,{kind:_kinds.Kind.ENUM_VALUE_DEFINITION,description,name,directives})}parseEnumValueName(){if("true"===
this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw(0,_syntaxError.syntaxError)(this._lexer.source,this._lexer.token.start,`${getTokenDesc(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const start=this._lexer.token,description=this.parseDescription();this.expectKeyword("input");const name=this.parseName(),directives=this.parseConstDirectives(),fields=this.parseInputFieldsDefinition();
return this.node(start,{kind:_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,description,name,directives,fields})}parseInputFieldsDefinition(){return this.optionalMany(_tokenKind.TokenKind.BRACE_L,this.parseInputValueDef,_tokenKind.TokenKind.BRACE_R)}parseTypeSystemExtension(){const keywordToken=this._lexer.lookahead();if(keywordToken.kind===_tokenKind.TokenKind.NAME)switch(keywordToken.value){case "schema":return this.parseSchemaExtension();case "scalar":return this.parseScalarTypeExtension();case "type":return this.parseObjectTypeExtension();
case "interface":return this.parseInterfaceTypeExtension();case "union":return this.parseUnionTypeExtension();case "enum":return this.parseEnumTypeExtension();case "input":return this.parseInputObjectTypeExtension()}throw this.unexpected(keywordToken);}parseSchemaExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("schema");const directives=this.parseConstDirectives(),operationTypes=this.optionalMany(_tokenKind.TokenKind.BRACE_L,this.parseOperationTypeDefinition,
_tokenKind.TokenKind.BRACE_R);if(0===directives.length&&0===operationTypes.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.SCHEMA_EXTENSION,directives,operationTypes})}parseScalarTypeExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("scalar");const name=this.parseName(),directives=this.parseConstDirectives();if(0===directives.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.SCALAR_TYPE_EXTENSION,name,directives})}parseObjectTypeExtension(){const start=
this._lexer.token;this.expectKeyword("extend");this.expectKeyword("type");const name=this.parseName(),interfaces=this.parseImplementsInterfaces(),directives=this.parseConstDirectives(),fields=this.parseFieldsDefinition();if(0===interfaces.length&&0===directives.length&&0===fields.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.OBJECT_TYPE_EXTENSION,name,interfaces,directives,fields})}parseInterfaceTypeExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("interface");
const name=this.parseName(),interfaces=this.parseImplementsInterfaces(),directives=this.parseConstDirectives(),fields=this.parseFieldsDefinition();if(0===interfaces.length&&0===directives.length&&0===fields.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.INTERFACE_TYPE_EXTENSION,name,interfaces,directives,fields})}parseUnionTypeExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("union");const name=this.parseName(),directives=this.parseConstDirectives(),
types=this.parseUnionMemberTypes();if(0===directives.length&&0===types.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.UNION_TYPE_EXTENSION,name,directives,types})}parseEnumTypeExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("enum");const name=this.parseName(),directives=this.parseConstDirectives(),values=this.parseEnumValuesDefinition();if(0===directives.length&&0===values.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.ENUM_TYPE_EXTENSION,
name,directives,values})}parseInputObjectTypeExtension(){const start=this._lexer.token;this.expectKeyword("extend");this.expectKeyword("input");const name=this.parseName(),directives=this.parseConstDirectives(),fields=this.parseInputFieldsDefinition();if(0===directives.length&&0===fields.length)throw this.unexpected();return this.node(start,{kind:_kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,name,directives,fields})}parseDirectiveDefinition(){const start=this._lexer.token,description=this.parseDescription();
this.expectKeyword("directive");this.expectToken(_tokenKind.TokenKind.AT);const name=this.parseName(),args=this.parseArgumentDefs(),repeatable=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const locations=this.parseDirectiveLocations();return this.node(start,{kind:_kinds.Kind.DIRECTIVE_DEFINITION,description,name,arguments:args,repeatable,locations})}parseDirectiveLocations(){return this.delimitedMany(_tokenKind.TokenKind.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const start=
this._lexer.token,name=this.parseName();if(Object.prototype.hasOwnProperty.call(_directiveLocation.DirectiveLocation,name.value))return name;throw this.unexpected(start);}node(startToken,node){!0!==this._options.noLocation&&(node.loc=new _ast.Location(startToken,this._lexer.lastToken,this._lexer.source));return node}peek(kind){return this._lexer.token.kind===kind}expectToken(kind){const token=this._lexer.token;if(token.kind===kind)return this.advanceLexer(),token;throw(0,_syntaxError.syntaxError)(this._lexer.source,
token.start,`Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`);}expectOptionalToken(kind){return this._lexer.token.kind===kind?(this.advanceLexer(),!0):!1}expectKeyword(value){const token=this._lexer.token;if(token.kind===_tokenKind.TokenKind.NAME&&token.value===value)this.advanceLexer();else throw(0,_syntaxError.syntaxError)(this._lexer.source,token.start,`Expected "${value}", found ${getTokenDesc(token)}.`);}expectOptionalKeyword(value){const token=this._lexer.token;return token.kind===
_tokenKind.TokenKind.NAME&&token.value===value?(this.advanceLexer(),!0):!1}unexpected(atToken){atToken=null!==atToken&&void 0!==atToken?atToken:this._lexer.token;return(0,_syntaxError.syntaxError)(this._lexer.source,atToken.start,`Unexpected ${getTokenDesc(atToken)}.`)}any(openKind,parseFn,closeKind){this.expectToken(openKind);for(openKind=[];!this.expectOptionalToken(closeKind);)openKind.push(parseFn.call(this));return openKind}optionalMany(openKind,parseFn,closeKind){if(this.expectOptionalToken(openKind)){openKind=
[];do openKind.push(parseFn.call(this));while(!this.expectOptionalToken(closeKind));return openKind}return[]}many(openKind,parseFn,closeKind){this.expectToken(openKind);openKind=[];do openKind.push(parseFn.call(this));while(!this.expectOptionalToken(closeKind));return openKind}delimitedMany(delimiterKind,parseFn){this.expectOptionalToken(delimiterKind);const nodes=[];do nodes.push(parseFn.call(this));while(this.expectOptionalToken(delimiterKind));return nodes}advanceLexer(){const {maxTokens}=this._options,
token=this._lexer.advance();if(void 0!==maxTokens&&token.kind!==_tokenKind.TokenKind.EOF&&(++this._tokenCounter,this._tokenCounter>maxTokens))throw(0,_syntaxError.syntaxError)(this._lexer.source,token.start,`Document contains more that ${maxTokens} tokens. Parsing aborted.`);}}exports.Parser=Parser}
//# sourceMappingURL=module$node_modules$graphql$language$parser.js.map
