{
"version":3,
"file":"module$node_modules$graphql$utilities$getIntrospectionQuery.js",
"lineCount":98,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAMAA,QAA8B,CAACC,OAAD,CAAU,CAChCC,OAAAA,CAAqB,CACzBC,aAAc,CAAA,CADW,CAEzBC,eAAgB,CAAA,CAFS,CAGzBC,sBAAuB,CAAA,CAHE,CAIzBC,kBAAmB,CAAA,CAJM,CAKzBC,sBAAuB,CAAA,CALE,CAMzB,GAAGN,OANsB,CAQ3B,OAAME,aAAeD,OAAmBC,CAAAA,YAAnB,CAAkC,aAAlC,CAAkD,EAevE,OAAQ;;;UARkBD,OAAmBI,CAAAA,iBAAnBA,CACtBH,YADsBG,CAEtB,EAMI;;;;;;;;;YAYEH,YAZF;YAXsBD,OAAmBG,CAAAA,qBAAnBA,CAC1B,cAD0BA,CAE1B,EASI;;gBAHCH,OAAmBK,CAAAA,qBAAnB,CAkBsBC,2BAlBtB,CAAiD,EAGlD;;;;;;;;;;QAyBFL,YAzBE;QAdeD,OAAmBE,CAAAA,cAAnBA,CACnB,gBADmBA,CAEnB,EAYI;;;UA6BAD,YA7BA;cAHCD,OAAmBK,CAAAA,qBAAnB,CAiCoBC,2BAjCpB,CAAiD,EAGlD;;;;;;;;;mBAHCN,OAAmBK,CAAAA,qBAAnB,CA0CyBC,2BA1CzB,CAAiD,EAGlD;;;;;;;;UA+CAL,YA/CA;;;;;;;;;;;QA0DFA,YA1DE;;;QAHCD,OAAmBK,CAAAA,qBAAnB,CAgEcC,cAhEd,CAAiD,EAGlD;QAHCN,OAAmBK,CAAAA,qBAAnB,CAiEcC,mBAjEd,CAAiD,EAGlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAxB8B,CAZgF;",
"sources":["node_modules/graphql/utilities/getIntrospectionQuery.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$getIntrospectionQuery\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n\n/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nfunction getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getIntrospectionQuery","options","optionsWithDefault","descriptions","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputValueDeprecation","str"]
}
