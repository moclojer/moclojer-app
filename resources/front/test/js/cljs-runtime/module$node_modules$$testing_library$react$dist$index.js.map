{
"version":3,
"file":"module$node_modules$$testing_library$react$dist$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC9GC,MAAAA,CAAUH,OAAA,CAAQ,qCAAR,CACd,aAEAI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGA,KAAIC,WAAaP,OAAA,CAAQ,4DAAR,CAAjB,CACIQ,MAAQR,OAAA,CAAQ,sDAAR,CACZI,OAAOK,CAAAA,IAAP,CAAYD,KAAZ,CAAmBE,CAAAA,OAAnB,CAA2B,QAAS,CAACC,GAAD,CAAM,CAC5B,SAAZ,GAAIA,GAAJ,EAAiC,YAAjC,GAAyBA,GAAzB,GACIA,GADJ,GACWT,QADX,EACsBA,OAAA,CAAQS,GAAR,CADtB,GACuCH,KAAA,CAAMG,GAAN,CADvC;AAEAP,MAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+BS,GAA/B,CAAoC,CAClCC,WAAY,CAAA,CADsB,CAElCC,IAAKA,QAAS,EAAG,CACf,MAAOL,MAAA,CAAMG,GAAN,CADQ,CAFiB,CAApC,CAFA,CADwC,CAA1C,CAUA,KAAIG,YAMJ,IAAuB,WAAvB,GAAI,MAAOX,OAAX,EAAwE,IAAxE,GAAyCW,YAAzC,CAAwDX,MAAQY,CAAAA,GAAhE,GAA6FC,CAAbF,YAAaE,CAAAA,qBAA7F,CAkBE,GAfyB,UAAzB,GAAI,MAAOC,UAAX,CACEA,SAAA,CAAU,EAAA,EAAM,CACd,GAAIT,KAAMU,CAAAA,OAAV,GADc,CAAhB,CADF,CAI+B,UAJ/B,GAIW,MAAOC,SAJlB,EAQEA,QAAA,CAAS,EAAA,EAAM,CACb,GAAIX,KAAMU,CAAAA,OAAV,GADa,CAAf,CAOE,CAAqB,UAArB,GAAA,MAAOE,UAAP,EAAuD,UAAvD,GAAmC,MAAOC,SAA9C,CAAuE,CAErE,IAAIC,8BAAgC,GAAIf,UAAWgB,CAAAA,wBAAf,GACpCH,UAAA,CAAU,EAAA,EAAM,CACdE,6BAAA;AAAgC,GAAIf,UAAWgB,CAAAA,wBAAf,GAChC,IAAIhB,UAAWiB,CAAAA,sBAAf,EAAuC,CAAA,CAAvC,CAFc,CAAhB,CAIAH,SAAA,CAAS,EAAA,EAAM,CACb,GAAId,UAAWiB,CAAAA,sBAAf,EAAuCF,6BAAvC,CADa,CAAf,CAPqE,CA3CyC;",
"sources":["node_modules/@testing-library/react/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$testing_library$react$dist$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _actCompat = require(\"./act-compat\");\nvar _pure = require(\"./pure\");\nObject.keys(_pure).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _pure[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _pure[key];\n    }\n  });\n});\nvar _process$env;\n// if we're running in a test runner that supports afterEach\n// or teardown then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this then either import the `pure` module\n// or set the RTL_SKIP_AUTO_CLEANUP env variable to 'true'.\nif (typeof process === 'undefined' || !((_process$env = process.env) != null && _process$env.RTL_SKIP_AUTO_CLEANUP)) {\n  // ignore teardown() in code coverage because Jest does not support it\n  /* istanbul ignore else */\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      (0, _pure.cleanup)();\n    });\n  } else if (typeof teardown === 'function') {\n    // Block is guarded by `typeof` check.\n    // eslint does not support `typeof` guards.\n    // eslint-disable-next-line no-undef\n    teardown(() => {\n      (0, _pure.cleanup)();\n    });\n  }\n\n  // No test setup with other test runners available\n  /* istanbul ignore else */\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = (0, _actCompat.getIsReactActEnvironment)();\n    beforeAll(() => {\n      previousIsReactActEnvironment = (0, _actCompat.getIsReactActEnvironment)();\n      (0, _actCompat.setReactActEnvironment)(true);\n    });\n    afterAll(() => {\n      (0, _actCompat.setReactActEnvironment)(previousIsReactActEnvironment);\n    });\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","process","Object","defineProperty","value","_actCompat","_pure","keys","forEach","key","enumerable","get","_process$env","env","RTL_SKIP_AUTO_CLEANUP","afterEach","cleanup","teardown","beforeAll","afterAll","previousIsReactActEnvironment","getIsReactActEnvironment","setReactActEnvironment"]
}
