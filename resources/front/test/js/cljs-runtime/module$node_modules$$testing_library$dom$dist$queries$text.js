shadow$provide.module$node_modules$$testing_library$dom$dist$queries$text=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.queryByText=exports.queryAllByText=exports.getByText=exports.getAllByText=exports.findByText=exports.findAllByText=void 0;global=require("module$node_modules$$testing_library$dom$dist$query_helpers");var _helpers=require("module$node_modules$$testing_library$dom$dist$helpers"),_allUtils=require("module$node_modules$$testing_library$dom$dist$queries$all_utils");
require=(container,text,{selector="*",exact=!0,collapseWhitespace,trim,ignore=(0,_allUtils.getConfig)().defaultIgnore,normalizer}={})=>{(0,_helpers.checkContainerType)(container);const matcher=exact?_allUtils.matches:_allUtils.fuzzyMatches,matchNormalizer=(0,_allUtils.makeNormalizer)({collapseWhitespace,trim,normalizer});exact=[];"function"===typeof container.matches&&container.matches(selector)&&(exact=[container]);return[...exact,...Array.from(container.querySelectorAll(selector))].filter(node=>
!ignore||!node.matches(ignore)).filter(node=>matcher((0,_allUtils.getNodeText)(node),node,text,matchNormalizer))};global=(0,global.wrapAllByQueryWithSuggestion)(require,require.name,"queryAll");exports.queryAllByText=global;const [queryByText,getAllByText,getByText,findAllByText,findByText]=(0,_allUtils.buildQueries)(require,(c,text)=>`Found multiple elements with the text: ${text}`,(c,text,options={})=>{const {collapseWhitespace,trim,normalizer,selector}=options;c=(0,_allUtils.makeNormalizer)({collapseWhitespace,
trim,normalizer})(text.toString());return`Unable to find an element with the text: ${c!==text.toString()?`${c} (normalized from '${text}')`:text}${"*"!==(selector??"*")?`, which matches selector '${selector}'`:""}. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.`});exports.findByText=findByText;exports.findAllByText=findAllByText;exports.getByText=getByText;exports.getAllByText=getAllByText;
exports.queryByText=queryByText}
//# sourceMappingURL=module$node_modules$$testing_library$dom$dist$queries$text.js.map
