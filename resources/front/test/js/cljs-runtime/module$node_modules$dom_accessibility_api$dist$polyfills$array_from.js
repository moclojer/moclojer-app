shadow$provide.module$node_modules$dom_accessibility_api$dist$polyfills$array_from=function(global,require,module,exports){function isCallable(fn){return"function"===typeof fn||"[object Function]"===toStr.call(fn)}exports.__esModule=!0;exports.default=function(arrayLike,mapFn){var C=Array,items=Object(arrayLike);if(null==arrayLike)throw new TypeError("Array.from requires an array-like object - not null or undefined");if("undefined"!==typeof mapFn&&!isCallable(mapFn))throw new TypeError("Array.from: when provided, the second argument must be a function");
arrayLike=Number(items.length);arrayLike=isNaN(arrayLike)?0:0!==arrayLike&&isFinite(arrayLike)?(0<arrayLike?1:-1)*Math.floor(Math.abs(arrayLike)):arrayLike;arrayLike=Math.min(Math.max(arrayLike,0),maxSafeInteger);C=isCallable(C)?Object(new C(arrayLike)):Array(arrayLike);for(var k=0,kValue;k<arrayLike;)kValue=items[k],C[k]=mapFn?mapFn(kValue,k):kValue,k+=1;C.length=arrayLike;return C};var toStr=Object.prototype.toString,maxSafeInteger=Math.pow(2,53)-1}
//# sourceMappingURL=module$node_modules$dom_accessibility_api$dist$polyfills$array_from.js.map
