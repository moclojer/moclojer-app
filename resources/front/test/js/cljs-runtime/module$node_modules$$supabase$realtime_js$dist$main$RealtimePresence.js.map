{
"version":3,
"file":"module$node_modules$$supabase$realtime_js$dist$main$RealtimePresence.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@supabase/realtime-js/dist/main/RealtimePresence.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$realtime_js$dist$main$RealtimePresence\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS = exports.REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nclass RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\nexports.default = RealtimePresence;\n//# sourceMappingURL=RealtimePresence.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","REALTIME_PRESENCE_LISTEN_EVENTS","RealtimePresence","constructor","channel","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","_on","newState","_joinRef","syncState","forEach","syncDiff","inPendingSyncState","push","key","currentPresences","newPresences","_trigger","event","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","map","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","filter","indexOf","length","_a","joinedPresenceRefs","curPresences","unshift","presenceRefsToRemove","obj","func","getOwnPropertyNames","reduce","metas","presence","JSON","parse","stringify","callback","default"]
}
