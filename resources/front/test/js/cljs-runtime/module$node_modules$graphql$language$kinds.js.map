{
"version":3,
"file":"module$node_modules$graphql$language$kinds.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,IAAR,CAAe,IAAK,EAMpBJ,QAAQI,CAAAA,IAAR,CADIA,IAAAA,EA+CD,OAAA,CAASJ,OAAQI,CAAAA,IAAjB,CAA+B,EA3ChCA,OAAA,CAAA,IAAA,CAAe,MACfA,OAAA,CAAA,QAAA,CAAmB,UACnBA,OAAA,CAAA,oBAAA,CAA+B,qBAC/BA,OAAA,CAAA,mBAAA,CAA8B,oBAC9BA,OAAA,CAAA,aAAA,CAAwB,cACxBA,OAAA,CAAA,KAAA,CAAgB,OAChBA,OAAA,CAAA,QAAA,CAAmB,UACnBA,OAAA,CAAA,eAAA,CAA0B,gBAC1BA,OAAA,CAAA,eAAA;AAA0B,gBAC1BA,OAAA,CAAA,mBAAA,CAA8B,oBAC9BA,OAAA,CAAA,QAAA,CAAmB,UACnBA,OAAA,CAAA,GAAA,CAAc,UACdA,OAAA,CAAA,KAAA,CAAgB,YAChBA,OAAA,CAAA,MAAA,CAAiB,aACjBA,OAAA,CAAA,OAAA,CAAkB,cAClBA,OAAA,CAAA,IAAA,CAAe,WACfA,OAAA,CAAA,IAAA,CAAe,WACfA,OAAA,CAAA,IAAA,CAAe,WACfA,OAAA,CAAA,MAAA,CAAiB,aACjBA,OAAA,CAAA,YAAA,CAAuB,aACvBA,OAAA,CAAA,SAAA,CAAoB,WACpBA,OAAA,CAAA,UAAA,CAAqB,WACrBA,OAAA,CAAA,SAAA,CAAoB,UACpBA,OAAA,CAAA,aAAA,CAAwB,aACxBA,OAAA,CAAA,iBAAA,CAA4B,kBAC5BA,OAAA,CAAA,yBAAA;AAAoC,yBACpCA,OAAA,CAAA,sBAAA,CAAiC,sBACjCA,OAAA,CAAA,sBAAA,CAAiC,sBACjCA,OAAA,CAAA,gBAAA,CAA2B,iBAC3BA,OAAA,CAAA,sBAAA,CAAiC,sBACjCA,OAAA,CAAA,yBAAA,CAAoC,yBACpCA,OAAA,CAAA,qBAAA,CAAgC,qBAChCA,OAAA,CAAA,oBAAA,CAA+B,oBAC/BA,OAAA,CAAA,qBAAA,CAAgC,qBAChCA,OAAA,CAAA,4BAAA,CAAuC,2BACvCA;MAAA,CAAA,oBAAA,CAA+B,qBAC/BA,OAAA,CAAA,gBAAA,CAA2B,iBAC3BA,OAAA,CAAA,qBAAA,CAAgC,qBAChCA,OAAA,CAAA,qBAAA,CAAgC,qBAChCA,OAAA,CAAA,wBAAA,CAAmC,wBACnCA,OAAA,CAAA,oBAAA,CAA+B,oBAC/BA,OAAA,CAAA,mBAAA,CAA8B,mBAC9BA,OAAA,CAAA,2BAAA,CAAsC,0BAzD+D;",
"sources":["node_modules/graphql/language/kinds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$language$kinds\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Kind"]
}
