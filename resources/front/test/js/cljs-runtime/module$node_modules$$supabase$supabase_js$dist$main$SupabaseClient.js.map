{
"version":3,
"file":"module$node_modules$$supabase$supabase_js$dist$main$SupabaseClient.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/@supabase/supabase-js/dist/main/SupabaseClient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$supabase_js$dist$main$SupabaseClient\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst functions_js_1 = require(\"@supabase/functions-js\");\nconst postgrest_js_1 = require(\"@supabase/postgrest-js\");\nconst realtime_js_1 = require(\"@supabase/realtime-js\");\nconst storage_js_1 = require(\"@supabase/storage-js\");\nconst constants_1 = require(\"./lib/constants\");\nconst fetch_1 = require(\"./lib/fetch\");\nconst helpers_1 = require(\"./lib/helpers\");\nconst SupabaseAuthClient_1 = require(\"./lib/SupabaseAuthClient\");\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: constants_1.DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nclass SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = (0, helpers_1.stripTrailingSlash)(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = (0, helpers_1.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = (0, fetch_1.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new postgrest_js_1.PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new functions_js_1.FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new storage_js_1.StorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param args  The parameters to pass to the function call.\n     * @param options.head   When set to true, no data will be returned.\n     * @param options.count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient_1.SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new realtime_js_1.RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\nexports.default = SupabaseClient;\n//# sourceMappingURL=SupabaseClient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","functions_js_1","postgrest_js_1","realtime_js_1","storage_js_1","constants_1","fetch_1","helpers_1","SupabaseAuthClient_1","DEFAULT_GLOBAL_OPTIONS","headers","DEFAULT_HEADERS","DEFAULT_DB_OPTIONS","schema","DEFAULT_AUTH_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","flowType","DEFAULT_REALTIME_OPTIONS","SupabaseClient","constructor","supabaseUrl","supabaseKey","options","_a","_b","_c","_d","_e","_f","_g","_h","Error","_supabaseUrl","stripTrailingSlash","realtimeUrl","replace","authUrl","storageUrl","match","isPlatform","urlParts","split","functionsUrl","defaultStorageKey","hostname","URL","DEFAULTS","db","realtime","auth","assign","storageKey","settings","applySettingDefaults","_initSupabaseAuthClient","fetch","fetchWithAuth","_getAccessToken","bind","_initRealtimeClient","rest","PostgrestClient","_listenForAuthEvents","FunctionsClient","customFetch","StorageClient","from","relation","rpc","fn","args","channel","name","opts","config","getChannels","removeChannel","removeAllChannels","data","getSession","session","access_token","storage","SupabaseAuthClient","url","authHeaders","Authorization","apikey","RealtimeClient","params","onAuthStateChange","event","_handleTokenChanged","token","source","changedAccessToken","setAuth","signOut","undefined","default"]
}
