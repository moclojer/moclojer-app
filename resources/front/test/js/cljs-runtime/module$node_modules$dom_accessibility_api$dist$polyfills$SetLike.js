shadow$provide.module$node_modules$dom_accessibility_api$dist$polyfills$SetLike=function(global,require,module,exports){function _typeof(obj$jscomp$0){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj$jscomp$0)}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=
props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor)}}function _createClass(Constructor,protoProps,staticProps){protoProps&&_defineProperties(Constructor.prototype,protoProps);staticProps&&_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:!1});return Constructor}function _toPropertyKey(arg){a:if("object"===
_typeof(arg)&&null!==arg){var prim=arg[Symbol.toPrimitive];if(void 0!==prim){arg=prim.call(arg,"string");if("object"!==_typeof(arg))break a;throw new TypeError("@@toPrimitive must return a primitive value.");}arg=String(arg)}return"symbol"===_typeof(arg)?arg:String(arg)}exports.__esModule=!0;exports.default=void 0;global=function(){function SetLike(){var items=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(!(this instanceof SetLike))throw new TypeError("Cannot call a class as a function");
var key=_toPropertyKey("items");key in this?Object.defineProperty(this,key,{value:void 0,enumerable:!0,configurable:!0,writable:!0}):this[key]=void 0;this.items=items}_createClass(SetLike,[{key:"add",value:function(value){!1===this.has(value)&&this.items.push(value);return this}},{key:"clear",value:function(){this.items=[]}},{key:"delete",value:function(value){var previousLength=this.items.length;this.items=this.items.filter(function(item){return item!==value});return previousLength!==this.items.length}},
{key:"forEach",value:function(callbackfn){var _this=this;this.items.forEach(function(item){callbackfn(item,item,_this)})}},{key:"has",value:function(value){return-1!==this.items.indexOf(value)}},{key:"size",get:function(){return this.items.length}}]);return SetLike}();exports.default="undefined"===typeof Set?Set:global}
//# sourceMappingURL=module$node_modules$dom_accessibility_api$dist$polyfills$SetLike.js.map
