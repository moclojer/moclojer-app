{
"version":3,
"file":"module$node_modules$$supabase$realtime_js$dist$main$RealtimeClient.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/@supabase/realtime-js/dist/main/RealtimeClient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$realtime_js$dist$main$RealtimeClient\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst websocket_1 = require(\"websocket\");\nconst constants_1 = require(\"./lib/constants\");\nconst timer_1 = __importDefault(require(\"./lib/timer\"));\nconst serializer_1 = __importDefault(require(\"./lib/serializer\"));\nconst RealtimeChannel_1 = __importDefault(require(\"./RealtimeChannel\"));\nconst noop = () => { };\nclass RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = constants_1.DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = constants_1.DEFAULT_TIMEOUT;\n        this.transport = websocket_1.w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new serializer_1.default();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${constants_1.TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new timer_1.default(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const status = yield channel.unsubscribe();\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    removeAllChannels() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n            this.disconnect();\n            return values_1;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case constants_1.SOCKET_STATES.connecting:\n                return constants_1.CONNECTION_STATE.Connecting;\n            case constants_1.SOCKET_STATES.open:\n                return constants_1.CONNECTION_STATE.Open;\n            case constants_1.SOCKET_STATES.closing:\n                return constants_1.CONNECTION_STATE.Closing;\n            default:\n                return constants_1.CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === constants_1.CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel_1.default(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(constants_1.CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: constants_1.VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(constants_1.CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(constants_1.WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            if (eventsPerSecondLimitMs > 0) {\n                this.inThrottle = true;\n                setTimeout(() => {\n                    this.inThrottle = false;\n                }, eventsPerSecondLimitMs);\n            }\n            return false;\n        };\n    }\n}\nexports.default = RealtimeClient;\n//# sourceMappingURL=RealtimeClient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","websocket_1","constants_1","timer_1","serializer_1","RealtimeChannel_1","noop","RealtimeClient","constructor","endPoint","options","_a","accessToken","channels","headers","DEFAULT_HEADERS","params","timeout","DEFAULT_TIMEOUT","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","undefined","pendingHeartbeatRef","ref","logger","conn","sendBuffer","serializer","default","stateChangeCallbacks","open","close","error","message","eventsPerSecondLimitMs","inThrottle","TRANSPORTS","websocket","assign","eventsPerSecond","Math","floor","reconnectAfterMs","tries","encode","payload","callback","JSON","stringify","decode","bind","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","this.conn.onopen","_onConnOpen","onerror","this.conn.onerror","_onConnError","onmessage","event","this.conn.onmessage","_onConnMessage","onclose","this.conn.onclose","_onConnClose","code","reason","clearInterval","reset","getChannels","removeChannel","channel","status","unsubscribe","length","removeAllChannels","values_1","all","map","log","kind","msg","data","connectionState","readyState","SOCKET_STATES","connecting","CONNECTION_STATE","Connecting","Open","closing","Closing","Closed","isConnected","topic","config","chan","push","send","includes","_throttle","isThrottled","setAuth","token","forEach","updateJoinPayload","access_token","joinedOnce","_isJoined","_push","CHANNEL_EVENTS","_makeRef","newRef","toString","_leaveOpenTopic","dupChannel","find","c","_isJoining","_remove","filter","_joinRef","_appendParams","vsn","VSN","rawMessage","type","_isMember","_trigger","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","scheduleTimeout","url","keys","prefix","match","query","URLSearchParams","WS_CLOSE_NORMAL","setTimeout"]
}
