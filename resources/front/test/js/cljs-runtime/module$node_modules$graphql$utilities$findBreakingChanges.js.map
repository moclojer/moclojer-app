{
"version":3,
"file":"module$node_modules$graphql$utilities$findBreakingChanges.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/graphql/utilities/findBreakingChanges.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$findBreakingChanges\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DangerousChangeType = exports.BreakingChangeType = void 0;\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _sortValueNode = require('./sortValueNode.js');\n\nvar BreakingChangeType;\nexports.BreakingChangeType = BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(\n  BreakingChangeType || (exports.BreakingChangeType = BreakingChangeType = {}),\n);\n\nvar DangerousChangeType;\nexports.DangerousChangeType = DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(\n  DangerousChangeType ||\n    (exports.DangerousChangeType = DangerousChangeType = {}),\n);\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if ((0, _definition.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0, _scalars.isSpecifiedScalarType)(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (\n      (0, _definition.isEnumType)(oldType) &&\n      (0, _definition.isEnumType)(newType)\n    ) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isUnionType)(oldType) &&\n      (0, _definition.isUnionType)(newType)\n    ) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isInputObjectType)(oldType) &&\n      (0, _definition.isInputObjectType)(newType)\n    ) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isObjectType)(oldType) &&\n      (0, _definition.isObjectType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (\n      (0, _definition.isInterfaceType)(oldType) &&\n      (0, _definition.isInterfaceType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if ((0, _definition.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if ((0, _definition.isRequiredArgument)(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      ((0, _definition.isListType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      (0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    ((0, _definition.isNamedType)(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    ((0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      (0, _definition.isListType)(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!(0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return 'an Object type';\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return 'a Union type';\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return 'an Enum type';\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction stringifyValue(value, type) {\n  const ast = (0, _astFromValue.astFromValue)(value, type);\n  ast != null || (0, _invariant.invariant)(false);\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = (0, _keyMap.keyMap)(oldArray, ({ name }) => name);\n  const newMap = (0, _keyMap.keyMap)(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","findSchemaChanges","oldSchema","newSchema","schemaChanges","typesDiff","diff","Object","values","getTypeMap","oldType","removed","push","type","BreakingChangeType","TYPE_REMOVED","description","_scalars","isSpecifiedScalarType","name","newType","persisted","_definition","isEnumType","valuesDiff","getValues","newValue","added","DangerousChangeType","VALUE_ADDED_TO_ENUM","oldValue","VALUE_REMOVED_FROM_ENUM","isUnionType","possibleTypesDiff","getTypes","newPossibleType","TYPE_ADDED_TO_UNION","oldPossibleType","TYPE_REMOVED_FROM_UNION","isInputObjectType","fieldsDiff","getFields","newField","isRequiredInputField","REQUIRED_INPUT_FIELD_ADDED","OPTIONAL_INPUT_FIELD_ADDED","oldField","FIELD_REMOVED","isChangeSafeForInputObjectFieldOrFieldArg","isSafe","FIELD_CHANGED_KIND","String","isObjectType","findFieldChanges","findImplementedInterfacesChanges","isInterfaceType","constructor","TYPE_CHANGED_KIND","typeKindName","directivesDiff","getDirectives","oldDirective","DIRECTIVE_REMOVED","newDirective","argsDiff","args","newArg","isRequiredArgument","REQUIRED_DIRECTIVE_ARG_ADDED","oldArg","DIRECTIVE_ARG_REMOVED","isRepeatable","DIRECTIVE_REPEATABLE_REMOVED","location","locations","includes","DIRECTIVE_LOCATION_REMOVED","interfacesDiff","getInterfaces","newInterface","IMPLEMENTED_INTERFACE_ADDED","oldInterface","IMPLEMENTED_INTERFACE_REMOVED","ARG_REMOVED","ARG_CHANGED_KIND","undefined","defaultValue","ARG_DEFAULT_VALUE_CHANGE","oldValueStr","stringifyValue","newValueStr","REQUIRED_ARG_ADDED","OPTIONAL_ARG_ADDED","isChangeSafeForObjectOrInterfaceField","isListType","ofType","isNonNullType","isNamedType","isScalarType","_invariant","invariant","_inspect","inspect","value","ast","_astFromValue","astFromValue","_printer","print","_sortValueNode","sortValueNode","oldArray","newArray","oldMap","_keyMap","keyMap","newMap","oldItem","newItem","defineProperty","findBreakingChanges","filter","change","findDangerousChanges"]
}
