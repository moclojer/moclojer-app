{
"version":3,
"file":"module$node_modules$graphql$type$directives.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/graphql/type/directives.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$type$directives\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSpecifiedByDirective =\n  exports.GraphQLSkipDirective =\n  exports.GraphQLIncludeDirective =\n  exports.GraphQLDirective =\n  exports.GraphQLDeprecatedDirective =\n  exports.DEFAULT_DEPRECATION_REASON =\n    void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} locations must be an Array.`,\n      );\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isDirective","directive","_instanceOf","instanceOf","GraphQLDirective","Object","defineProperty","value","GraphQLSpecifiedByDirective","GraphQLSkipDirective","GraphQLIncludeDirective","GraphQLDeprecatedDirective","DEFAULT_DEPRECATION_REASON","assertDirective","Error","_inspect","inspect","isSpecifiedDirective","specifiedDirectives","some","name","_devAssert","_isObjectLike","_toObjMap","_directiveLocation","_assertName","_definition","_scalars","constructor","config","_config$isRepeatable","_config$args","assertName","description","locations","isRepeatable","extensions","toObjMap","astNode","Array","isArray","devAssert","args","isObjectLike","defineArguments","Symbol","toStringTag","toConfig","argsToArgsConfig","toString","toJSON","DirectiveLocation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","type","GraphQLNonNull","GraphQLBoolean","FIELD_DEFINITION","ARGUMENT_DEFINITION","INPUT_FIELD_DEFINITION","ENUM_VALUE","reason","GraphQLString","defaultValue","SCALAR","url","freeze"]
}
