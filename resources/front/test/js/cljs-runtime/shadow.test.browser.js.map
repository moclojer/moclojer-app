{"version":3,"sources":["shadow/test/browser.cljs"],"mappings":";AASA,4BAAA,5BAAMA;AAAN,sCACM,2CAAA,AAAA,2HAAA,2CAAA,6DAAA,2CAAA,oDAAAC,sEAAA,sDAAA,mFAAA,4GAAA,AAAA,uLAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,2HAAA,AAAA,8GAAA,AAAA,6CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,uEAAA,AAAA,AAAAA,qFAAA,SAAA,8GAAA,AAAA,4LAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,2HAAA,AAAA,oHAAA,AAAA,6CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,yEAAA,AAAA,AAAAA,uFAAA,yBAAA,AAAA,qIAAA,2CAAA,6DAAA,2CAAA,oDAAAC,2EAAA,sDAAA,mFAAA,uHAAA,AAAA,6MAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,qIAAA,AAAA,2HAAA,AAAA,kDAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,kFAAA,AAAA,AAAAA,gGAAA,SAAA,oHAAA,AAAA,uMAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,qIAAA,AAAA,sHAAA,AAAA,kDAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,+EAAA,AAAA,AAAAA,6FAAA,SAAA,uHAAA,AAAA,+MAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,qIAAA,AAAA,2HAAA,AAAA,kDAAA,AAAA,GAAA,AAAA,EAAA,AAAA,GAAA,AAAA,GAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,kFAAA,AAAA,AAAAA,gGAAA,yBAAA,AAAA,4HAAA,2CAAA,sDAAA,mFAAA,+FAAA,AAAA,8JAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,4HAAA,AAAA,sFAAA,AAAA,6CAAA,AAAA,GAAA,AAAA,EAAA,AAAA,EAAA,AAAA,EAAA,AAAA,qBAAA,AAAA,KAAA,kBAAAC,0DAAA,AAAA,AAAAA,wEAAA,9tTACA,AAACC;;AAEL,OAACC,wDAAiB,gEAAA,hEAACC;;AAErB,2BAAA,3BAAMC,8DAAMC;AAAZ,AAEE,QAACA,qCAAAA,uCAAAA;;AAGH,2BAAA,3BAAeC;AAAf,AACE,gDAAA,mFAAA,nIAACC;;AACD,OAACf","names":["shadow.test.browser/start","front.app.integration.login-view-test/cljs-test-each-fixtures","front.app.integration.login-view-test/auth-view-email-send-error-test","front.app.integration.login-view-test/auth-view-email-send-success-test","front.app.integration.login-auth-view-test/cljs-test-each-fixtures","front.app.integration.login-auth-view-test/login-auth-view-test-fail-workos-test","front.app.integration.login-auth-view-test/login-auth-view-test-fail-api-test","front.app.integration.login-auth-view-test/login-auth-view-test-success-api-test","front.app.unit.components.button-test/props-classes-test","shadow.test.env/reset-test-data!","shadow.test.run_all_tests","cljs_test_display.core.init_BANG_","shadow.test.browser/stop","done","shadow.test.browser/init","shadow.dom.append"],"sourcesContent":["(ns shadow.test.browser\n  \"generic browser test runner\"\n  {:dev/always true}\n  (:require\n    [shadow.test :as st]\n    [shadow.test.env :as env]\n    [shadow.dom :as dom]\n    [cljs-test-display.core :as ctd]))\n\n(defn start []\n  (-> (env/get-test-data)\n      (env/reset-test-data!))\n\n  (st/run-all-tests (ctd/init! \"test-root\")))\n\n(defn stop [done]\n  ;; FIXME: determine if async tests are still pending\n  (done))\n\n;; not sure we need to do something once?\n(defn ^:export init []\n  (dom/append [:div#test-root])\n  (start))\n"]}