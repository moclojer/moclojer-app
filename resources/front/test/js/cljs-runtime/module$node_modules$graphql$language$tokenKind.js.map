{
"version":3,
"file":"module$node_modules$graphql$language$tokenKind.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,SAAR,CAAoB,IAAK,EAOzBJ,QAAQI,CAAAA,SAAR,CADIA,IAAAA,EA0BD,OAAA,CAAcJ,OAAQI,CAAAA,SAAtB,CAA8C,EAtB/CA,OAAA,CAAA,GAAA,CAAmB,aACnBA,OAAA,CAAA,GAAA,CAAmB,aACnBA,OAAA,CAAA,IAAA,CAAoB,GACpBA,OAAA,CAAA,MAAA,CAAsB,GACtBA,OAAA,CAAA,GAAA,CAAmB,MACnBA,OAAA,CAAA,OAAA,CAAuB,GACvBA,OAAA,CAAA,OAAA,CAAuB,GACvBA,OAAA,CAAA,MAAA,CAAsB,KACtBA,OAAA,CAAA,KAAA,CAAqB,GACrBA,OAAA,CAAA,MAAA,CAAsB,MACtBA,OAAA,CAAA,EAAA,CAAkB,GAClBA,OAAA,CAAA,SAAA,CAAyB,GACzBA,OAAA,CAAA,SAAA,CAAyB,GACzBA,OAAA,CAAA,OAAA;AAAuB,GACvBA,OAAA,CAAA,IAAA,CAAoB,GACpBA,OAAA,CAAA,OAAA,CAAuB,GACvBA,OAAA,CAAA,IAAA,CAAoB,MACpBA,OAAA,CAAA,GAAA,CAAmB,KACnBA,OAAA,CAAA,KAAA,CAAqB,OACrBA,OAAA,CAAA,MAAA,CAAsB,QACtBA,OAAA,CAAA,YAAA,CAA4B,aAC5BA,OAAA,CAAA,OAAA,CAAuB,SArCkF;",
"sources":["node_modules/graphql/language/tokenKind.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$language$tokenKind\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\nexports.TokenKind = TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (exports.TokenKind = TokenKind = {}));\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TokenKind"]
}
