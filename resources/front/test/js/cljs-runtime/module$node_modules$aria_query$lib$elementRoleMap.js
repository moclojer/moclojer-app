shadow$provide.module$node_modules$aria_query$lib$elementRoleMap=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){var JSCompiler_temp=Array.isArray(arr)?arr:void 0;if(!JSCompiler_temp)if(JSCompiler_temp=null==arr?null:"undefined"!==typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"],null==JSCompiler_temp)JSCompiler_temp=void 0;else{var _arr=[],_n=!0,_d=!1,_s;try{for(JSCompiler_temp=JSCompiler_temp.call(arr);!(_n=
(_s=JSCompiler_temp.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0;var _e=err}finally{try{if(!_n&&null!=JSCompiler_temp["return"])JSCompiler_temp["return"]()}finally{if(_d)throw _e;}}JSCompiler_temp=_arr}if(!(arr=JSCompiler_temp||_unsupportedIterableToArray(arr,i)))throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");return arr}function _createForOfIteratorHelper(o,
allowArrayLike){var it="undefined"!==typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e2){throw _e2;},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=it.call(o)},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e3){didErr=!0;err=_e3},f:function(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===
n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _deepEqual=_interopRequireDefault(require("module$node_modules$deep_equal$index"));global=_interopRequireDefault(require("module$node_modules$aria_query$lib$util$iterationDecorator"));
require=_interopRequireDefault(require("module$node_modules$aria_query$lib$rolesMap"));var elementRoles=[];module=require.default.keys();for(var i$jscomp$0=0;i$jscomp$0<module.length;i$jscomp$0++){var key$jscomp$0=module[i$jscomp$0],role=require.default.get(key$jscomp$0);if(role){role=[].concat(role.baseConcepts,role.relatedConcepts);for(var k=0;k<role.length;k++){var relation=role[k];if("HTML"===relation.module){var concept=relation.concept;concept&&function(){var conceptStr=JSON.stringify(concept),
elementRoleRelation=elementRoles.find(function(relation){return JSON.stringify(relation[0])===conceptStr}),roles=void 0;roles=elementRoleRelation?elementRoleRelation[1]:[];elementRoleRelation=!0;for(var _i=0;_i<roles.length;_i++)if(roles[_i]===key$jscomp$0){elementRoleRelation=!1;break}elementRoleRelation&&roles.push(key$jscomp$0);elementRoles.push([concept,roles])}()}}}}var elementRoleMap={entries:function(){return elementRoles},forEach:function(fn){var thisArg=1<arguments.length&&void 0!==arguments[1]?
arguments[1]:null,_iterator=_createForOfIteratorHelper(elementRoles),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2);fn.call(thisArg,_step$value[1],_step$value[0],elementRoles)}}catch(err){_iterator.e(err)}finally{_iterator.f()}},get:function(key){var item=elementRoles.find(function(tuple){return(0,_deepEqual.default)(key,tuple[0])});return item&&item[1]},has:function(key){return!!elementRoleMap.get(key)},keys:function(){return elementRoles.map(function(_ref){return _slicedToArray(_ref,
1)[0]})},values:function(){return elementRoles.map(function(_ref3){return _slicedToArray(_ref3,2)[1]})}};global=(0,global.default)(elementRoleMap,elementRoleMap.entries());exports.default=global}
//# sourceMappingURL=module$node_modules$aria_query$lib$elementRoleMap.js.map
