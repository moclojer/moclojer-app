{
"version":3,
"file":"module$node_modules$graphql$validation$specifiedRules.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/graphql/validation/specifiedRules.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$specifiedRules\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.specifiedSDLRules = exports.specifiedRules = void 0;\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\n// Spec Section: \"Executable Definitions\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Lone Anonymous Operation\"\n// SDL-specific validation rules\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Input Object Field Uniqueness\"\n// Spec Section: \"Operation Name Uniqueness\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"Value Type Correctness\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nconst specifiedRules = Object.freeze([\n  _ExecutableDefinitionsRule.ExecutableDefinitionsRule,\n  _UniqueOperationNamesRule.UniqueOperationNamesRule,\n  _LoneAnonymousOperationRule.LoneAnonymousOperationRule,\n  _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule,\n  _VariablesAreInputTypesRule.VariablesAreInputTypesRule,\n  _ScalarLeafsRule.ScalarLeafsRule,\n  _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule,\n  _UniqueFragmentNamesRule.UniqueFragmentNamesRule,\n  _KnownFragmentNamesRule.KnownFragmentNamesRule,\n  _NoUnusedFragmentsRule.NoUnusedFragmentsRule,\n  _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule,\n  _NoFragmentCyclesRule.NoFragmentCyclesRule,\n  _UniqueVariableNamesRule.UniqueVariableNamesRule,\n  _NoUndefinedVariablesRule.NoUndefinedVariablesRule,\n  _NoUnusedVariablesRule.NoUnusedVariablesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule,\n  _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule,\n  _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexports.specifiedRules = specifiedRules;\nconst specifiedSDLRules = Object.freeze([\n  _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule,\n  _UniqueOperationTypesRule.UniqueOperationTypesRule,\n  _UniqueTypeNamesRule.UniqueTypeNamesRule,\n  _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule,\n  _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule,\n  _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule,\n  _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule,\n]);\nexports.specifiedSDLRules = specifiedSDLRules;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","specifiedSDLRules","specifiedRules","_ExecutableDefinitionsRule","_FieldsOnCorrectTypeRule","_FragmentsOnCompositeTypesRule","_KnownArgumentNamesRule","_KnownDirectivesRule","_KnownFragmentNamesRule","_KnownTypeNamesRule","_LoneAnonymousOperationRule","_LoneSchemaDefinitionRule","_NoFragmentCyclesRule","_NoUndefinedVariablesRule","_NoUnusedFragmentsRule","_NoUnusedVariablesRule","_OverlappingFieldsCanBeMergedRule","_PossibleFragmentSpreadsRule","_PossibleTypeExtensionsRule","_ProvidedRequiredArgumentsRule","_ScalarLeafsRule","_SingleFieldSubscriptionsRule","_UniqueArgumentDefinitionNamesRule","_UniqueArgumentNamesRule","_UniqueDirectiveNamesRule","_UniqueDirectivesPerLocationRule","_UniqueEnumValueNamesRule","_UniqueFieldDefinitionNamesRule","_UniqueFragmentNamesRule","_UniqueInputFieldNamesRule","_UniqueOperationNamesRule","_UniqueOperationTypesRule","_UniqueTypeNamesRule","_UniqueVariableNamesRule","_ValuesOfCorrectTypeRule","_VariablesAreInputTypesRule","_VariablesInAllowedPositionRule","freeze","ExecutableDefinitionsRule","UniqueOperationNamesRule","LoneAnonymousOperationRule","SingleFieldSubscriptionsRule","KnownTypeNamesRule","FragmentsOnCompositeTypesRule","VariablesAreInputTypesRule","ScalarLeafsRule","FieldsOnCorrectTypeRule","UniqueFragmentNamesRule","KnownFragmentNamesRule","NoUnusedFragmentsRule","PossibleFragmentSpreadsRule","NoFragmentCyclesRule","UniqueVariableNamesRule","NoUndefinedVariablesRule","NoUnusedVariablesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","KnownArgumentNamesRule","UniqueArgumentNamesRule","ValuesOfCorrectTypeRule","ProvidedRequiredArgumentsRule","VariablesInAllowedPositionRule","OverlappingFieldsCanBeMergedRule","UniqueInputFieldNamesRule","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueArgumentDefinitionNamesRule","UniqueDirectiveNamesRule","PossibleTypeExtensionsRule","KnownArgumentNamesOnDirectivesRule","ProvidedRequiredArgumentsOnDirectivesRule"]
}
