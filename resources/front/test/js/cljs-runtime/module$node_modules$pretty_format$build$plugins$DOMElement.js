shadow$provide.module$node_modules$pretty_format$build$plugins$DOMElement=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _markup=require("module$node_modules$pretty_format$build$plugins$lib$markup");const ELEMENT_REGEXP=/^((HTML|SVG)\w*)?Element$/;global=val=>{var _val$constructor,JSCompiler_temp;if(JSCompiler_temp=null===val||void 0===val?void 0:null===(_val$constructor=val.constructor)||void 0===
_val$constructor?void 0:_val$constructor.name){_val$constructor=val.constructor.name;const {nodeType,tagName}=val;if(!(JSCompiler_temp="string"===typeof tagName&&tagName.includes("-")))try{JSCompiler_temp="function"===typeof val.hasAttribute&&val.hasAttribute("is")}catch{JSCompiler_temp=!1}val=JSCompiler_temp;JSCompiler_temp=1===nodeType&&(ELEMENT_REGEXP.test(_val$constructor)||val)||3===nodeType&&"Text"===_val$constructor||8===nodeType&&"Comment"===_val$constructor||11===nodeType&&"DocumentFragment"===
_val$constructor}return JSCompiler_temp};exports.test=global;require=(node,config,indentation,depth,refs,printer)=>{if(3===node.nodeType)return(0,_markup.printText)(node.data,config);if(8===node.nodeType)return(0,_markup.printComment)(node.data,config);const type=11===node.nodeType?"DocumentFragment":node.tagName.toLowerCase();return++depth>config.maxDepth?(0,_markup.printElementAsLeaf)(type,config):(0,_markup.printElement)(type,(0,_markup.printProps)(11===node.nodeType?[]:Array.from(node.attributes).map(attr=>
attr.name).sort(),11===node.nodeType?{}:Array.from(node.attributes).reduce((props,attribute)=>{props[attribute.name]=attribute.value;return props},{}),config,indentation+config.indent,depth,refs,printer),(0,_markup.printChildren)(Array.prototype.slice.call(node.childNodes||node.children),config,indentation+config.indent,depth,refs,printer),config,indentation)};exports.serialize=require;exports.default={serialize:require,test:global}}
//# sourceMappingURL=module$node_modules$pretty_format$build$plugins$DOMElement.js.map
