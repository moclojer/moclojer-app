shadow$provide.module$node_modules$graphql$language$printLocation=function(global,require,module,exports){function printSourceLocation(source,sourceLocation){var firstLineColumnOffset=source.locationOffset.column-1,body="".padStart(firstLineColumnOffset)+source.body,lineIndex=sourceLocation.line-1;const lineNum=sourceLocation.line+(source.locationOffset.line-1);sourceLocation=sourceLocation.column+(1===sourceLocation.line?firstLineColumnOffset:0);source=`${source.name}:${lineNum}:${sourceLocation}\n`;
firstLineColumnOffset=body.split(/\r\n|[\n\r]/g);body=firstLineColumnOffset[lineIndex];if(120<body.length){lineIndex=Math.floor(sourceLocation/80);sourceLocation%=80;firstLineColumnOffset=[];for(let i=0;i<body.length;i+=80)firstLineColumnOffset.push(body.slice(i,i+80));return source+printPrefixedLines([[`${lineNum} |`,firstLineColumnOffset[0]],...firstLineColumnOffset.slice(1,lineIndex+1).map(subLine=>["|",subLine]),["|","^".padStart(sourceLocation)],["|",firstLineColumnOffset[lineIndex+1]]])}return source+
printPrefixedLines([[`${lineNum-1} |`,firstLineColumnOffset[lineIndex-1]],[`${lineNum} |`,body],["|","^".padStart(sourceLocation)],[`${lineNum+1} |`,firstLineColumnOffset[lineIndex+1]]])}function printPrefixedLines(lines){lines=lines.filter(([,line])=>void 0!==line);const padLen=Math.max(...lines.map(([prefix])=>prefix.length));return lines.map(([prefix,line])=>prefix.padStart(padLen)+(line?" "+line:"")).join("\n")}Object.defineProperty(exports,"__esModule",{value:!0});exports.printLocation=function(location){return printSourceLocation(location.source,
(0,_location.getLocation)(location.source,location.start))};exports.printSourceLocation=printSourceLocation;var _location=require("module$node_modules$graphql$language$location")}
//# sourceMappingURL=module$node_modules$graphql$language$printLocation.js.map
