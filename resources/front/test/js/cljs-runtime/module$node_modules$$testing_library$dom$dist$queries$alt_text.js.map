{
"version":3,
"file":"module$node_modules$$testing_library$dom$dist$queries$alt_text.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,cAAR,CAAyBJ,OAAQK,CAAAA,iBAAjC,CAAqDL,OAAQM,CAAAA,YAA7D,CAA4EN,OAAQO,CAAAA,eAApF,CAAsGP,OAAQQ,CAAAA,aAA9G,CAA8HR,OAAQS,CAAAA,gBAAtI,CAAyJ,IAAK,EAC9J,KAAIC,cAAgBZ,OAAA,CAAQ,6DAAR,CAApB,CACIa,SAAWb,OAAA,CAAQ,uDAAR,CACXc,OAAAA,CAAYd,OAAA,CAAQ,iEAAR,CAEhB;MAAMe,iBAAmB,2BACnBR,QAAAA,CAAoB,CAACS,SAAD,CAAYC,GAAZ,CAAiBC,OAAA,CAAU,EAA3B,CAAAX,EAAkC,CAC1D,GAAIM,QAASM,CAAAA,kBAAb,EAAiCH,SAAjC,CACA,OAAO,GAAIJ,aAAcQ,CAAAA,mBAAlB,EAAuC,KAAvC,CAA8CJ,SAA9C,CAAyDC,GAAzD,CAA8DC,OAA9D,CAAuEG,CAAAA,MAAvE,CAA8EC,IAAA,EAAQP,gBAAiBQ,CAAAA,IAAjB,CAAsBD,IAAKE,CAAAA,OAA3B,CAAtF,CAFmD,CAMtDC,OAAAA,CAAmC,GAAIb,aAAcc,CAAAA,4BAAlB,EAAgDnB,OAAhD,CAAmEA,OAAkBoB,CAAAA,IAArF,CAA2F,UAA3F,CACzCzB,QAAQK,CAAAA,iBAAR,CAA4BkB,MAC5B,OAAM,CAACnB,cAAD,CAAiBG,eAAjB,CAAkCD,YAAlC,CAAgDG,gBAAhD,CAAkED,aAAlE,CAAA,CAAmF,GAAII,MAAUc,CAAAA,YAAd,EAA4BrB,OAA5B,CAJhE,CAACsB,CAAD,CAAIZ,GAAJ,CAAAa,EAAa,8CAA6Cb,GAA7C,EAImD;AAHjE,CAACY,CAAD,CAAIZ,GAAJ,CAAAc,EAAa,gDAA+Cd,GAA/C,EAGoD,CACzFf,QAAQQ,CAAAA,aAAR,CAAwBA,aACxBR,QAAQS,CAAAA,gBAAR,CAA2BA,gBAC3BT,QAAQM,CAAAA,YAAR,CAAuBA,YACvBN,QAAQO,CAAAA,eAAR,CAA0BA,eAC1BP,QAAQI,CAAAA,cAAR,CAAyBA,cAzBkG;",
"sources":["node_modules/@testing-library/dom/dist/queries/alt-text.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$testing_library$dom$dist$queries$alt_text\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByAltText = exports.queryAllByAltText = exports.getByAltText = exports.getAllByAltText = exports.findByAltText = exports.findAllByAltText = void 0;\nvar _queryHelpers = require(\"../query-helpers\");\nvar _helpers = require(\"../helpers\");\nvar _allUtils = require(\"./all-utils\");\n// Valid tags are img, input, area and custom elements\nconst VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;\nconst queryAllByAltText = (container, alt, options = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  return (0, _queryHelpers.queryAllByAttribute)('alt', container, alt, options).filter(node => VALID_TAG_REGEXP.test(node.tagName));\n};\nconst getMultipleError = (c, alt) => `Found multiple elements with the alt text: ${alt}`;\nconst getMissingError = (c, alt) => `Unable to find an element with the alt text: ${alt}`;\nconst queryAllByAltTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByAltText, queryAllByAltText.name, 'queryAll');\nexports.queryAllByAltText = queryAllByAltTextWithSuggestions;\nconst [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = (0, _allUtils.buildQueries)(queryAllByAltText, getMultipleError, getMissingError);\nexports.findByAltText = findByAltText;\nexports.findAllByAltText = findAllByAltText;\nexports.getByAltText = getByAltText;\nexports.getAllByAltText = getAllByAltText;\nexports.queryByAltText = queryByAltText;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","queryByAltText","queryAllByAltText","getByAltText","getAllByAltText","findByAltText","findAllByAltText","_queryHelpers","_helpers","_allUtils","VALID_TAG_REGEXP","container","alt","options","checkContainerType","queryAllByAttribute","filter","node","test","tagName","queryAllByAltTextWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries","c","getMultipleError","getMissingError"]
}
