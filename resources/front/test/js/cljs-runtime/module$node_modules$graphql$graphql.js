shadow$provide.module$node_modules$graphql$graphql=function(global,require,module,exports){function graphqlImpl(args){2>arguments.length||(0,_devAssert.devAssert)(!1,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const {schema,source,rootValue,contextValue,variableValues,operationName,fieldResolver,typeResolver}=args;var schemaValidationErrors=(0,_validate.validateSchema)(schema);if(0<schemaValidationErrors.length)return{errors:schemaValidationErrors};
let document;try{document=(0,_parser.parse)(source)}catch(syntaxError){return{errors:[syntaxError]}}schemaValidationErrors=(0,_validate2.validate)(schema,document);return 0<schemaValidationErrors.length?{errors:schemaValidationErrors}:(0,_execute.execute)({schema,document,rootValue,contextValue,variableValues,operationName,fieldResolver,typeResolver})}Object.defineProperty(exports,"__esModule",{value:!0});exports.graphql=function(args){return new Promise(resolve=>resolve(graphqlImpl(args)))};exports.graphqlSync=
function(args){args=graphqlImpl(args);if((0,_isPromise.isPromise)(args))throw Error("GraphQL execution failed to complete synchronously.");return args};var _devAssert=require("module$node_modules$graphql$jsutils$devAssert"),_isPromise=require("module$node_modules$graphql$jsutils$isPromise"),_parser=require("module$node_modules$graphql$language$parser"),_validate=require("module$node_modules$graphql$type$validate"),_validate2=require("module$node_modules$graphql$validation$validate"),_execute=require("module$node_modules$graphql$execution$execute")}
//# sourceMappingURL=module$node_modules$graphql$graphql.js.map
