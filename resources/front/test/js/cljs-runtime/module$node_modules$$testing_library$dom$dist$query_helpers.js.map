{
"version":3,
"file":"module$node_modules$$testing_library$dom$dist$query_helpers.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmBxHC,QAASA,gBAAe,CAACC,OAAD,CAAUC,SAAV,CAAqB,CAC3C,MAAO,GAAIC,OAAQC,CAAAA,SAAZ,GAAyBJ,CAAAA,eAAzB,CAAyCC,OAAzC,CAAkDC,SAAlD,CADoC,CAG7CG,QAASA,8BAA6B,CAACJ,OAAD,CAAUC,SAAV,CAAqB,CACzD,MAAOF,gBAAA,CAAiB,GAAEC,OAAF,gJAAjB,CAA4KC,SAA5K,CADkD,CAG3DI,QAASA,oBAAmB,CAACC,SAAD;AAAYL,SAAZ,CAAuBM,IAAvB,CAA6B,CACvDC,KAAA,CAAQ,CAAA,CAD+C,CAEvDC,kBAFuD,CAGvDC,IAHuD,CAIvDC,UAJuD,CAAA,CAKrD,EALwB,CAKpB,CACN,MAAMC,QAAUJ,KAAA,CAAQK,QAASC,CAAAA,OAAjB,CAA2BD,QAASE,CAAAA,YAApD,CACMC,gBAAkB,GAAIH,QAASI,CAAAA,cAAb,EAA6B,CACnDR,kBADmD,CAEnDC,IAFmD,CAGnDC,UAHmD,CAA7B,CAKxB,OAAOO,MAAMC,CAAAA,IAAN,CAAWlB,SAAUmB,CAAAA,gBAAV,CAA4B,IAAGd,SAAH,GAA5B,CAAX,CAAyDe,CAAAA,MAAzD,CAAgEC,IAAA,EAAQV,OAAA,CAAQU,IAAKC,CAAAA,YAAL,CAAkBjB,SAAlB,CAAR,CAAsCgB,IAAtC,CAA4Cf,IAA5C,CAAkDS,eAAlD,CAAxE,CAPD,CAoBRQ,QAASA,gBAAe,CAACC,QAAD,CAAWC,gBAAX,CAA6B,CACnD,MAAO,CAACzB,SAAD,CAAY,GAAG0B,IAAf,CAAA,EAAwB,CAC7B,IAAMC,IAAMH,QAAA,CAASxB,SAAT,CAAoB,GAAG0B,IAAvB,CACZ,IAAiB,CAAjB,CAAIC,GAAIC,CAAAA,MAAR,CAEE,KADMC,IACA,CADiBF,GAAIG,CAAAA,GAAJ,CAAQC,OAAA;AAAWjC,eAAAC,CAAgBA,IAAhBA,CAAsBgC,OAAtBhC,CAA+BA,CAAAA,OAAlD,CAA2DiC,CAAAA,IAA3D,CAAgE,MAAhE,CACjB,CAAA7B,6BAAA,CAA+B,GAAEsB,gBAAA,CAAiBzB,SAAjB,CAA4B,GAAG0B,IAA/B,CAAF;;;;EAIzCG,GAJyC,EAA/B,CAIQ7B,SAJR,CAAN,CAMF,MAAO2B,IAAA,CAAI,CAAJ,CAAP,EAAiB,IAVY,CADoB,CAcrDM,QAASA,mBAAkB,CAACC,UAAD,CAAalC,SAAb,CAAwB,CACjD,MAAO,GAAIC,OAAQC,CAAAA,SAAZ,GAAyBJ,CAAAA,eAAzB,CAA0C;EACjDoC,UAAWC,CAAAA,QAAX,EADiD;CAA1C,CAENnC,SAFM,CAD0C,CAQnDoC,QAASA,gBAAe,CAACZ,QAAD,CAAWa,eAAX,CAA4B,CAClD,MAAO,CAACrC,SAAD,CAAY,GAAG0B,IAAf,CAAA,EAAwB,CAC7B,MAAMC,IAAMH,QAAA,CAASxB,SAAT,CAAoB,GAAG0B,IAAvB,CACZ,IAAI,CAACC,GAAIC,CAAAA,MAAT,CACE,KAAM,GAAI3B,OAAQC,CAAAA,SAAZ,GAAyBJ,CAAAA,eAAzB,CAAyCuC,eAAA,CAAgBrC,SAAhB,CAA2B,GAAG0B,IAA9B,CAAzC,CAA8E1B,SAA9E,CAAN,CAEF,MAAO2B,IALsB,CADmB,CAYpDW,QAASA,cAAa,CAACC,MAAD,CAAS,CAC7B,MAAO,CAACvC,SAAD,CAAYM,IAAZ,CAAkBkC,OAAlB,CAA2BC,cAA3B,CAAA,EACE,GAAIC,QAASC,CAAAA,OAAb,EAAsB,EAAA,EACpBJ,MAAA,CAAOvC,SAAP,CAAkBM,IAAlB,CAAwBkC,OAAxB,CADF,CAEJ,CACDxC,SADC,CAED,GAAGyC,cAFF,CAFI,CAFoB,CAjF/BG,MAAOC,CAAAA,cAAP,CAAsBhD,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CiD,MAAO,CAAA,CADoC,CAA7C,CAGAjD,QAAQkD,CAAAA,YAAR,CAiIAA,QAAqB,CAACC,UAAD;AAAavB,gBAAb,CAA+BY,eAA/B,CAAgD,CACnE,MAAMY,QAAUC,6BAAA,CAA8B3B,eAAA,CAAgByB,UAAhB,CAA4BvB,gBAA5B,CAA9B,CAA6EuB,UAAWG,CAAAA,IAAxF,CAA8F,OAA9F,CAChB,KAAMC,SAAWhB,eAAA,CAAgBY,UAAhB,CAA4BX,eAA5B,CACjB,OAAMgB,MAAQ9B,eAAA,CAAgB6B,QAAhB,CAA0B3B,gBAA1B,CACR6B,iBAAAA,CAAuBJ,6BAAA,CAA8BG,KAA9B,CAAqCL,UAAWG,CAAAA,IAAhD,CAAsD,KAAtD,CACvBI,gBAAAA,CAAwBC,4BAAA,CAA6BJ,QAA7B,CAAuCJ,UAAWG,CAAAA,IAAKM,CAAAA,OAAhB,CAAwB,OAAxB,CAAiC,KAAjC,CAAvC,CAAgF,QAAhF,CACxBC,SAAAA,CAAYpB,aAAA,CAAckB,4BAAA,CAA6BJ,QAA7B,CAAuCJ,UAAWG,CAAAA,IAAlD;AAAwD,SAAxD,CAAd,CACZQ,WAAAA,CAASrB,aAAA,CAAcY,6BAAA,CAA8BG,KAA9B,CAAqCL,UAAWG,CAAAA,IAAhD,CAAsD,MAAtD,CAAd,CACf,OAAO,CAACF,OAAD,CAAUM,eAAV,CAAiCD,gBAAjC,CAAuDI,QAAvD,CAAkEC,UAAlE,CAR4D,CAhIrE9D,QAAQC,CAAAA,eAAR,CAA0BA,eAC1BD,QAAQM,CAAAA,6BAAR,CAAwCA,6BACxCN,QAAQyC,CAAAA,aAAR,CAAwBA,aACxBzC,QAAQuC,CAAAA,eAAR,CAA0BA,eAC1BvC,QAAQ0B,CAAAA,eAAR,CAA0BA,eAC1B1B,QAAQO,CAAAA,mBAAR,CAA8BA,mBAC9BP,QAAQ+D,CAAAA,gBAAR,CA0BAA,QAAyB,CAACvD,SAAD,CAAYL,SAAZ,CAAuBM,IAAvB,CAA6BkC,OAA7B,CAAsC,CACvDb,OAAAA;AAAMvB,mBAAA,CAAoBC,SAApB,CAA+BL,SAA/B,CAA0CM,IAA1C,CAAgDkC,OAAhD,CACZ,IAAiB,CAAjB,CAAIb,OAAIC,CAAAA,MAAR,CACE,KAAMzB,8BAAA,CAA+B,+BAA8BE,SAA9B,IAA2CC,IAA3C,GAA/B,CAAmFN,SAAnF,CAAN,CAEF,MAAO2B,QAAA,CAAI,CAAJ,CAAP,EAAiB,IAL4C,CAzB/D9B,QAAQqD,CAAAA,6BAAR,CAAwCrD,OAAQ2D,CAAAA,4BAAhD,CAA+E,IAAK,EACpF,KAAIK,aAAelE,OAAA,CAAQ,2DAAR,CAAnB,CACIiB,SAAWjB,OAAA,CAAQ,uDAAR,CADf,CAEI+C,SAAW/C,OAAA,CAAQ,wDAAR,CAFf;AAGIM,QAAUN,OAAA,CAAQ,sDAAR,CA4Ed,OAAMuD,8BAAgC,CAACY,KAAD,CAAQC,cAAR,CAAwBC,OAAxB,CAAAd,EAAoC,CAAClD,SAAD,CAAY,GAAG0B,IAAf,CAAA,EAAwB,CAChG,MAAMK,QAAU+B,KAAA,CAAM9D,SAAN,CAAiB,GAAG0B,IAApB,CACV,EAAC,CACL,QAAAuC,IAAA,CAAU,GAAIhE,OAAQC,CAAAA,SAAZ,GAAyBgE,CAAAA,gBAD9B,CAAA,CAEH,EAFE,CAAN,CAEUxC,IAAKyC,CAAAA,KAAL,CAAW,CAAC,CAAZ,CACV,IAAIpC,OAAJ,EAAekC,IAAf,GACQ/B,IADR,CACqB,GAAI2B,YAAaO,CAAAA,iBAAjB,EAAoCrC,OAApC,CAA6CiC,OAA7C,CADrB,GAEoB,CAACD,cAAeM,CAAAA,QAAf,CAAwBnC,IAAWoC,CAAAA,SAAnC,CAFrB,CAGI,KAAMrC,mBAAA,CAAmBC,IAAWC,CAAAA,QAAX,EAAnB,CAA0CnC,SAA1C,CAAN,CAGJ,MAAO+B,QAXyF,CAalGlC,QAAQqD,CAAAA,6BAAR;AAAwCA,6BACxC,OAAMM,6BAA+B,CAACM,KAAD,CAAQC,cAAR,CAAwBC,OAAxB,CAAAR,EAAoC,CAACxD,SAAD,CAAY,GAAG0B,IAAf,CAAA,EAAwB,CAC/F,MAAMC,IAAMmC,KAAA,CAAM9D,SAAN,CAAiB,GAAG0B,IAApB,CACN,EAAC,CACL,QAAAuC,IAAA,CAAU,GAAIhE,OAAQC,CAAAA,SAAZ,GAAyBgE,CAAAA,gBAD9B,CAAA,CAEH,EAFE,CAAN,CAEUxC,IAAKyC,CAAAA,KAAL,CAAW,CAAC,CAAZ,CACV,IAAIxC,GAAIC,CAAAA,MAAR,EAAkBqC,IAAlB,GAGQM,IAMN,CANiC,CAAC,IAAG,IAAIC,GAAJ,CAAQ7C,GAAIG,CAAAA,GAAJ,CAAQC,OAAA,EAAW,CAC9D,IAAI0C,kBACJ,OAAuF,KAAhF,GAACA,kBAAD,CAAsB,GAAIZ,YAAaO,CAAAA,iBAAjB,EAAoCrC,OAApC,CAA6CiC,OAA7C,CAAtB,EAAuF,IAAK,EAA5F,CAAgGS,kBAAmBtC,CAAAA,QAAnB,EAFzC,CAAnB,CAAR,CAAH,CAAD,CAMjC,CAAoC,CAApC,GAAAoC,IAAyB3C,CAAAA,MAAzB,EAAyC,CAACmC,cAAeM,CAAAA,QAAf,CAE1C,GAAIR,YAAaO,CAAAA,iBAAjB,EAAoCzC,GAAA,CAAI,CAAJ,CAApC;AAA4CqC,OAA5C,CAAqDM,CAAAA,SAFX,CAT5C,EAYI,KAAMrC,mBAAA,CAAmBsC,IAAA,CAAyB,CAAzB,CAAnB,CAAgDvE,SAAhD,CAAN,CAGJ,MAAO2B,IApBwF,CA0BjG9B,QAAQ2D,CAAAA,4BAAR,CAAuCA,4BAtIiF;",
"sources":["node_modules/@testing-library/dom/dist/query-helpers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$testing_library$dom$dist$query_helpers\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildQueries = buildQueries;\nexports.getElementError = getElementError;\nexports.getMultipleElementsFoundError = getMultipleElementsFoundError;\nexports.makeFindQuery = makeFindQuery;\nexports.makeGetAllQuery = makeGetAllQuery;\nexports.makeSingleQuery = makeSingleQuery;\nexports.queryAllByAttribute = queryAllByAttribute;\nexports.queryByAttribute = queryByAttribute;\nexports.wrapSingleQueryWithSuggestion = exports.wrapAllByQueryWithSuggestion = void 0;\nvar _suggestions = require(\"./suggestions\");\nvar _matches = require(\"./matches\");\nvar _waitFor = require(\"./wait-for\");\nvar _config = require(\"./config\");\nfunction getElementError(message, container) {\n  return (0, _config.getConfig)().getElementError(message, container);\n}\nfunction getMultipleElementsFoundError(message, container) {\n  return getElementError(`${message}\\n\\n(If this is intentional, then use the \\`*AllBy*\\` variant of the query (like \\`queryAllByText\\`, \\`getAllByText\\`, or \\`findAllByText\\`)).`, container);\n}\nfunction queryAllByAttribute(attribute, container, text, {\n  exact = true,\n  collapseWhitespace,\n  trim,\n  normalizer\n} = {}) {\n  const matcher = exact ? _matches.matches : _matches.fuzzyMatches;\n  const matchNormalizer = (0, _matches.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  return Array.from(container.querySelectorAll(`[${attribute}]`)).filter(node => matcher(node.getAttribute(attribute), node, text, matchNormalizer));\n}\nfunction queryByAttribute(attribute, container, text, options) {\n  const els = queryAllByAttribute(attribute, container, text, options);\n  if (els.length > 1) {\n    throw getMultipleElementsFoundError(`Found multiple elements by [${attribute}=${text}]`, container);\n  }\n  return els[0] || null;\n}\n\n// this accepts a query function and returns a function which throws an error\n// if more than one elements is returned, otherwise it returns the first\n// element or null\nfunction makeSingleQuery(allQuery, getMultipleError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n    if (els.length > 1) {\n      const elementStrings = els.map(element => getElementError(null, element).message).join('\\n\\n');\n      throw getMultipleElementsFoundError(`${getMultipleError(container, ...args)}\n\nHere are the matching elements:\n\n${elementStrings}`, container);\n    }\n    return els[0] || null;\n  };\n}\nfunction getSuggestionError(suggestion, container) {\n  return (0, _config.getConfig)().getElementError(`A better query is available, try this:\n${suggestion.toString()}\n`, container);\n}\n\n// this accepts a query function and returns a function which throws an error\n// if an empty list of elements is returned\nfunction makeGetAllQuery(allQuery, getMissingError) {\n  return (container, ...args) => {\n    const els = allQuery(container, ...args);\n    if (!els.length) {\n      throw (0, _config.getConfig)().getElementError(getMissingError(container, ...args), container);\n    }\n    return els;\n  };\n}\n\n// this accepts a getter query function and returns a function which calls\n// waitFor and passing a function which invokes the getter.\nfunction makeFindQuery(getter) {\n  return (container, text, options, waitForOptions) => {\n    return (0, _waitFor.waitFor)(() => {\n      return getter(container, text, options);\n    }, {\n      container,\n      ...waitForOptions\n    });\n  };\n}\nconst wrapSingleQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const element = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (element && suggest) {\n    const suggestion = (0, _suggestions.getSuggestedQuery)(element, variant);\n    if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) {\n      throw getSuggestionError(suggestion.toString(), container);\n    }\n  }\n  return element;\n};\nexports.wrapSingleQueryWithSuggestion = wrapSingleQueryWithSuggestion;\nconst wrapAllByQueryWithSuggestion = (query, queryAllByName, variant) => (container, ...args) => {\n  const els = query(container, ...args);\n  const [{\n    suggest = (0, _config.getConfig)().throwSuggestions\n  } = {}] = args.slice(-1);\n  if (els.length && suggest) {\n    // get a unique list of all suggestion messages.  We are only going to make a suggestion if\n    // all the suggestions are the same\n    const uniqueSuggestionMessages = [...new Set(els.map(element => {\n      var _getSuggestedQuery;\n      return (_getSuggestedQuery = (0, _suggestions.getSuggestedQuery)(element, variant)) == null ? void 0 : _getSuggestedQuery.toString();\n    }))];\n    if (\n    // only want to suggest if all the els have the same suggestion.\n    uniqueSuggestionMessages.length === 1 && !queryAllByName.endsWith(\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- TODO: Can this be null at runtime?\n    (0, _suggestions.getSuggestedQuery)(els[0], variant).queryName)) {\n      throw getSuggestionError(uniqueSuggestionMessages[0], container);\n    }\n  }\n  return els;\n};\n\n// TODO: This deviates from the published declarations\n// However, the implementation always required a dyadic (after `container`) not variadic `queryAllBy` considering the implementation of `makeFindQuery`\n// This is at least statically true and can be verified by accepting `QueryMethod<Arguments, HTMLElement[]>`\nexports.wrapAllByQueryWithSuggestion = wrapAllByQueryWithSuggestion;\nfunction buildQueries(queryAllBy, getMultipleError, getMissingError) {\n  const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, 'query');\n  const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);\n  const getBy = makeSingleQuery(getAllBy, getMultipleError);\n  const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'get');\n  const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace('query', 'get'), 'getAll');\n  const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, 'findAll'));\n  const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'find'));\n  return [queryBy, getAllWithSuggestions, getByWithSuggestions, findAllBy, findBy];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getElementError","message","container","_config","getConfig","getMultipleElementsFoundError","queryAllByAttribute","attribute","text","exact","collapseWhitespace","trim","normalizer","matcher","_matches","matches","fuzzyMatches","matchNormalizer","makeNormalizer","Array","from","querySelectorAll","filter","node","getAttribute","makeSingleQuery","allQuery","getMultipleError","args","els","length","elementStrings","map","element","join","getSuggestionError","suggestion","toString","makeGetAllQuery","getMissingError","makeFindQuery","getter","options","waitForOptions","_waitFor","waitFor","Object","defineProperty","value","buildQueries","queryAllBy","queryBy","wrapSingleQueryWithSuggestion","name","getAllBy","getBy","getByWithSuggestions","getAllWithSuggestions","wrapAllByQueryWithSuggestion","replace","findAllBy","findBy","queryByAttribute","_suggestions","query","queryAllByName","variant","suggest","throwSuggestions","slice","getSuggestedQuery","endsWith","queryName","uniqueSuggestionMessages","Set","_getSuggestedQuery"]
}
