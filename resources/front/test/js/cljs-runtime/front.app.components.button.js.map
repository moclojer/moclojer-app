{"version":3,"sources":["front/app/components/button.cljs"],"mappings":";AAIA,0CAAA,2CAAA,wDAAA,wKAAA,0DAAA,/WAAKA;AAIL,4CAAA,2CAAA,wDAAA,2CAAA,uDAAA,6IAAA,qDAAA,wIAAA,uDAAA,yHAAA,0DAAA,2CAAA,uDAAA,iLAAA,uDAAA,/mCAAKC;AAOL,gDAAA,wDAAAC,xGAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,2DAAA,hIACWI;YADX,AAAAF,4CAAAF,eAAA,uDAAA,1HACmBK;iBADnB,AAAAH,4CAAAF,eAAA,gEAAA,xIACyBM;AADzB,AAGE,IAAMF,cAAQ,AAACG,gDAAQH;IACjBC,YAAM,AAACE,gDAAQF;AADrB,AAEE,oDAAK,+IAAID,iEAAAA,/MAAQP,wEAAAA,qFAAAA,6GACZ,yFAAA,zFAACW,+CAAOV,6HAAeM,YAAQC,gEAC/BC;;AAET,AAAA,GAAAG;AAAA,AAAAC,uCAAA,AAAAC;;AAAA;;AAAA,qCAAA,iBAAAC,WAAA,oDAAAC,qBAAAC,1IAAOQ;AAAP,AAAA,IAAAP,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;IAAAG,aAAA,AAAAC,4CAAAH,WAAA,IAAA;IAAAE,iBAAA,AAAAhB,4BAAAgB;YAAAA,RACyBO;eADzB,AAAAtB,4CAAAe,eAAA,tEACWM;AADX,AAAA,oBAAAd;AAAA,oBAAAC;AAAA,AAAA,CAAAA,qEAAAA,uEAAAA;;AAAA;;AAAA;;AAEE,IAAMe,UAAQ,AAACtB,8CAAeqB;AAA9B,0HAEgBC,1HAuIb,OAAA,AAAAE,qCAAA,SAAA,AAAAC,2BAAA,iBAAAC,WAAA,EAAA;AAAA,AAAAA;+DAvIuB,qDAAA,rDAACH,+CAAOF,yEAC/BD,lLAsIA,AAAAO;;AA3IL,AAAA,GAAA,AAAArB;AAAA,IAAAU,WAAAP;AAAA,AAAA,CAAA,AAAAO,uBAAA;;AAAAA;;AAAAP;;;;AAAA;AAAA,oBAAA,AAAAQ,oBAAA,AAAA,kEAAA,2CAAA,oDAAA,AAAA;AAAA,AAAA,oBAAAV;AAAA,AAAA,CAAAA,qEAAAA,sGAAA,GAAA,KAAA,QAAAA,kFAAA,GAAA,KAAA,7IAAOY,kGAAAA;;AAAP;;AAAA,AAAAD,6DAAA,nCAAOC;;AAAP;;AAAOA","names":["front.app.components.button/base-styles","front.app.components.button/variant-syles","p__53497","map__53498","cljs.core/--destructure-map","cljs.core.get","front.app.components.button/props->classes","variant","color","class-name","cljs.core.keyword","cljs.core.get_in","goog/DEBUG","front.app.components.button/sig53501","helix.core/signature!","G__53502","props__27103__auto__","maybe-ref__27104__auto__","vec__53506","helix.core/extract-cljs-props","map__53511","cljs.core.nth","G__53533","cljs.core/with-meta","helix.core/register!","front.app.components.button/Button","children","props","classes","cljs.core.dissoc","helix.core/get-react","helix.impl.props/merge-obj","obj53525","helix.impl.props._dom_props"],"sourcesContent":["(ns front.app.components.button\n  (:require [front.app.lib :refer [defnc]]\n            [helix.dom :as d]))\n\n(def base-styles\n  {:solid \"group inline-flex items-center justify-center rounded-full py-2 px-4 text-sm font-semibold focus:outline-none focus-visible:outline-2 focus-visible:outline-offset-2 \"\n   :outline \"group inline-flex ring-1 items-center justify-center rounded-full py-2 px-4 text-sm focus:outline-none \"})\n\n(def variant-syles\n  {:solid {:slate \"bg-slate-900 text-white hover:bg-slate-700 hover:text-slate-100 active:bg-slate-800 active:text-slate-300 focus-visible:outline-slate-900 \",\n           :blue \"bg-blue-600 text-white hover:text-slate-100 hover:bg-blue-500 active:bg-blue-800 active:text-blue-100 focus-visible:outline-blue-600 \",\n           :white \"bg-white text-slate-900 hover:bg-blue-50 active:bg-blue-200 active:text-slate-600 focus-visible:outline-white \"},\n   :outline {:slate \"ring-slate-200 text-slate-700 hover:text-slate-900 hover:ring-slate-300 active:bg-slate-100 active:text-slate-600 focus-visible:outline-blue-600 focus-visible:ring-slate-300 \",\n             :white \"ring-slate-700 text-white hover:ring-slate-500 active:ring-slate-700 active:text-slate-400 focus-visible:outline-white \"}})\n\n(defn props->classes\n  [{:keys [variant color class-name]\n    :or {variant :solid color :blue class-name \"\"}}]\n  (let [variant (keyword variant)\n        color (keyword color)]\n    (str (-> variant base-styles)\n         (get-in variant-syles [variant color])\n         class-name)))\n\n(defnc Button\n  [{:keys [children] :as props}]\n  (let [classes (props->classes props)]\n    (d/button\n     {:class-name classes & (dissoc props :class-name)}\n     children)))\n"]}