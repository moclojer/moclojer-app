shadow$provide.module$node_modules$$testing_library$dom$dist$label_helpers=function(global,require,module,exports){function getTextContent(node){return labelledNodeNames.includes(node.nodeName.toLowerCase())?"":node.nodeType===_helpers.TEXT_NODE?node.textContent:Array.from(node.childNodes).map(childNode=>getTextContent(childNode)).join("")}function getLabelContent(element){return"label"===element.tagName.toLowerCase()?getTextContent(element):element.value||element.textContent}function getRealLabels(element){if(void 0!==
element.labels)return element.labels??[];if(!isLabelable(element))return[];const labels=element.ownerDocument.querySelectorAll("label");return Array.from(labels).filter(label=>label.control===element)}function isLabelable(element){return/BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName)||"INPUT"===element.tagName&&"hidden"!==element.getAttribute("type")}Object.defineProperty(exports,"__esModule",{value:!0});exports.getLabelContent=getLabelContent;exports.getLabels=function(container,
element,{selector="*"}={}){var ariaLabelledBy=element.getAttribute("aria-labelledby");ariaLabelledBy=ariaLabelledBy?ariaLabelledBy.split(" "):[];return ariaLabelledBy.length?ariaLabelledBy.map(labelId=>(labelId=container.querySelector(`[id="${labelId}"]`))?{content:getLabelContent(labelId),formControl:null}:{content:"",formControl:null}):Array.from(getRealLabels(element)).map(label=>{const textToMatch=getLabelContent(label);label=Array.from(label.querySelectorAll("button, input, meter, output, progress, select, textarea")).filter(formControlElement=>
formControlElement.matches(selector))[0];return{content:textToMatch,formControl:label}})};exports.getRealLabels=getRealLabels;var _helpers=require("module$node_modules$$testing_library$dom$dist$helpers");const labelledNodeNames="button meter output progress select textarea input".split(" ")}
//# sourceMappingURL=module$node_modules$$testing_library$dom$dist$label_helpers.js.map
