{
"version":3,
"file":"module$node_modules$$supabase$gotrue_js$dist$main$GoTrueClient.js",
"lineCount":63,
"mappings":"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",
"sources":["node_modules/@supabase/gotrue-js/dist/main/GoTrueClient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$gotrue_js$dist$main$GoTrueClient\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GoTrueAdminApi_1 = __importDefault(require(\"./GoTrueAdminApi\"));\nconst constants_1 = require(\"./lib/constants\");\nconst errors_1 = require(\"./lib/errors\");\nconst fetch_1 = require(\"./lib/fetch\");\nconst helpers_1 = require(\"./lib/helpers\");\nconst local_storage_1 = __importDefault(require(\"./lib/local-storage\"));\nconst polyfills_1 = require(\"./lib/polyfills\");\n(0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 10 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nclass GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || local_storage_1.default;\n        this.admin = new GoTrueAdminApi_1.default({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', (event) => {\n                this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                const isPKCEFlow = yield this._isPKCEFlow();\n                if ((this.detectSessionInUrl && this._isImplicitGrantFlow()) || isPKCEFlow) {\n                    const { data, error } = yield this._getSessionFromUrl(isPKCEFlow);\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    setTimeout(() => {\n                        if (redirectType === 'recovery') {\n                            this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                        }\n                        else {\n                            this._notifyAllSubscribers('SIGNED_IN', session);\n                        }\n                    }, 0);\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { error };\n                }\n                return {\n                    error: new errors_1.AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                yield this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: fetch_1._sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: fetch_1._sessionResponse,\n                    });\n                }\n                else {\n                    throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    signInWithPassword(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: fetch_1._sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: fetch_1._sessionResponse,\n                    });\n                }\n                else {\n                    throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return yield this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n            });\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     */\n    exchangeCodeForSession(authCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const codeVerifier = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            const { data, error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: fetch_1._sessionResponse,\n            });\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error || !data)\n                return { data: { user: null, session: null }, error };\n            if (data.session) {\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        });\n    }\n    /**\n     * Allows signing in with an ID token issued by certain supported providers.\n     * The ID token is verified for validity and a new session is established.\n     *\n     * @experimental\n     */\n    signInWithIdToken(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            try {\n                const { options, provider, token, nonce } = credentials;\n                const res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                    headers: this.headers,\n                    body: {\n                        provider,\n                        id_token: token,\n                        nonce,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: fetch_1._sessionResponse,\n                });\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    let codeChallenge = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = (0, helpers_1.generatePKCEVerifier)();\n                        yield (0, helpers_1.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield (0, helpers_1.generatePKCEChallenge)(codeVerifier);\n                    }\n                    const { error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallenge ? 's256' : null,\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: fetch_1._sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw new Error('An error occurred on token verification.');\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    signInWithSSO(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                        : null)), { skip_http_redirect: true }),\n                    headers: this.headers,\n                    xform: fetch_1._ssoResponse,\n                });\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: fetch_1._userResponse,\n                });\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    updateUser(attributes, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new errors_1.AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return (0, helpers_1.decodeJWTPayload)(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession.access_token || !currentSession.refresh_token) {\n                    throw new errors_1.AuthSessionMissingError();\n                }\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                const payload = (0, helpers_1.decodeJWTPayload)(currentSession.access_token);\n                if (payload.exp) {\n                    expiresAt = payload.exp;\n                    hasExpired = expiresAt <= timeNow;\n                }\n                if (hasExpired) {\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { user: null, session: null }, error: error };\n                    }\n                    if (!refreshedSession) {\n                        return { data: { user: null, session: null }, error: null };\n                    }\n                    session = refreshedSession;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new errors_1.AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl(isPKCEFlow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(0, helpers_1.isBrowser)())\n                    throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n                if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n                    throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                else if (this.flowType == 'pkce' && !isPKCEFlow) {\n                    throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                if (isPKCEFlow) {\n                    const authCode = (0, helpers_1.getParameterByName)('code');\n                    if (!authCode)\n                        throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n                    const { data, error } = yield this.exchangeCodeForSession(authCode);\n                    if (error)\n                        throw error;\n                    if (!data.session)\n                        throw new errors_1.AuthPKCEGrantCodeExchangeError('No session detected.');\n                    return { data: { session: data.session, redirectType: null }, error: null };\n                }\n                const error_description = (0, helpers_1.getParameterByName)('error_description');\n                if (error_description) {\n                    const error_code = (0, helpers_1.getParameterByName)('error_code');\n                    if (!error_code)\n                        throw new errors_1.AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = (0, helpers_1.getParameterByName)('error');\n                    if (!error)\n                        throw new errors_1.AuthImplicitGrantRedirectError('No error detected.');\n                    throw new errors_1.AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = (0, helpers_1.getParameterByName)('provider_token');\n                const provider_refresh_token = (0, helpers_1.getParameterByName)('provider_refresh_token');\n                const access_token = (0, helpers_1.getParameterByName)('access_token');\n                if (!access_token)\n                    throw new errors_1.AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = (0, helpers_1.getParameterByName)('expires_in');\n                if (!expires_in)\n                    throw new errors_1.AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = (0, helpers_1.getParameterByName)('refresh_token');\n                if (!refresh_token)\n                    throw new errors_1.AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = (0, helpers_1.getParameterByName)('token_type');\n                if (!token_type)\n                    throw new errors_1.AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = (0, helpers_1.getParameterByName)('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return ((0, helpers_1.isBrowser)() &&\n            (Boolean((0, helpers_1.getParameterByName)('access_token')) ||\n                Boolean((0, helpers_1.getParameterByName)('error_description'))));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    _isPKCEFlow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            return (0, helpers_1.isBrowser)() && Boolean((0, helpers_1.getParameterByName)('code')) && Boolean(currentStorageContent);\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401))) {\n                        return { error };\n                    }\n                }\n            }\n            yield this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = (0, helpers_1.uuid)();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        this.emitInitialSession(id);\n        return { data: { subscription } };\n    }\n    emitInitialSession(id) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error, } = yield this.getSession();\n                if (error)\n                    throw error;\n                (_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n            }\n            catch (err) {\n                (_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let codeChallenge = null;\n            if (this.flowType === 'pkce') {\n                const codeVerifier = (0, helpers_1.generatePKCEVerifier)();\n                yield (0, helpers_1.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                codeChallenge = yield (0, helpers_1.generatePKCEChallenge)(codeVerifier);\n            }\n            try {\n                return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: {\n                        email,\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallenge ? 's256' : null,\n                        gotrue_meta_security: { captcha_token: options.captchaToken },\n                    },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startedAt = Date.now();\n                // will attempt to refresh the token with exponential backoff\n                return yield (0, helpers_1.retryable)((attempt) => __awaiter(this, void 0, void 0, function* () {\n                    yield (0, helpers_1.sleep)(attempt * 200); // 0, 200, 400, 800, ...\n                    return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                        body: { refresh_token: refreshToken },\n                        headers: this.headers,\n                        xform: fetch_1._sessionResponse,\n                    });\n                }), (attempt, _, result) => result &&\n                    result.error &&\n                    result.error instanceof errors_1.AuthRetryableFetchError &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams,\n            });\n            // try to open on the browser\n            if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n            }\n            return { data: { provider, url }, error: null };\n        });\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + constants_1.EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new helpers_1.Deferred();\n                if (!refreshToken) {\n                    throw new errors_1.AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new errors_1.AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session, broadcast = true) {\n        if (this.broadcastChannel && broadcast) {\n            this.broadcastChannel.postMessage({ event, session });\n        }\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n        });\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    _startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._stopAutoRefresh();\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n            this.autoRefreshTicker = ticker;\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n            }\n            else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n            }\n            // run the tick immediately\n            yield this._autoRefreshTokenTick();\n        });\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    _stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ticker = this.autoRefreshTicker;\n            this.autoRefreshTicker = null;\n            if (ticker) {\n                clearInterval(ticker);\n            }\n        });\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desireable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._startAutoRefresh();\n        });\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._stopAutoRefresh();\n        });\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    _autoRefreshTokenTick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            try {\n                const { data: { session }, } = yield this.getSession();\n                if (!session || !session.refresh_token || !session.expires_at) {\n                    return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n                    yield this._callRefreshToken(session.refresh_token);\n                }\n            }\n            catch (e) {\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n        });\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    _handleVisibilityChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                if (this.autoRefreshToken) {\n                    // in non-browser environments the refresh token ticker runs always\n                    this.startAutoRefresh();\n                }\n                return false;\n            }\n            try {\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n                // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n                yield this._onVisibilityChanged(true); // initial call\n            }\n            catch (error) {\n                console.error('_handleVisibilityChange', error);\n            }\n        });\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    _onVisibilityChanged(isInitial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                if (!isInitial) {\n                    // initial visibility change setup is handled in another flow under #initialize()\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n                if (this.autoRefreshToken) {\n                    // in browser environments the refresh token ticker runs only on focused tabs\n                    // which prevents race conditions\n                    this._startAutoRefresh();\n                }\n            }\n            else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                }\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlParams = [`provider=${encodeURIComponent(provider)}`];\n            if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n            }\n            if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n            }\n            if (this.flowType === 'pkce') {\n                const codeVerifier = (0, helpers_1.generatePKCEVerifier)();\n                yield (0, helpers_1.setItemAsync)(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                const codeChallenge = yield (0, helpers_1.generatePKCEChallenge)(codeVerifier);\n                const flowParams = new URLSearchParams({\n                    code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                    code_challenge_method: `${encodeURIComponent('s256')}`,\n                });\n                urlParams.push(flowParams.toString());\n            }\n            if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                const query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n            }\n            return `${this.url}/authorize?${urlParams.join('&')}`;\n        });\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors`, {\n                    body: {\n                        friendly_name: params.friendlyName,\n                        factor_type: params.factorType,\n                        issuer: params.issuer,\n                    },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                    body: { code: params.code, challenge_id: params.challengeId },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                return { data, error };\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if ((0, errors_1.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\nexports.default = GoTrueClient;\n//# sourceMappingURL=GoTrueClient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","GoTrueAdminApi_1","constants_1","errors_1","fetch_1","helpers_1","local_storage_1","polyfills_1","polyfillGlobalThis","DEFAULT_OPTIONS","url","GOTRUE_URL","storageKey","STORAGE_KEY","autoRefreshToken","persistSession","detectSessionInUrl","headers","DEFAULT_HEADERS","flowType","GoTrueClient","constructor","options","_a","stateChangeEmitters","Map","initializePromise","refreshingDeferred","visibilityChangedCallback","autoRefreshTicker","broadcastChannel","settings","assign","inMemorySession","storage","default","admin","fetch","resolveFetch","mfa","verify","_verify","bind","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","listFactors","_listFactors","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","isBrowser","globalThis","BroadcastChannel","console","error","addEventListener","event","_notifyAllSubscribers","data","session","initialize","_initialize","isPKCEFlow","_isPKCEFlow","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","setTimeout","_recoverAndRefresh","isAuthError","AuthUnknownError","_handleVisibilityChange","signUp","credentials","_b","_c","res","email","password","_request","redirectTo","emailRedirectTo","body","gotrue_meta_security","captcha_token","captchaToken","xform","_sessionResponse","phone","channel","AuthInvalidCredentialsError","user","signInWithPassword","signInWithOAuth","_d","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","codeVerifier","getItemAsync","auth_code","code_verifier","removeItemAsync","signInWithIdToken","token","nonce","id_token","signInWithOtp","_e","codeChallenge","generatePKCEVerifier","setItemAsync","generatePKCEChallenge","create_user","shouldCreateUser","code_challenge","code_challenge_method","verifyOtp","params","Error","access_token","signInWithSSO","provider_id","providerId","domain","redirect_to","undefined","skip_http_redirect","_ssoResponse","getSession","currentSession","maybeSession","_isValidSession","expires_at","Date","now","_callRefreshToken","refresh_token","getUser","jwt","_userResponse","updateUser","attributes","sessionData","sessionError","AuthSessionMissingError","userError","_decodeJWT","decodeJWTPayload","setSession","timeNow","expiresAt","hasExpired","payload","exp","refreshedSession","token_type","expires_in","refreshSession","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","getParameterByName","error_description","error_code","code","provider_token","provider_refresh_token","Math","round","parseInt","window","location","hash","currentStorageContent","signOut","accessToken","isAuthApiError","status","onAuthStateChange","callback","id","uuid","subscription","unsubscribe","delete","set","emitInitialSession","get","err","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","retryable","attempt","sleep","_","AuthRetryableFetchError","AUTO_REFRESH_TICK_DURATION","_getUrlForProvider","Infinity","EXPIRY_MARGIN","log","message","promise","Deferred","broadcast","postMessage","forEach","x","_persistSession","_removeVisibilityChangedCallback","removeEventListener","_startAutoRefresh","_stopAutoRefresh","ticker","setInterval","_autoRefreshTokenTick","unref","Deno","unrefTimer","clearInterval","startAutoRefresh","stopAutoRefresh","AUTO_REFRESH_TICK_THRESHOLD","floor","expiresInTicks","this.visibilityChangedCallback","_onVisibilityChanged","isInitial","document","visibilityState","urlParams","encodeURIComponent","push","flowParams","URLSearchParams","toString","query","join","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factors","filter","factor","all","currentLevel","nextLevel","currentAuthenticationMethods","aal","length","verifiedFactors","amr"]
}
