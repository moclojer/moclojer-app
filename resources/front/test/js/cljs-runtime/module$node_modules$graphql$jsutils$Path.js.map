{
"version":3,
"file":"module$node_modules$graphql$jsutils$Path.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAMAA,QAAgB,CAACC,IAAD,CAAOC,GAAP,CAAYC,QAAZ,CAAsB,CACpC,MAAO,CACLF,IADK,CAELC,GAFK,CAGLC,QAHK,CAD6B,CALtCP,QAAQQ,CAAAA,WAAR,CAgBAA,QAAoB,CAACC,IAAD,CAAO,CACzB,MAAMC,UAAY,EAGlB,KAAA,CAAOC,IAAP,CAAA,CACED,SAAUE,CAAAA,IAAV,CAAeD,IAAKL,CAAAA,GAApB,CACA,CAAAK,IAAA,CAAOA,IAAKN,CAAAA,IAGd,OAAOK,UAAUG,CAAAA,OAAV,EATkB,CAvB0E;",
"sources":["node_modules/graphql/jsutils/Path.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$jsutils$Path\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.addPath = addPath;\nexports.pathToArray = pathToArray;\n\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nfunction pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","addPath","prev","key","typename","pathToArray","path","flattened","curr","push","reverse"]
}
