{"version":3,"sources":["app/auth/views.cljs"],"mappings":"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","names":["app.auth.views/form-classes","goog/DEBUG","app.auth.views/sig35977","helix.core/signature!","G__35979","props__27104__auto__","maybe-ref__27105__auto__","vec__35984","helix.core/extract-cljs-props","map__35987","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","G__35999","cljs.core/with-meta","helix.core/register!","app.auth.views/text-field","required","name-field","label","class-name","value","disabled","on-change","id","type-field","app.auth.views/sig36001","G__36003","vec__36009","map__36012","G__36021","app.auth.views/AuthLayout","children","app.auth.views/sig36024","G__36026","vec__36027","G__36038","app.auth.views/SignInBtn","app.components.navlink/NavLink","reitit.frontend.easy.href","app.auth.views/sig36040","G__36041","vec__36042","G__36051","app.auth.views/LogOutBtn","helix.core/get-react","obj36037","obj36049","obj36133","obj36152","p1__36093#","obj36157","obj36159","e","refx.alpha/dispatch-sync","refx.alpha/dispatch","app.auth.views/sig36053","G__36063","vec__36068","map__36071","G__36078","app.auth.views/AuthMenu","user","app.auth.views/sig36097","G__36106","vec__36108","G__36164","app.auth.views/login-view","vec__36112","vec__36115","loading?","refx.alpha/use-sub","error","error-res","email-sent?","state","set-state","helix.hooks/use-state","cljs.core.prn","G__36153","G__36154","G__36155","cljs.core/assoc","app.components.alerts/Error","app.components.button/Button","app.components.loading/LoadingSpinner","app.auth.views/sig36165","G__36166","vec__36167","G__36177","app.auth.views/login-auth-view","map__36170","vec__36171","query-params","_error-res","temp__5802__auto__","error-msg","cljs.core/select-keys","obj35994","obj35996","obj35998","helix.impl.props/or-undefined","obj36016","obj36018","obj36020","obj36031","obj36046","obj36123","obj36125","obj36131","obj36137","obj36139","obj36141","obj36143","obj36145","obj36147","obj36149","obj36161","G__36174","helix.hooks/wrap-fx","G__36175","helix.hooks/raw-use-effect"],"sourcesContent":["(ns app.auth.views\n  (:require\n   [app.components.alerts :refer [Error]]\n   [app.components.button :refer [Button]]\n   [app.components.loading :refer [LoadingSpinner]]\n   [app.components.navlink :refer [NavLink]]\n   [app.lib :refer [defnc]]\n   [helix.core :refer [$]]\n   [helix.dom :as d]\n   [helix.hooks :as hooks]\n   [refx.alpha :as refx]\n   [reitit.frontend.easy :as rfe]))\n\n(def form-classes\n  \"block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-blue-500 sm:text-sm\")\n\n(defnc text-field\n  [{:keys [required name-field label class-name value disabled on-change id type-field]}]\n  (d/div {:class-name class-name}\n         (when label\n           (d/label {:html-for id\n                     :class-name \"mb-3 block text-sm font-medium text-gray-700\"}\n                    label))\n         (d/input\n          {:id id\n           :type type-field\n           :class-name form-classes\n           :name name-field\n           :value value\n           :on-change on-change\n           :disabled disabled\n           :required required})))\n\n(defnc AuthLayout\n  [{:keys [children]}]\n  (d/div {:class-name \"relative flex min-h-full justify-center md:px-12 lg:px-0\"}\n         (d/div {:class-name \"relative z-10 flex flex-1 flex-col bg-white py-10 px-4 shadow-2xl sm:justify-center md:flex-none md:px-28\"}\n                (d/div {:class-name \"mx-auto w-full max-w-md sm:px-4 md:w-96 md:max-w-sm md:px-0\"}\n                       children))))\n\n(defnc SignInBtn []\n  (d/div\n   {:class-name \"hidden md:block\"}\n   ($ NavLink {:children \"Sign In\"\n               :href (rfe/href :app.core/login)})))\n\n(defnc LogOutBtn []\n  (d/div\n   {:class-name \"hidden md:block\"}\n   ($ NavLink {:on-click (fn [e]\n                           (.preventDefault e)\n                           (refx/dispatch-sync [:app.routes/push-state :app.core/home])\n                           (refx/dispatch [:app.auth/logout]))\n               :children \"Logout\"\n               :href \"#\"})))\n\n(defnc AuthMenu\n  [{:keys [user]}]\n  (if user\n    ($ LogOutBtn)\n    ($ SignInBtn)))\n\n(defnc login-view []\n  (let [loading? (refx/use-sub [:app.auth/login-loading])\n        [error error-res] (refx/use-sub [:app.auth/login-error])\n        email-sent? (refx/use-sub [:app.auth/email-sent])\n        [state set-state] (hooks/use-state {:email \"\"})]\n    ($ AuthLayout\n       (d/div\n        (if email-sent?\n          (d/div {:id \"login-email-sent\"\n                  :class-name \"flex flex-col\"}\n                 (d/h2\n                  {:class-name \"text-lg font-semibold text-gray-900\"}\n                  \"Check your email, and click on the link.\")\n                 (d/div\n                  (d/div\n                   {:class-name \"mt-2 text-sm text-gray-700\"}\n                   \"Didn't received it?\"\n                   ($ NavLink\n                      {:children \" Try again.\"\n                       :on-click (fn [e]\n                                   (.preventDefault e)\n                                   (refx/dispatch [:app.auth/send-email-again]))\n                       :href \"#\"}))))\n\n          (d/div {:class-name \"flex flex-col\"}\n                 (d/a {:href \"/\"}\n                      (d/img {:class-name \"h-10 w-auto\"})\n                      \"Home\")\n                 (d/div {:class-name \"mt-20\"}\n                        (d/h2 {:class-name \"text-lg font-semibold text-gray-900\"}\n                              \"Sign in to your account\")\n                        (d/p {:class-name \"mt-2 text-sm text-gray-700\"}\n                             \"Don't have an account? \"))\n                 (d/form {:disabled loading?\n                          :class-name \"mt-10 grid grid-cols-1 gap-y-8\"\n                          :on-submit  (fn [e]\n                                        (.preventDefault e)\n                                        (prn \":here\" state)\n                                        (when (:email state)\n                                          (refx/dispatch [:app.auth/send-email state])))}\n                         ($ text-field {:label \"Email address\"\n                                        :id \"login-email\"\n                                        :name \"email\"\n                                        :type-field \"email\"\n                                        :required true\n                                        :value (:email state)\n                                        :disabled loading?\n                                        :on-change #(set-state assoc :email (.. % -target -value))})\n\n                         (when error\n                           ($ Error\n                              {:id \"login-error\"\n                               :error \"Error... try it again.\"\n                               :description (:message error-res)}))\n                         (d/div\n                          ($ Button\n                             {:disabled loading?\n                              :type \"submit\"\n                              :variant \"solid\"\n                              :color \"blue\"\n                              :class-name \"w-full\"}\n                             (if loading?\n                               (d/span {:class-name \"inline-flex\"}\n                                       ($ LoadingSpinner {})\n                                       \"Loading...\")\n                               (d/span \"Sign in\")))))))))))\n\n(defnc login-auth-view []\n  (let [{:keys [query-params]} (refx/use-sub [:app.route/current-route])\n        loading? (refx/use-sub [:app.auth/login-loading])\n        user (refx/use-sub [:app.auth/current-user])\n        [error _error-res] (refx/use-sub [:app.auth/login-error])]\n\n    (when user\n      ;; redirects to home when login success\n      (refx/dispatch [:app.routes/push-state :app.core/home]))\n\n    (when error\n      ;; redirects to login when login fails\n      (refx/dispatch [:app.routes/push-state :app.core/login]))\n\n    (hooks/use-effect\n     [query-params]\n     (if-let [error-msg (:error_description query-params)]\n       (refx/dispatch [:app.auth/error error-msg])\n       (refx/dispatch [:app.auth/login (select-keys query-params [:code])])))\n\n    ($ AuthLayout\n       (when loading?\n         (d/div\n          ;; todo better screen for this\n          (str \"Validating... \" (:code query-params)))))))\n"]}