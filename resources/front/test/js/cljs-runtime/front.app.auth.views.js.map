{"version":3,"sources":["front/app/auth/views.cljs"],"mappings":"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","names":["front.app.auth.views/form-classes","goog/DEBUG","front.app.auth.views/sig59865","helix.core/signature!","G__59883","props__32635__auto__","maybe-ref__32636__auto__","vec__59885","helix.core/extract-cljs-props","map__59888","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","G__59897","cljs.core/with-meta","helix.core/register!","front.app.auth.views/text-field","required","name-field","label","class-name","value","disabled","on-change","id","type-field","front.app.auth.views/sig59898","G__59900","vec__59901","map__59904","G__59914","front.app.auth.views/AuthLayout","children","front.app.auth.views/sig59921","G__59926","vec__59927","G__59934","front.app.auth.views/SignInBtn","front.app.components.navlink/NavLink","reitit.frontend.easy.href","front.app.auth.views/sig59939","G__59940","vec__59941","G__59952","front.app.auth.views/LogOutBtn","helix.core/get-react","obj59933","obj59951","obj59997","obj60013","p1__59964#","obj60018","obj60022","e","refx.alpha/dispatch-sync","refx.alpha/dispatch","front.app.auth.views/sig59956","G__59958","vec__59959","map__59962","G__59963","front.app.auth.views/AuthMenu","user","front.app.auth.views/sig59965","G__59968","vec__59970","G__60027","front.app.auth.views/login-view","vec__59973","vec__59976","loading?","refx.alpha/use-sub","error","error-res","email-sent?","state","set-state","helix.hooks/use-state","G__60014","G__60015","G__60016","cljs.core/assoc","front.app.components.alerts/Error","front.app.components.button/Button","front.app.components.loading/LoadingSpinner","front.app.auth.views/sig60029","G__60030","vec__60031","G__60042","front.app.auth.views/login-auth-view","map__60034","vec__60035","query-params","_error-res","temp__5802__auto__","error-msg","cljs.core/select-keys","obj59892","obj59894","obj59896","helix.impl.props/or-undefined","obj59907","obj59909","obj59912","obj59931","obj59949","obj59991","obj59993","obj59995","obj59999","obj60001","obj60003","obj60005","obj60007","obj60009","obj60011","obj60024","G__60038","helix.hooks/wrap-fx","G__60039","helix.hooks/raw-use-effect"],"sourcesContent":["(ns front.app.auth.views\n  (:require\n   [front.app.components.alerts :refer [Error]]\n   [front.app.components.button :refer [Button]]\n   [front.app.components.loading :refer [LoadingSpinner]]\n   [front.app.components.navlink :refer [NavLink]]\n   [front.app.lib :refer [defnc]]\n   [helix.core :refer [$]]\n   [helix.dom :as d]\n   [helix.hooks :as hooks]\n   [refx.alpha :as refx]\n   [reitit.frontend.easy :as rfe]))\n\n(def form-classes\n  \"block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-blue-500 sm:text-sm\")\n\n(defnc text-field\n  [{:keys [required name-field label class-name value disabled on-change id type-field]}]\n  (d/div {:class-name class-name}\n         (when label\n           (d/label {:html-for id\n                     :class-name \"mb-3 block text-sm font-medium text-gray-700\"}\n                    label))\n         (d/input\n          {:id id\n           :type type-field\n           :class-name form-classes\n           :name name-field\n           :value value\n           :on-change on-change\n           :disabled disabled\n           :required required})))\n\n(defnc AuthLayout\n  [{:keys [children]}]\n  (d/div {:class-name \"relative flex min-h-full justify-center md:px-12 lg:px-0\"}\n         (d/div {:class-name \"relative z-10 flex flex-1 flex-col bg-white py-10 px-4 shadow-2xl sm:justify-center md:flex-none md:px-28\"}\n                (d/div {:class-name \"mx-auto w-full max-w-md sm:px-4 md:w-96 md:max-w-sm md:px-0\"}\n                       children))))\n\n(defnc SignInBtn []\n  (d/div\n   {:class-name \"hidden md:block\"}\n   ($ NavLink {:children \"Sign In\"\n               :href (rfe/href :app.core/login)})))\n\n(defnc LogOutBtn []\n  (d/div\n   {:class-name \"hidden md:block\"}\n   ($ NavLink {:on-click (fn [e]\n                           (.preventDefault e)\n                           (refx/dispatch-sync [:app.routes/push-state :app.core/home])\n                           (refx/dispatch [:app.auth/logout]))\n               :children \"Logout\"\n               :href \"#\"})))\n\n(defnc AuthMenu\n  [{:keys [user]}]\n  (if user\n    ($ LogOutBtn)\n    ($ SignInBtn)))\n\n(defnc login-view []\n  (let [loading? (refx/use-sub [:app.auth/login-loading])\n        [error error-res] (refx/use-sub [:app.auth/login-error])\n        email-sent? (refx/use-sub [:app.auth/email-sent])\n        [state set-state] (hooks/use-state {:email \"\"})]\n    ($ AuthLayout\n       (d/div\n        (if email-sent?\n          (d/div {:id \"login-email-sent\"\n                  :class-name \"flex flex-col\"}\n                 (d/h2\n                  {:class-name \"text-lg font-semibold text-gray-900\"}\n                  \"Check your email, and click on the link.\")\n                 (d/div\n                  (d/div\n                   {:class-name \"mt-2 text-sm text-gray-700\"}\n                   \"Didn't received it?\"\n                   ($ NavLink\n                      {:children \" Try again.\"\n                       :on-click (fn [e]\n                                   (.preventDefault e)\n                                   (refx/dispatch [:app.auth/send-email-again]))\n                       :href \"#\"}))))\n\n          (d/div {:class-name \"flex flex-col\"}\n                 (d/a {:href \"/\"}\n                      (d/img {:class-name \"h-10 w-auto\"})\n                      \"Home\")\n                 (d/div {:class-name \"mt-20\"}\n                        (d/h2 {:class-name \"text-lg font-semibold text-gray-900\"}\n                              \"Sign in to your account\")\n                        (d/p {:class-name \"mt-2 text-sm text-gray-700\"}\n                             \"Don't have an account? \"))\n                 (d/form {:disabled loading?\n                          :class-name \"mt-10 grid grid-cols-1 gap-y-8\"\n                          :on-submit  (fn [e]\n                                        (.preventDefault e)\n                                        (when (:email state)\n                                          (refx/dispatch [:app.auth/send-email state])))}\n                         ($ text-field {:label \"Email address\"\n                                        :id \"login-email\"\n                                        :name \"email\"\n                                        :type-field \"email\"\n                                        :required true\n                                        :value (:email state)\n                                        :disabled loading?\n                                        :on-change #(set-state assoc :email (.. % -target -value))})\n\n                         (when error\n                           ($ Error\n                              {:id \"login-error\"\n                               :error \"Error... try it again.\"\n                               :description (:message error-res)}))\n                         (d/div\n                          ($ Button\n                             {:disabled loading?\n                              :type \"submit\"\n                              :variant \"solid\"\n                              :color \"blue\"\n                              :class-name \"w-full\"}\n                             (if loading?\n                               (d/span {:class-name \"inline-flex\"}\n                                       ($ LoadingSpinner {})\n                                       \"Loading...\")\n                               (d/span \"Sign in\")))))))))))\n\n(defnc login-auth-view []\n  (let [{:keys [query-params]} (refx/use-sub [:app.route/current-route])\n        loading? (refx/use-sub [:app.auth/login-loading])\n        user (refx/use-sub [:app.auth/current-user])\n        [error _error-res] (refx/use-sub [:app.auth/login-error])]\n\n    (when user\n      ;; redirects to home when login success\n      (refx/dispatch [:app.routes/push-state :app.core/home]))\n\n    (when error\n      ;; redirects to login when login fails\n      (refx/dispatch [:app.routes/push-state :app.core/login]))\n\n    (hooks/use-effect\n     [query-params]\n     (if-let [error-msg (:error_description query-params)]\n       (refx/dispatch [:app.auth/error error-msg])\n       (refx/dispatch [:app.auth/login (select-keys query-params [:code])])))\n\n    ($ AuthLayout\n       (when loading?\n         (d/div\n          ;; todo better screen for this\n          (str \"Validating... \" (:code query-params)))))))\n"]}