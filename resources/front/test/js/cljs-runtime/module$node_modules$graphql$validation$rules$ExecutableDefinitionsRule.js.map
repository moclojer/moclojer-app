{
"version":3,
"file":"module$node_modules$graphql$validation$rules$ExecutableDefinitionsRule.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,yBAAR,CAgBAA,QAAkC,CAACC,OAAD,CAAU,CAC1C,MAAO,CACLC,QAAQ,CAACC,IAAD,CAAO,CACb,IAAK,MAAMC,UAAX,GAAyBD,KAAKE,CAAAA,WAA9B,CACO,GAAIC,WAAYC,CAAAA,0BAAhB,EAA4CH,UAA5C,CAAL,EAMEH,OAAQO,CAAAA,WAAR,CACE,IAAIC,aAAcC,CAAAA,YAAlB,CACG,OANHN,UAAWO,CAAAA,IAAXC,GAAoBC,MAAOC,CAAAA,IAAKC,CAAAA,iBAAhCH,EACAR,UAAWO,CAAAA,IADXC,GACoBC,MAAOC,CAAAA,IAAKE,CAAAA,gBADhCJ;AAEI,QAFJA,CAGI,GAHJA,CAGUR,UAAWa,CAAAA,IAAKlB,CAAAA,KAH1Ba,CAGkC,GAG/B,gCADH,CAEE,CACEM,MAAOd,UADT,CAFF,CADF,CAWJ,OAAO,CAAA,CAnBM,CADV,CADmC,CAd5C,KAAIK,cAAgBf,OAAA,CAAQ,gDAAR,CAApB,CAEImB,OAASnB,OAAA,CAAQ,4CAAR,CAFb,CAIIY,YAAcZ,OAAA,CAAQ,iDAAR,CAZiH;",
"sources":["node_modules/graphql/validation/rules/ExecutableDefinitionsRule.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$ExecutableDefinitionsRule\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName =\n            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n            definition.kind === _kinds.Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The ${defName} definition is not executable.`,\n              {\n                nodes: definition,\n              },\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ExecutableDefinitionsRule","context","Document","node","definition","definitions","_predicates","isExecutableDefinitionNode","reportError","_GraphQLError","GraphQLError","kind","defName","_kinds","Kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","nodes"]
}
