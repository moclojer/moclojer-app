{
"version":3,
"file":"module$node_modules$is_typed_array$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrG,IAAIC,QAAUH,OAAA,CAAQ,oCAAR,CACVI,QAAAA,CAAuBJ,OAAA,CAAQ,kDAAR,CAC3B,KAAIK,UAAYL,OAAA,CAAQ,yCAAR,CAAhB,CAEIM,UAAYD,SAAA,CAAU,2BAAV,CAFhB,CAGIE,eAAiBP,OAAA,CAAQ,2CAAR,CAAA,EAHrB,CAIIQ,KAAOR,OAAA,CAAQ,gCAAR,CAJX,CAMIS,EAA0B,WAAtB,GAAA,MAAOC,WAAP,CAAoCX,MAApC,CAA6CW,UANrD;AAOIC,YAAcP,OAAA,EAPlB,CASIQ,SAAWP,SAAA,CAAU,yBAAV,CAAqC,CAAA,CAArC,CAAXO,EAAyDC,QAAgB,CAACC,KAAD,CAAQC,KAAR,CAAe,CAC3F,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,KAAMG,CAAAA,MAA1B,CAAkCD,CAAlC,EAAuC,CAAvC,CACC,GAAIF,KAAA,CAAME,CAAN,CAAJ,GAAiBD,KAAjB,CACC,MAAOC,EAGT,OAAO,CAAC,CANmF,CAT5F,CAiBIE,OAASb,SAAA,CAAU,wBAAV,CAjBb,CAkBIc,UAAY,EAlBhB,CAmBIC,eAAiBC,MAAOD,CAAAA,cACxBb,eAAJ,EAAsBC,IAAtB,EAA8BY,cAA9B,EACCjB,OAAA,CAAQQ,WAAR,CAAqB,QAAS,CAACW,UAAD,CAAa,CAC1C,IAAIC,IAAM,IAAId,CAAA,CAAEa,UAAF,CACd,IAAIE,MAAOC,CAAAA,WAAX,GAA0BF,IAA1B,CAA+B,CAC1BG,GAAAA,CAAQN,cAAA,CAAeG,GAAf,CACZ,KAAII,WAAanB,IAAA,CAAKkB,GAAL,CAAYF,MAAOC,CAAAA,WAAnB,CACZE,WAAL,GACKC,GACJ,CADiBR,cAAA,CAAeM,GAAf,CACjB,CAAAC,UAAA;AAAanB,IAAA,CAAKoB,GAAL,CAAiBJ,MAAOC,CAAAA,WAAxB,CAFd,CAIAN,UAAA,CAAUG,UAAV,CAAA,CAAwBK,UAAWE,CAAAA,GAPL,CAFW,CAA3C,CAcD,KAAIC,eAAiBA,QAA0B,CAACf,KAAD,CAAQ,CACtD,IAAIgB,QAAU,CAAA,CACd5B,QAAA,CAAQgB,SAAR,CAAmB,QAAS,CAACa,MAAD,CAASV,UAAT,CAAqB,CAChD,GAAI,CAACS,OAAL,CACC,GAAI,CACHA,OAAA,CAAUC,MAAOC,CAAAA,IAAP,CAAYlB,KAAZ,CAAV,GAAiCO,UAD9B,CAEF,MAAOY,CAAP,CAAU,EAJmC,CAAjD,CAOA,OAAOH,QAT+C,CAYvD9B,OAAOC,CAAAA,OAAP,CAAiBiC,QAAqB,CAACpB,KAAD,CAAQ,CAC7C,MAAKA,MAAL,EAA+B,QAA/B,GAAc,MAAOA,MAArB,CACKR,cAAL,EAAyBiB,MAAOC,CAAAA,WAAhC,GAA+CV,MAA/C,CAIKP,IAAL,CACOsB,cAAA,CAAef,KAAf,CADP,CAAoB,CAAA,CAJpB,EACKqB,KACG,CADGlB,MAAA,CAAOZ,SAAA,CAAUS,KAAV,CAAP,CAAyB,CAAzB,CAA4B,CAAC,CAA7B,CACH,CAA6B,CAAC,CAA9B,CAAAH,QAAA,CAASD,WAAT,CAAsByB,KAAtB,CAFR,CADA,CAAkD,CAAA,CADL,CApDuD;",
"sources":["node_modules/is-typed-array/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$is_typed_array$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","forEach","availableTypedArrays","callBound","$toString","hasToStringTag","gOPD","g","globalThis","typedArrays","$indexOf","indexOf","array","value","i","length","$slice","toStrTags","getPrototypeOf","Object","typedArray","arr","Symbol","toStringTag","proto","descriptor","superProto","get","tryTypedArrays","anyTrue","getter","call","e","module.exports","tag"]
}
