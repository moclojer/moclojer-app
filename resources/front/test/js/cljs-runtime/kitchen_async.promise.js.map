{"version":3,"sources":["kitchen_async/promise.cljs"],"mappings":"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","names":["kitchen-async.promise/%promise-impl","init","js/Promise","js/goog.Promise","cljs.core.atom","cljs.core/deref","kitchen-async.promise/promise-impl","kitchen-async.promise/set-promise-impl!","impl","cljs.core/reset!","kitchen-async.promise/resolve","x","p","resolve","kitchen-async.promise/reject","_","reject","var_args","G__51470","kitchen-async.promise/then","js/Error","f","kitchen-async.promise/->promise","g","kitchen-async.promise/catch*","kitchen_async.promise.then","cljs.core/identity","kitchen-async.promise/finally*","kitchen-async.promise/all","ps","js/goog.Promise.all","cljs.core.into_array","cljs.core.map","kitchen-async.promise/race","js/goog.Promise.race","G__51476","kitchen-async.promise/timeout","ms","kitchen_async.promise.timeout","v","p__26713__auto__","js/setTimeout","cljs.core/PROTOCOL_SENTINEL","kitchen-async.protocols.promisable/Promisable","kitchen-async.protocols.promisable/->promise*","kitchen-async.promise/promisify","args","err","val","cljs.core.apply","cljs.core.concat","callback"],"sourcesContent":["(ns kitchen-async.promise\n  (:refer-clojure :exclude [resolve])\n  (:require-macros [kitchen-async.promise :as p])\n  (:require goog.Promise\n            [kitchen-async.protocols.promisable :as promisable]))\n\n(def ^:private %promise-impl\n  (let [init (if (exists? js/Promise)\n               js/Promise\n               goog.Promise)]\n    (atom init)))\n\n(defn promise-impl []\n  @%promise-impl)\n\n(defn set-promise-impl! [impl]\n  (reset! %promise-impl impl))\n\n(defn resolve [x]\n  (let [p (promise-impl)]\n    (new p (fn [resolve] (resolve x)))))\n\n(defn reject [x]\n  (let [p (promise-impl)]\n    (new p (fn [_ reject] (reject x)))))\n\n(declare ->promise)\n\n(defn then\n  ([p f]\n   (.then (->promise p) (fn [x] (f x))))\n  ([p f g]\n   (.then (->promise p) (fn [x] (f x)) (fn [x] (g x)))))\n\n(defn catch* [p f]\n  (then p identity f))\n\n(defn finally* [p f]\n  (then p f f))\n\n(defn all [ps]\n  (goog.Promise.all (into-array (map ->promise ps))))\n\n(defn race [ps]\n  (goog.Promise.race (into-array (map ->promise ps))))\n\n(defn timeout\n  ([ms] (timeout ms nil))\n  ([ms v]\n   (p/promise [resolve]\n     (js/setTimeout #(resolve v) ms))))\n\n(extend-protocol promisable/Promisable\n  goog.Promise\n  (->promise* [p] p)\n\n  default\n  (->promise* [x]\n    (resolve x)))\n\n(when (exists? js/Promise)\n  (extend-type js/Promise\n    promisable/Promisable\n    (->promise* [p] p)))\n\n(defn ->promise [x]\n  (promisable/->promise* x))\n\n(defn promisify\n  \"Given a fn that takes a callback fn as its last arg, and returns\n  a modified version of that fn that returns a promise instead of\n  calling the callback\"\n  [f]\n  (fn [& args]\n    (p/promise [resolve reject]\n      (letfn [(callback [err val]\n                (if err\n                  (reject err)\n                  (resolve val)))]\n        (apply f (concat args [callback]))))))\n"]}