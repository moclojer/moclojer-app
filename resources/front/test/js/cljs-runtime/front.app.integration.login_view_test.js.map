{"version":3,"sources":["front/app/integration/login_view_test.cljs"],"mappings":"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","names":["front.app.integration.login-view-test/cljs-test-each-fixtures","front.app.integration.aux/before-fn","front.app.integration.aux/after-fn","front.app.integration.login-view-test/login-error-msw","front.app.integration.login-view-test/login-sucess-msw","cljs.test/test-var","front.app.integration.login-view-test/auth-view-email-send-error-test","cljs.test.update_current_env_BANG_","cljs.core/conj","cljs.test/update-current-env!","cljs.core/rest","js/front","js/front.app","js/front.app.integration","js/front.app.integration.login-view-test","js/front.app.integration.login-view-test.t_front$app$integration$login_view_test62359","front.app.integration.login-view-test/t_front$app$integration$login_view_test62359","_62361","meta62360","cljs.core/PROTOCOL_SENTINEL","unused__11783__auto__","self__","G__62367","js/Error","args62366","cljs.core/aclone","___11442__auto__","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","front.app.integration.login-view-test/->t_front$app$integration$login_view_test62359","done","promesa.protocols/-bind","promesa.protocols/-promise","___32162__auto__","___32147__auto__","___32146__auto__","_","dev.msw.core.start_BANG_","render","front.app.aux.wait_for","front.app.auth.views/login-view","front.app.aux/render","container","button","front.app.aux/tag","cljs.core/first","input","front.app.aux/query","_change","front.app.aux/change","_click","front.app.aux/click","error-msg","front.app.aux/text","values__11360__auto__","cljs.core/List","result__11361__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__11411__auto__","e62376","cljs.core/=","front.app.aux.cleanup","front.app.integration.login-view-test/auth-view-email-send-success-test","js/front.app.integration.login-view-test.t_front$app$integration$login_view_test62382","front.app.integration.login-view-test/t_front$app$integration$login_view_test62382","_62384","meta62383","G__62386","args62385","front.app.integration.login-view-test/->t_front$app$integration$login_view_test62382","success-msg","e62388"],"sourcesContent":["(ns front.app.integration.login-view-test\n  (:require [front.app.auth.events]\n            [front.app.auth.subs]\n            [front.app.auth.views :as auth.views]\n            [front.app.aux :as aux]\n            [front.app.integration.aux :refer [after-fn before-fn]]\n            [cljs.test :refer [async deftest is testing use-fixtures]]\n            [dev.msw.core :as mock]\n            [promesa.core :as p]))\n\n(use-fixtures :each\n  {:before before-fn\n   :after after-fn})\n\n;; http mocks\n\n(def login-error-msw\n  {\"/login/send-email\"\n   {:post {:lag 300\n           :status 500\n           :content-type :json\n           :body #js {:message \"Not found\"}}}})\n\n(def login-sucess-msw\n  {\"/login/send-email\"\n   {:post {:lag 300\n           :status 201\n           :content-type :json\n           :body #js {:ok true}}}})\n\n(deftest auth-view-email-send-error-test\n  (testing \"auth email send view should error\"\n    (async done\n           (p/let [_ (mock/start! login-error-msw)\n                   render (aux/wait-for #(-> auth.views/login-view aux/render))\n                   container (aux/wait-for #(.-container render))\n                   button (-> container (aux/tag \"button\") first)\n                   input (-> container (aux/query \"#login-email\"))\n                   _change (aux/wait-for #(-> input (aux/change \"err@ee.cc\")))\n                   _click (aux/wait-for #(-> button aux/click))\n                   error-msg (aux/wait-for #(-> container (aux/query \"#login-error\") aux/text))]\n             (is (= \"Error... try it again.Not found\" error-msg))\n             (aux/cleanup)\n             (done)))))\n\n(deftest auth-view-email-send-success-test\n  (testing \"auth email send view should work and show next panel\"\n    (async done\n           (p/let [_ (mock/start! login-sucess-msw)\n                   render (aux/wait-for #(-> auth.views/login-view aux/render))\n                   container (aux/wait-for #(.-container render))\n                   button (-> container (aux/tag \"button\") first)\n                   input (-> container (aux/query \"#login-email\"))\n                   _change (aux/wait-for #(-> input (aux/change \"nice@email.cc\")))\n                   _click (aux/wait-for #(-> button aux/click))\n                   success-msg (aux/wait-for #(-> container (aux/query \"#login-email-sent\") aux/text))]\n             (is (= \"Check your email, and click on the link.Didn't received it? Try again.\" success-msg))\n             (aux/cleanup)\n             (done)))))\n"]}