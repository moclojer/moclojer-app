shadow$provide.module$node_modules$$testing_library$dom$dist$role_helpers=function(global,require,module,exports){function isSubtreeInaccessible(element){return!0===element.hidden||"true"===element.getAttribute("aria-hidden")||"none"===element.ownerDocument.defaultView.getComputedStyle(element).display?!0:!1}function isInaccessible(element,options={}){({isSubtreeInaccessible:options=isSubtreeInaccessible}=options);if("hidden"===element.ownerDocument.defaultView.getComputedStyle(element).visibility)return!0;
for(;element;){if(options(element))return!0;element=element.parentElement}return!1}function getImplicitAriaRoles(currentNode){for(const {match,roles}of elementRoleList)if(match(currentNode))return[...roles];return[]}function getRoles(container,{hidden=!1}={}){function flattenDOM(node){return[node,...Array.from(node.children).reduce((acc,child)=>[...acc,...flattenDOM(child)],[])]}return flattenDOM(container).filter(element=>!1===hidden?!1===isInaccessible(element):!0).reduce((acc,node)=>{let roles=
[];roles=node.hasAttribute("role")?node.getAttribute("role").split(" ").slice(0,1):getImplicitAriaRoles(node);return roles.reduce((rolesAcc,role)=>Array.isArray(rolesAcc[role])?{...rolesAcc,[role]:[...rolesAcc[role],node]}:{...rolesAcc,[role]:[node]},acc)},{})}function prettyRoles(dom,{hidden,includeDescription}){dom=getRoles(dom,{hidden});return Object.entries(dom).filter(([role])=>"generic"!==role).map(([role,elements])=>{const delimiterBar="-".repeat(50);elements=elements.map(el=>{const nameString=
`Name "${(0,_domAccessibilityApi.computeAccessibleName)(el,{computedStyleSupportsPseudoElements:(0,_config.getConfig)().computedStyleSupportsPseudoElements})}":\n`,domString=(0,_prettyDom.prettyDOM)(el.cloneNode(!1));return includeDescription?(el=`Description "${(0,_domAccessibilityApi.computeAccessibleDescription)(el,{computedStyleSupportsPseudoElements:(0,_config.getConfig)().computedStyleSupportsPseudoElements})}":\n`,`${nameString}${el}${domString}`):`${nameString}${domString}`}).join("\n\n");
return`${role}:\n\n${elements}\n\n${delimiterBar}`}).join("\n")}function checkBooleanAttribute(element,attribute){element=element.getAttribute(attribute);if("true"===element)return!0;if("false"===element)return!1}Object.defineProperty(exports,"__esModule",{value:!0});exports.computeAriaBusy=function(element){return"true"===element.getAttribute("aria-busy")};exports.computeAriaChecked=function(element){if(!("indeterminate"in element&&element.indeterminate))return"checked"in element?element.checked:
checkBooleanAttribute(element,"aria-checked")};exports.computeAriaCurrent=function(element){return checkBooleanAttribute(element,"aria-current")??element.getAttribute("aria-current")??!1};exports.computeAriaExpanded=function(element){return checkBooleanAttribute(element,"aria-expanded")};exports.computeAriaPressed=function(element){return checkBooleanAttribute(element,"aria-pressed")};exports.computeAriaSelected=function(element){return"OPTION"===element.tagName?element.selected:checkBooleanAttribute(element,
"aria-selected")};exports.computeAriaValueMax=function(element){element=element.getAttribute("aria-valuemax");return null===element?void 0:+element};exports.computeAriaValueMin=function(element){element=element.getAttribute("aria-valuemin");return null===element?void 0:+element};exports.computeAriaValueNow=function(element){element=element.getAttribute("aria-valuenow");return null===element?void 0:+element};exports.computeAriaValueText=function(element){element=element.getAttribute("aria-valuetext");
return null===element?void 0:element};exports.computeHeadingLevel=function(element){const implicitHeadingLevels={H1:1,H2:2,H3:3,H4:4,H5:5,H6:6};return element.getAttribute("aria-level")&&Number(element.getAttribute("aria-level"))||implicitHeadingLevels[element.tagName]};exports.getImplicitAriaRoles=getImplicitAriaRoles;exports.getRoles=getRoles;exports.isInaccessible=isInaccessible;exports.isSubtreeInaccessible=isSubtreeInaccessible;exports.logRoles=void 0;exports.prettyRoles=prettyRoles;global=require("module$node_modules$aria_query$lib$index");
var _domAccessibilityApi=require("module$node_modules$dom_accessibility_api$dist$index"),_prettyDom=require("module$node_modules$$testing_library$dom$dist$pretty_dom"),_config=require("module$node_modules$$testing_library$dom$dist$config");const elementRoleList=function(elementRolesMap){function makeElementSelector({name,attributes}){return`${name}${attributes.map(({name:attributeName,value,constraints=[]})=>-1!==constraints.indexOf("undefined")?`:not([${attributeName}])`:value?`[${attributeName}="${value}"]`:
`[${attributeName}]`).join("")}`}function getSelectorSpecificity({attributes=[]}){return attributes.length}function match(element){let {attributes=[]}=element;const typeTextIndex=attributes.findIndex(attribute=>attribute.value&&"type"===attribute.name&&"text"===attribute.value);0<=typeTextIndex&&(attributes=[...attributes.slice(0,typeTextIndex),...attributes.slice(typeTextIndex+1)]);const selector=makeElementSelector({...element,attributes});return node=>0<=typeTextIndex&&"text"!==node.type?!1:node.matches(selector)}
let result=[];for(const [element,roles]of elementRolesMap.entries())result=[...result,{match:match(element),roles:Array.from(roles),specificity:getSelectorSpecificity(element)}];return result.sort(function({specificity:leftSpecificity},{specificity:rightSpecificity}){return rightSpecificity-leftSpecificity})}(global.elementRoles);exports.logRoles=(dom,{hidden=!1}={})=>console.log(prettyRoles(dom,{hidden}))}
//# sourceMappingURL=module$node_modules$$testing_library$dom$dist$role_helpers.js.map
