shadow$provide.module$node_modules$graphql$validation$rules$UniqueDirectivesPerLocationRule=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.UniqueDirectivesPerLocationRule=function(context){const uniqueDirectiveMap=Object.create(null);var schema=context.getSchema();schema=schema?schema.getDirectives():_directives.specifiedDirectives;for(var directive$jscomp$0 of schema)uniqueDirectiveMap[directive$jscomp$0.name]=!directive$jscomp$0.isRepeatable;
directive$jscomp$0=context.getDocument().definitions;for(const def of directive$jscomp$0)def.kind===_kinds.Kind.DIRECTIVE_DEFINITION&&(uniqueDirectiveMap[def.name.value]=!def.repeatable);const schemaDirectives=Object.create(null),typeDirectivesMap=Object.create(null);return{enter(node){if("directives"in node&&node.directives){if(node.kind===_kinds.Kind.SCHEMA_DEFINITION||node.kind===_kinds.Kind.SCHEMA_EXTENSION)var seenDirectives=schemaDirectives;else if((0,_predicates.isTypeDefinitionNode)(node)||
(0,_predicates.isTypeExtensionNode)(node)){const typeName=node.name.value;seenDirectives=typeDirectivesMap[typeName];void 0===seenDirectives&&(typeDirectivesMap[typeName]=seenDirectives=Object.create(null))}else seenDirectives=Object.create(null);for(const directive of node.directives)node=directive.name.value,uniqueDirectiveMap[node]&&(seenDirectives[node]?context.reportError(new _GraphQLError.GraphQLError(`The directive "@${node}" can only be used once at this location.`,{nodes:[seenDirectives[node],
directive]})):seenDirectives[node]=directive)}}}};var _GraphQLError=require("module$node_modules$graphql$error$GraphQLError"),_kinds=require("module$node_modules$graphql$language$kinds"),_predicates=require("module$node_modules$graphql$language$predicates"),_directives=require("module$node_modules$graphql$type$directives")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$UniqueDirectivesPerLocationRule.js.map
