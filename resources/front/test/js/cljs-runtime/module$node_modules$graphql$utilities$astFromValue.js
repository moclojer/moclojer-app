shadow$provide.module$node_modules$graphql$utilities$astFromValue=function(global,require,module,exports){function astFromValue(value,type){if((0,_definition.isNonNullType)(type))return value=astFromValue(value,type.ofType),(null===value||void 0===value?void 0:value.kind)===_kinds.Kind.NULL?null:value;if(null===value)return{kind:_kinds.Kind.NULL};if(void 0===value)return null;if((0,_definition.isListType)(type)){type=type.ofType;if((0,_isIterableObject.isIterableObject)(value)){var valuesNodes=[];
for(var item of value)value=astFromValue(item,type),null!=value&&valuesNodes.push(value);return{kind:_kinds.Kind.LIST,values:valuesNodes}}return astFromValue(value,type)}if((0,_definition.isInputObjectType)(type)){if(!(0,_isObjectLike.isObjectLike)(value))return null;item=[];for(valuesNodes of Object.values(type.getFields()))(type=astFromValue(value[valuesNodes.name],valuesNodes.type))&&item.push({kind:_kinds.Kind.OBJECT_FIELD,name:{kind:_kinds.Kind.NAME,value:valuesNodes.name},value:type});return{kind:_kinds.Kind.OBJECT,
fields:item}}if((0,_definition.isLeafType)(type)){value=type.serialize(value);if(null==value)return null;if("boolean"===typeof value)return{kind:_kinds.Kind.BOOLEAN,value};if("number"===typeof value&&Number.isFinite(value))return value=String(value),integerStringRegExp.test(value)?{kind:_kinds.Kind.INT,value}:{kind:_kinds.Kind.FLOAT,value};if("string"===typeof value)return(0,_definition.isEnumType)(type)?{kind:_kinds.Kind.ENUM,value}:type===_scalars.GraphQLID&&integerStringRegExp.test(value)?{kind:_kinds.Kind.INT,
value}:{kind:_kinds.Kind.STRING,value};throw new TypeError(`Cannot convert value to AST: ${(0,_inspect.inspect)(value)}.`);}(0,_invariant.invariant)(!1,"Unexpected input type: "+(0,_inspect.inspect)(type))}Object.defineProperty(exports,"__esModule",{value:!0});exports.astFromValue=astFromValue;var _inspect=require("module$node_modules$graphql$jsutils$inspect"),_invariant=require("module$node_modules$graphql$jsutils$invariant"),_isIterableObject=require("module$node_modules$graphql$jsutils$isIterableObject"),
_isObjectLike=require("module$node_modules$graphql$jsutils$isObjectLike"),_kinds=require("module$node_modules$graphql$language$kinds"),_definition=require("module$node_modules$graphql$type$definition"),_scalars=require("module$node_modules$graphql$type$scalars");const integerStringRegExp=/^-?(?:0|[1-9][0-9]*)$/}
//# sourceMappingURL=module$node_modules$graphql$utilities$astFromValue.js.map
