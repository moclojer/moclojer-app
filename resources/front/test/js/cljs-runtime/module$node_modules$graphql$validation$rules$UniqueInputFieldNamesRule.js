shadow$provide.module$node_modules$graphql$validation$rules$UniqueInputFieldNamesRule=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.UniqueInputFieldNamesRule=function(context){const knownNameStack=[];let knownNames=Object.create(null);return{ObjectValue:{enter(){knownNameStack.push(knownNames);knownNames=Object.create(null)},leave(){const prevKnownNames=knownNameStack.pop();prevKnownNames||(0,_invariant.invariant)(!1);knownNames=prevKnownNames}},
ObjectField(node){const fieldName=node.name.value;knownNames[fieldName]?context.reportError(new _GraphQLError.GraphQLError(`There can be only one input field named "${fieldName}".`,{nodes:[knownNames[fieldName],node.name]})):knownNames[fieldName]=node.name}}};var _invariant=require("module$node_modules$graphql$jsutils$invariant"),_GraphQLError=require("module$node_modules$graphql$error$GraphQLError")}
//# sourceMappingURL=module$node_modules$graphql$validation$rules$UniqueInputFieldNamesRule.js.map
